(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    538584,      11326]
NotebookOptionsPosition[    518962,      10635]
NotebookOutlinePosition[    520562,      10680]
CellTagsIndexPosition[    520474,      10675]
WindowTitle->PopulationGrowth - Wolfram Mathematica
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["EconMult",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:EconMult/guide/EconMult"],
 StyleBox[" > ", "LinkTrailSeparator"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["ECONMULT PACLET SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"EquilibriumBiomass\"\>":>
       Documentation`HelpLookup["paclet:EconMult/ref/EquilibriumBiomass"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"EconMult/ref/PopulationGrowth\"\>":>
       None, "\<\"Copy Mathematica url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["EconMult/ref/PopulationGrowth"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/mathematica/EconMult/ref/\
PopulationGrowth.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
            "http://reference.wolfram.com/mathematica/", 
             "EconMult/ref/PopulationGrowth", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["PopulationGrowth", "ObjectName",
 CellID->1224892054],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PopulationGrowth", "[", "opt", "]"}]], "InlineFormula"],
     " \[LineSeparator]calculates the population equilibrium biomass for the \
given options"
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}},
 CellID->982511436]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[
  FrameBox[
   StyleBox[
    RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"],
   StripOnInput->False],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->946433363],

Cell["\<\
PopulationGrowth is the core function of the subpackage PopulationGrowth in \
EconMult, including a number of optional settings (see below)\
\>", "Notes",
 CellID->165260080],

Cell[TextData[{
 "PopulationGrowth is based on the Beverton and Holt model as described in\
\[LineSeparator]\t",
 StyleBox["Beverton, R.J.H. and S.J. Holt, (1957). On the dynamics of \
exploited fish populations.\[LineSeparator]\tHer Majesty\[CloseCurlyQuote]s \
Stationery Office, Ministry of Agriculture,\[LineSeparator]\tFisheries and \
Food. Fishery Investigations, Ser. II, Vol. XIX. London. 533 pp.\
\[LineSeparator]\tFacsimile reprint 1993 by Chapman & Hall, London.",
  FontSize->10]
}], "Notes",
 CellID->132302782],

Cell[TextData[{
 "PopulationGrowth gives the population biomass of all cohorts represented in \
",
 Cell[BoxData[
  ButtonBox["BiomassIncluded",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/BiomassIncluded"]], "InlineFormula"]
}], "Notes",
 CellID->1067943069],

Cell[TextData[{
 "PopulationGrowth[OldestAge -> t, CatchAge -> 0,opts] is equivalent with ",
 Cell[BoxData[
  ButtonBox["PopulationBiomass",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PopulationBiomass"]], "InlineFormula"],
 "[t, opts]"
}], "Notes",
 CellID->340897106]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["EXAMPLES",
 BaseStyle->None,
 Appearance->{Automatic, None},
 Evaluator->None,
 Method->"Preemptive",
 ButtonFunction:>(FrontEndExecute[{
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], All, ButtonCell], 
    FrontEndToken["OpenCloseGroup"], 
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], After, 
     CellContents]}]& )]], "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->701497034],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection",
 CellID->253990142],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EconMult`PopulationGrowth`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->272567927],

Cell["\<\
The default setting of PopulationGrowth can not express the population \
biomass by the included parameters\
\>", "ExampleText",
 CellID->7903785],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PopulationGrowth", "[", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->165013869],

Cell[BoxData["PGX"], "Output",
 ImageSize->{25, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->39990964]
}, Open  ]],

Cell["The most general analytical solution is found by", "ExampleText",
 CellID->57828272],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{"InitialAge", "\[Rule]", "0"}], "]"}], "//", "Notation"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->70505033],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"\<\"R\"\>", " ", 
     SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\<\"b\"\>"}]}], "+", 
       RowBox[{"\<\"F\"\>", " ", 
        SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], "+", 
       RowBox[{"\<\"M\"\>", " ", 
        SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\"k\"", " ", 
            SubscriptBox["\"t\"", "\[Infinity]"]}]],RowBox[{"-", 
           FractionBox[
            RowBox[{"\"F\"", "+", 
              RowBox[{"\"b\"", " ", "\"k\""}], "+", "\"M\""}], "\"k\""]}],
         RowBox[{"\"b\"", "+", "1"}]},
        "Beta3"], "-", 
       TemplateBox[{SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\"k\"", " ", 
            SubscriptBox["\"t\"", "\"c\""]}]],RowBox[{"-", 
           FractionBox[
            RowBox[{"\"F\"", "+", 
              RowBox[{"\"b\"", " ", "\"k\""}], "+", "\"M\""}], "\"k\""]}],
         RowBox[{"\"b\"", "+", "1"}]},
        "Beta3"]}], ")"}]}], "\<\"k\"\>"],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{383, 44},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]//TraditionalForm=",
 CellID->514607365]
}, Open  ]],

Cell[TextData[{
 "Another analytical solution is obtained when setting ",
 Cell[BoxData[
  ButtonBox["WeightLengthRelation",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/WeightLengthRelation"]], "InlineFormula"],
 " to 3:"
}], "ExampleText",
 CellID->271391132],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyNotation", "@", 
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], "]"}]}]], "Input",
 CellLabel->"In[4]:=",
 CellID->235911115],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"\<\"R\"\>", " ", 
    SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"\<\"F\"\>", " ", 
       SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], "+", 
      RowBox[{"\<\"M\"\>", " ", 
       SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\<\"k\"\>", " ", 
            SubscriptBox["\<\"t\"\>", "0"]}], "-", 
           RowBox[{
            SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
            RowBox[{"(", 
             RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}], 
             ")"}]}]}]]}], 
        RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"2", " ", "\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}], "-", 
          RowBox[{
           SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
           RowBox[{"(", 
            RowBox[{"\<\"F\"\>", "+", 
             RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], 
            ")"}]}]}]]}], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}], "-", 
         RowBox[{
          SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
          RowBox[{"(", 
           RowBox[{"\<\"F\"\>", "+", 
            RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}]}]], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}]}], ")"}]}]], 
       RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}], "-", 
          RowBox[{
           SubscriptBox["\<\"t\"\>", "\[Infinity]"], " ", 
           RowBox[{"(", 
            RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}], 
            ")"}]}]}]]}], 
       RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"2", " ", "\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}], "-", 
          RowBox[{
           SubscriptBox["\<\"t\"\>", "\[Infinity]"], " ", 
           RowBox[{"(", 
            RowBox[{"\<\"F\"\>", "+", 
             RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], 
            ")"}]}]}]]}], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}], "-", 
         RowBox[{
          SubscriptBox["\<\"t\"\>", "\[Infinity]"], " ", 
          RowBox[{"(", 
           RowBox[{"\<\"F\"\>", "+", 
            RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}]}]], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}]}], " ", 
         SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], 
       RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{493, 91},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]//TraditionalForm=",
 CellID->190055808]
}, Open  ]],

Cell[TextData[{
 "An more simple expression is found when setting ",
 Cell[BoxData[
  ButtonBox["Fishing",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/Fishing"]], "InlineFormula"],
 " to False (default True) and ",
 Cell[BoxData[
  ButtonBox["BiomassIncluded",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/BiomassIncluded"]], "InlineFormula"],
 " to All (default ",
 Cell[BoxData[
  ButtonBox["Fishable",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/Fishable"]], "InlineFormula"],
 ")"
}], "ExampleText",
 CellID->80228171],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
    RowBox[{"Fishing", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->271431007],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"-", "\<\"R\"\>"}], " ", 
    SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\<\"M\"\>", " ", 
      SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}], ")"}]}], " ", 
             SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", "1"}], ")"}]}], 
        RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}], 
            " ", 
            SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", "1"}], ")"}]}], 
       RowBox[{
        RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"3", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}], 
            " ", 
            SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", "1"}], ")"}]}], 
       RowBox[{
        RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\<\"M\"\>"}], " ", 
          SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", 
        "1"}], "\<\"M\"\>"]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{563, 41},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]//TraditionalForm=",
 CellID->553869347]
}, Open  ]],

Cell["Including non-fishable biomass when fishing:", "ExampleText",
 CellID->642728740],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
    RowBox[{"Fishing", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[6]:=",
 CellID->246149518],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"\<\"R\"\>", " ", 
      SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\<\"F\"\>", " ", 
         SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], "+", 
        RowBox[{"\<\"M\"\>", " ", 
         SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\<\"k\"\>", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\<\"t\"\>", "0"], "-", 
               SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}], "-", 
            RowBox[{
             SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
             RowBox[{"(", 
              RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}]}]}]]}], 
         RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", "\<\"k\"\>", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\<\"t\"\>", "0"], "-", 
               SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}], "-", 
            RowBox[{
             SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
             RowBox[{"(", 
              RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}]}]}]]}], 
         RowBox[{"\<\"F\"\>", "+", 
          RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "\<\"k\"\>", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\<\"t\"\>", "0"], "-", 
              SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
            RowBox[{"(", 
             RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}]}]}]], 
         RowBox[{"\<\"F\"\>", "+", 
          RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}]}], ")"}]}]], 
         RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\<\"k\"\>", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\<\"t\"\>", "0"], "-", 
               SubscriptBox["\<\"t\"\>", "\[Infinity]"]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}], " ", 
             SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]}]]}], 
         RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", "\<\"k\"\>", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\<\"t\"\>", "0"], "-", 
               SubscriptBox["\<\"t\"\>", "\[Infinity]"]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}], " ", 
             SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]}]]}], 
         RowBox[{"\<\"F\"\>", "+", 
          RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "\<\"k\"\>", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\<\"t\"\>", "0"], "-", 
              SubscriptBox["\<\"t\"\>", "\[Infinity]"]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}], " ", 
            SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]}]], 
         RowBox[{"\<\"F\"\>", "+", 
          RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}], ")"}]}], " ", 
           SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], 
         RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}]}]}], "-", 
    RowBox[{"\<\"R\"\>", " ", 
     SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\<\"M\"\>", " ", 
       SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\<\"k\"\>", " ", 
            SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}], ")"}]}], ")"}]}]], 
            "-", "1"}], ")"}]}], 
         RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}],
               ")"}]}]], "-", "1"}], ")"}]}], 
        RowBox[{
         RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3", " ", "\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}],
               ")"}]}]], "-", "1"}], ")"}]}], 
        RowBox[{
         RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\<\"M\"\>"}], " ", 
           SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}]], "-", 
         "1"}], "\<\"M\"\>"]}], ")"}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{566, 140},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]//TraditionalForm=",
 CellID->629465931]
}, Open  ]],

Cell["An still general, though more simple expression is found by", \
"ExampleText",
 CellID->349083649],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    RowBox[{"OldestAge", "\[Rule]", "Infinity"}]}], "]"}], "//", 
  "SimplifyNotation"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->83691798],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"\<\"R\"\>", " ", 
    SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\<\"M\"\>", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\<\"t\"\>", "\<\"R\"\>"], "-", 
        SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\<\"k\"\>", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\<\"t\"\>", "0"], "-", 
             SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
        RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\<\"k\"\>", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\<\"t\"\>", "0"], "-", 
            SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3", " ", "\<\"k\"\>", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\<\"t\"\>", "0"], "-", 
           SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
      FractionBox["1", 
       RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{374, 42},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]//TraditionalForm=",
 CellID->62574209]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["BiomassIncluded",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/BiomassIncluded"]], "InlineFormula"],
 " is by default set to ",
 Cell[BoxData[
  ButtonBox["Fishable",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/Fishable"]], "InlineFormula"],
 ": and ",
 Cell[BoxData[
  ButtonBox["PopulationModel",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PopulationModel"]], "InlineFormula"],
 " to  ",
 ButtonBox["BevertonHoltModel. ",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/BevertonHoltModel"],
 "The fishable population biomass when not fishing is zero:"
}], "ExampleText",
 CellID->163467103],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PopulationGrowth", "[", 
  RowBox[{
   RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
   RowBox[{"Fishing", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->870654935],

Cell[BoxData["0"], "Output",
 ImageSize->{11, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->355019661]
}, Open  ]],

Cell["\<\
A numerical example: The yield per recruit surface  is easily displayed in a \
3D plot:\
\>", "ExampleText",
 CellID->673852804],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"F", " ", 
    RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FishingMortalityRate", "\[Rule]", "F"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CatchAge", "\[Rule]", "tc"}], ",", "\[IndentingNewLine]", 
      RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GrowthRate", "\[Rule]", 
       RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MortalityRate", "\[Rule]", 
       RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BiomassIncluded", "\[Rule]", "Fishable"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fishing", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"tc", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"MeshFunctions", "->", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->770724696],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 140}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 140},
  PlotRange->{{0, 180}, {0, 140}}]], "Output",
 ImageSize->{184, 140},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[9]=",
 CellID->106874982]
}, Open  ]],

Cell["\<\
Other population growth models may be used. The logistic model is the default \
surplus production model:\
\>", "ExampleText",
 CellID->4285841],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{"PopulationModel", "\[Rule]", "SurplusProduction"}], 
   "]"}]}]], "Input",
 CellLabel->"In[10]:=",
 CellID->206144046],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"4", " ", "\<\"MSY\"\>", " ", "\<\"X\"\>", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["\<\"X\"\>", "\<\"K\"\>"]}], ")"}]}], "\<\"K\"\>"],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{94, 44},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[10]//TraditionalForm=",
 CellID->118608341]
}, Open  ]],

Cell[TextData[{
 "By default ",
 Cell[BoxData[
  ButtonBox["MaximumSustainableYield",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/MaximumSustainableYield"]], 
  "InlineFormula"],
 " is used to parameterise the surplus production model. By setting ",
 Cell[BoxData[
  ButtonBox["UseMSY",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/UseMSY"]], "InlineFormula"],
 " to False, MSY is replaced by the ",
 Cell[BoxData[
  ButtonBox["IntrinsicGrowthRate",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/IntrinsicGrowthRate"]], "InlineFormula"],
 " (r):"
}], "ExampleText",
 CellID->295623005],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"PopulationModel", "\[Rule]", "SurplusProduction"}], ",", 
    RowBox[{"UseMSY", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[11]:=",
 CellID->313458268],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"\<\"r\"\>", " ", "\<\"X\"\>", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["\<\"X\"\>", "\<\"K\"\>"]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{65, 33},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[11]//TraditionalForm=",
 CellID->293438328]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Options",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(40)", "ExampleCount"]
  }], "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "WeightLengthParameter",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1757724783],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd ",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"],
 "and is only included when ",
 Cell[BoxData[
  ButtonBox["UseWeight",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/UseWeight"]], "InlineFormula"],
 " is set to False."
}], "ExampleText",
 CellID->944233520],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UseWeight", "\[Rule]", "False"}], ",", 
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
    RowBox[{"Fishing", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->249388565],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"-", "\<\"d\"\>"}], " ", "\<\"R\"\>", " ", 
    SubsuperscriptBox["\<\"L\"\>", "\[Infinity]", "3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\<\"M\"\>", " ", 
      SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}], ")"}]}], " ", 
             SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", "1"}], ")"}]}], 
        RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}], 
            " ", 
            SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", "1"}], ")"}]}], 
       RowBox[{
        RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"3", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], ")"}]}], 
            " ", 
            SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", "1"}], ")"}]}], 
       RowBox[{
        RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\<\"M\"\>"}], " ", 
          SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", 
        "1"}], "\<\"M\"\>"]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{567, 41},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]//TraditionalForm=",
 CellID->178512605]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UseWeight", "\[Rule]", "False"}], ",", 
    RowBox[{"InitialAge", "\[Rule]", "0"}], ",", 
    RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
    RowBox[{"Fishing", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->270885764],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"-", "\<\"b\"\>"}]], " ", "\<\"d\"\>", " ", "\<\"R\"\>", " ", 
     SubsuperscriptBox["\<\"L\"\>", "\[Infinity]", "\<\"b\"\>"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\<\"M\"\>", " ", 
       SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        TemplateBox[{RowBox[{"-", 
            FractionBox[
             RowBox[{"\"M\"", "-", "\"k\""}], "\"k\""]}]},
         "Gamma"], " ", 
        TemplateBox[{SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\"k\"", " ", 
             SubscriptBox["\"t\"", "\[Infinity]"]}]],RowBox[{"-", 
            FractionBox[
             RowBox[{
               RowBox[{"\"b\"", " ", "\"k\""}], "+", "\"M\""}], "\"k\""]}],
          RowBox[{"\"b\"", "+", "1"}]},
         "Beta3"]}], "-", 
       RowBox[{
        TemplateBox[{RowBox[{"\"b\"", "+", "1"}]},
         "Gamma"], " ", 
        TemplateBox[{RowBox[{"-", 
            FractionBox[
             RowBox[{
               RowBox[{"\"b\"", " ", "\"k\""}], "+", "\"M\""}], "\"k\""]}]},
         "Gamma"]}]}], ")"}]}], 
    RowBox[{"\<\"k\"\>", " ", 
     TemplateBox[{RowBox[{"-", 
         FractionBox[
          RowBox[{"\"M\"", "-", "\"k\""}], "\"k\""]}]},
      "Gamma"]}]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{391, 54},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]//TraditionalForm=",
 CellID->339872531]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UseWeight", "\[Rule]", "False"}], ",", 
    RowBox[{"InitialAge", "\[Rule]", "0"}], ",", 
    RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", 
    RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", 
    RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
    RowBox[{"Fishing", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->341905564],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"\<\"d\"\>", " ", "\<\"R\"\>", " ", 
     SubsuperscriptBox["\<\"L\"\>", "\[Infinity]", "\<\"b\"\>"], " ", 
     TemplateBox[{
      "1",FractionBox["\"M\"", "\"k\""],RowBox[{"\"b\"", "+", "1"}]},
      "Beta3"]}], "\<\"k\"\>"],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{111, 44},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]//TraditionalForm=",
 CellID->631545553]
}, Open  ]],

Cell["WeightLengthParameter is defined by", "ExampleText",
 CellID->750062201],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"IndividualWeight", "[", 
        RowBox[{"t", ",", 
         RowBox[{"UseWeight", "\[Rule]", "False"}]}], "]"}], "/", 
       RowBox[{"IndividualWeight", "[", 
        RowBox[{"t", ",", 
         RowBox[{"UseWeight", "\[Rule]", "True"}]}], "]"}]}], "\[Equal]", 
      "1"}], ",", "PGd"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "SimplifyNotation"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->504701840],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"\<\"d\"\>", "\[Rule]", 
         RowBox[{
          SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
          SubsuperscriptBox["\<\"L\"\>", "\[Infinity]", 
           RowBox[{"-", "\<\"b\"\>"}]]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{81, 17},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]//TraditionalForm=",
 CellID->949423687]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "WeightLengthRelation",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1295379749],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthRelation",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthRelation"],
 " is set to the generic ",
 ButtonBox["PGb",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGb"]
}], "ExampleText",
 CellID->365160919],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}], ",", 
   RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
   RowBox[{"Fishing", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->845366186],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "PGb"}], ")"}], " ", "PGkk"}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "PGkk"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "PGt0"}], "+", "PGt8", "+", 
       RowBox[{"PGb", " ", "PGt8"}], "-", "PGtR"}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"PGkk", " ", 
         RowBox[{"(", 
          RowBox[{"PGt0", "+", "PGt8", "+", 
           RowBox[{"PGb", " ", "PGt8"}]}], ")"}]}]]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"PGkk", " ", "PGt0"}]]}], ")"}], 
       RowBox[{"1", "+", "PGb"}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"PGkk", " ", "PGt0"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"PGkk", " ", "PGt0"}]]}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"PGkk", " ", "PGt8"}]]}], ")"}], 
       RowBox[{"1", "+", "PGb"}]]}]}], ")"}], " ", "PGR", " ", 
   "PGW8"}]}]], "Output",
 ImageSize->{563, 52},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->192314894]
}, Open  ]],

Cell[TextData[{
 "The same expression with common notation, ",
 Cell[BoxData[
  ButtonBox["PGb",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PGb"]], "InlineFormula"],
 " is exchanged by the symbol ",
 ButtonBox["b",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/b"]
}], "ExampleText",
 CellID->540960771],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}], ",", 
    RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
    RowBox[{"Fishing", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->79332059],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"\<\"R\"\>", " ", 
     SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\<\"k\"\>", " ", 
             SubscriptBox["\<\"t\"\>", "\[Infinity]"]}]], "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\<\"k\"\>", " ", 
             SubscriptBox["\<\"t\"\>", "0"]}]]}], ")"}], 
         RowBox[{"\<\"b\"\>", "+", "1"}]]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\<\"k\"\>", " ", 
             SubscriptBox["\<\"t\"\>", "0"]}]]}], ")"}], 
         RowBox[{"\<\"b\"\>", "+", "1"}]], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\<\"k\"\>", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\<\"b\"\>", " ", 
             SubscriptBox["\<\"t\"\>", "\[Infinity]"]}], "+", 
            SubscriptBox["\<\"t\"\>", "\[Infinity]"], "+", 
            SubscriptBox["\<\"t\"\>", "0"]}], ")"}]}]]}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\<\"k\"\>"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\<\"b\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "\[Infinity]"]}], "-", 
         SubscriptBox["\<\"t\"\>", "\<\"R\"\>"], "+", 
         SubscriptBox["\<\"t\"\>", "\[Infinity]"], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]}], ")"}]}]]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\<\"b\"\>", "+", "1"}], ")"}], " ", "\<\"k\"\>"}]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{415, 39},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]//TraditionalForm=",
 CellID->535943220]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "RichardsPellaTomlinsonParameter",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->564457095],

Cell[TextData[{
 ButtonBox["RichardsPellaTomlinsonParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/RichardsPellaTomlinsonParameter"],
 " is an option value for ",
 Cell[BoxData[
  ButtonBox["GrowthModel",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/GrowthModel"]], "InlineFormula"],
 " when the value of ",
 Cell[BoxData[
  ButtonBox["PopulationModel",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PopulationModel"]], "InlineFormula"],
 " is set to ",
 Cell[BoxData[
  ButtonBox["SurplusProduction",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/SurplusProduction"]], "InlineFormula"],
 ". By default RichardsPellaTomlinsParameter is set to the generic ",
 ButtonBox["PGm",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGm"]
}], "ExampleText",
 CellID->567933929],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"PopulationModel", "\[Rule]", "SurplusProduction"}], ",", 
    RowBox[{"GrowthModel", "\[Rule]", "RichardsPellaTomlinson"}], ",", 
    RowBox[{"UseMSY", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->506342236],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"\<\"r\"\>", " ", "\<\"X\"\>", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\<\"X\"\>", "\<\"K\"\>"], ")"}], 
       RowBox[{"\<\"m\"\>", "-", "1"}]]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{94, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]//TraditionalForm=",
 CellID->136493629]
}, Open  ]],

Cell["is equivalent with", "ExampleText",
 CellID->23802219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"SurplusProduction", "[", 
   RowBox[{
    RowBox[{"GrowthModel", "\[Rule]", "RichardsPellaTomlinson"}], ",", 
    RowBox[{"UseMSY", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->81102391],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"\<\"r\"\>", " ", "\<\"X\"\>", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\<\"X\"\>", "\<\"K\"\>"], ")"}], 
       RowBox[{"\<\"m\"\>", "-", "1"}]]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{94, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]//TraditionalForm=",
 CellID->569321586]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "GrowthRate",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->286954823],

Cell["GrowthRate may be defined by", "ExampleText",
 CellID->401043657],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"vonBertalanffyLengthGrowth", "[", 
     RowBox[{"t", ",", 
      RowBox[{"UseWeight", "\[Rule]", "False"}]}], "]"}], ",", "PGkk"}], 
   "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->486926995],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"\<\"k\"\>", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\<\"L\"\>", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}], 
         RowBox[{
          SubscriptBox["\<\"L\"\>", "\[Infinity]"], "-", 
          RowBox[{"\<\"L\"\>", "[", "t", "]"}]}]]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{84, 28},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]//TraditionalForm=",
 CellID->458426566]
}, Open  ]],

Cell[TextData[{
 "By default ",
 ButtonBox["GrowthRate",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/GrowthRate"],
 ButtonBox[" ",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 "is dynamically set to the generic ",
 ButtonBox["PGkk",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGkk"]
}], "ExampleText",
 CellID->197623657],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyNotation", "@", 
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Fishing", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
    RowBox[{"MortalityRate", "\[Rule]", 
     RowBox[{"\[Alpha]", "*", "GrowthRate"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->76270502],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"6", " ", "\<\"R\"\>", " ", 
     SubscriptBox["\<\"W\"\>", "\[Infinity]"]}], 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Alpha]", "3"], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"11", " ", "\[Alpha]"}], "+", "6"}], ")"}], " ", "\<\"k\"\>"}]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{137, 39},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]//TraditionalForm=",
 CellID->102828772]
}, Open  ]],

Cell[TextData[{
 "The growth rate (GrowthRate) may be expressed by a the relation between ",
 Cell[BoxData[
  ButtonBox["GrowthRate",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/GrowthRate"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["MortalityRate",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/MortalityRate"]], "InlineFormula"],
 " (here \[Alpha]):"
}], "ExampleText",
 CellID->70367960],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bio", "=", 
   RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fishing", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", "\[IndentingNewLine]", 
     RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MortalityRate", "\[Rule]", 
      RowBox[{"\[Alpha]", "*", "GrowthRate"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Notation", "@", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"bio", "\[Equal]", "K"}], ",", "PGkk"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->221509379],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"\<\"k\"\>", "\[Rule]", 
         FractionBox[
          RowBox[{"6", " ", "\<\"R\"\>", " ", 
           SubscriptBox["\<\"W\"\>", "\[Infinity]"]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Alpha]", "4"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Alpha]", "3"]}], "+", 
             RowBox[{"11", " ", 
              SuperscriptBox["\[Alpha]", "2"]}], "+", 
             RowBox[{"6", " ", "\[Alpha]"}]}], ")"}], " ", "K"}]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{146, 30},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]//TraditionalForm=",
 CellID->62721994]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "SpawningBiomass",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->53572878],

Cell[TextData[{
 "By default ",
 ButtonBox["SpawningBiomass",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/SpawningBiomass"],
 ButtonBox[" ",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 "is dynamically set to the generic ",
 ButtonBox["PGSB",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGSB"]
}], "ExampleText",
 CellID->75083624],

Cell["\<\
SpawningBiomass may be implemeted in PopulationGrowth by a two-step \
procedure, first finding the expression for the apwning stock, before \
entering it into PopulationGrowth:\
\>", "ExampleText",
 CellID->32926740],

Cell[BoxData[
 RowBox[{
  RowBox[{"spawningstock", "=", "\[IndentingNewLine]", 
   RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FirstCatchAge", "\[Rule]", "PGtR"}], ",", "\[IndentingNewLine]", 
     RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", "\[IndentingNewLine]", 
     RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BiomassIncluded", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->90086044],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FirstCatchAge", "\[Rule]", "PGtR"}], ",", "\[IndentingNewLine]", 
    RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", "\[IndentingNewLine]", 
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BiomassIncluded", "\[Rule]", "Fishable"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"RecruitmentFunction", "\[Rule]", "RickerRecruitment"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SpawningBiomass", "\[Rule]", "spawningstock"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "Notation"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->254846957],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      SubscriptBox["\<\"S\"\>", "\<\"hv\"\>"]], 
     RowBox[{
      SubscriptBox["\<\"R\"\>", "\<\"max\"\>"], " ", 
      SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\<\"k\"\>", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\<\"t\"\>", "0"], "-", 
              SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
         RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\<\"k\"\>", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\<\"t\"\>", "0"], "-", 
              SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
         RowBox[{"\<\"F\"\>", "+", 
          RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3", " ", "\<\"k\"\>", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\<\"t\"\>", "0"], "-", 
             SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]], 
         RowBox[{"\<\"F\"\>", "+", 
          RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
        FractionBox["1", 
         RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\<\"R\"\>", " ", 
          SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\<\"M\"\>", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\<\"t\"\>", "\<\"R\"\>"], "-", 
              SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\<\"k\"\>", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["\<\"t\"\>", "0"], "-", 
                  SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
             RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]], "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\<\"k\"\>", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["\<\"t\"\>", "0"], "-", 
                  SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
             RowBox[{"\<\"F\"\>", "+", 
              RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"3", " ", "\<\"k\"\>", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\<\"t\"\>", "0"], "-", 
                 SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]], 
             RowBox[{"\<\"F\"\>", "+", 
              RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
            FractionBox["1", 
             RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}]}]}], "-", 
        RowBox[{"\<\"R\"\>", " ", 
         SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\<\"M\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\<\"k\"\>", " ", 
                SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}], ")"}]}], 
                   ")"}]}]], "-", "1"}], ")"}]}], 
             RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", "\<\"k\"\>", " ", 
               SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], 
                    ")"}]}], ")"}]}]], "-", "1"}], ")"}]}], 
            RowBox[{
             RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"3", " ", "\<\"k\"\>", " ", 
               SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], 
                    ")"}]}], ")"}]}]], "-", "1"}], ")"}]}], 
            RowBox[{
             RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\<\"M\"\>"}], " ", 
               SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}]], "-", 
             "1"}], "\<\"M\"\>"]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"exp", "(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"1", "/", 
           SubscriptBox["\<\"S\"\>", "\<\"hv\"\>"]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"\<\"R\"\>", " ", 
              SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\<\"M\"\>", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["\<\"t\"\>", "\<\"R\"\>"], "-", 
                  SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\<\"k\"\>", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["\<\"t\"\>", "0"], "-", 
                    SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
                 RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]], 
                "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"2", " ", "\<\"k\"\>", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["\<\"t\"\>", "0"], "-", 
                    SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]]}], 
                 RowBox[{"\<\"F\"\>", "+", 
                  RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
                FractionBox[
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"3", " ", "\<\"k\"\>", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["\<\"t\"\>", "0"], "-", 
                    SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}]], 
                 RowBox[{"\<\"F\"\>", "+", 
                  RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
                FractionBox["1", 
                 RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}]}]}], "-", 
            RowBox[{"\<\"R\"\>", " ", 
             SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\<\"M\"\>", " ", 
               SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\<\"k\"\>", " ", 
                    SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}], ")"}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
                 RowBox[{"\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", "\<\"k\"\>", " ", 
                   SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], 
                    ")"}]}], ")"}]}]], "-", "1"}], ")"}]}], 
                RowBox[{
                 RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"3", " ", "\<\"k\"\>", " ", 
                   SubscriptBox["\<\"t\"\>", "0"]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    SubscriptBox["\<\"t\"\>", "\<\"c\"\>"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}], 
                    ")"}]}], ")"}]}]], "-", "1"}], ")"}]}], 
                RowBox[{
                 RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\<\"M\"\>"}], " ", 
                   SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}]], "-", 
                 "1"}], "\<\"M\"\>"]}], ")"}]}]}], ")"}]}]}], "+", 
        RowBox[{"\<\"M\"\>", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\<\"t\"\>", "\<\"R\"\>"], "-", 
           SubscriptBox["\<\"t\"\>", "\<\"c\"\>"]}], ")"}]}], "+", "1"}], 
       ")"}]}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{558, 287},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]//TraditionalForm=",
 CellID->919015319]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Recruits",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->209030249],

Cell[TextData[{
 "By default ",
 ButtonBox["Recruits",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/Recruits"],
 " is set to the generic ",
 ButtonBox["PGR",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGR"]
}], "ExampleText",
 CellID->232362191],

Cell[TextData[{
 "Default value of Recruits differs in PopulationGrowth and ",
 Cell[BoxData[
  ButtonBox["EquilibriumBiomass",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/EquilibriumBiomass"]], "InlineFormula"]
}], "ExampleText",
 CellID->530153135],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyNotation", "@", 
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    RowBox[{"Fishing", "\[Rule]", "True"}], ",", 
    RowBox[{"CatchAge", "\[Rule]", "0"}], ",", 
    RowBox[{"OldestAge", "\[Rule]", "Infinity"}]}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->28188353],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"\<\"R\"\>", " ", 
    SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\<\"M\"\>", " ", 
      SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}]]}], 
        RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]]}], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3", " ", "\<\"k\"\>", " ", 
         SubscriptBox["\<\"t\"\>", "0"]}]], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
      FractionBox["1", 
       RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{354, 42},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]//TraditionalForm=",
 CellID->202939710]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyNotation", "@", 
  RowBox[{"EquilibriumBiomass", "[", 
   RowBox[{
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    RowBox[{"Recruits", "\[Rule]", 
     RowBox[{"Recruits", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "MortalityRate"}], "*", "RecruitmentAge"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->762355841],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"\<\"R\"\>", " ", 
    SubscriptBox["\<\"W\"\>", "\[Infinity]"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\<\"F\"\>", " ", 
      SubscriptBox["\<\"t\"\>", "\<\"R\"\>"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\<\"k\"\>", " ", 
           SubscriptBox["\<\"t\"\>", "0"]}]]}], 
        RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>", "+", "\<\"M\"\>"}]]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\<\"k\"\>", " ", 
          SubscriptBox["\<\"t\"\>", "0"]}]]}], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"2", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3", " ", "\<\"k\"\>", " ", 
         SubscriptBox["\<\"t\"\>", "0"]}]], 
       RowBox[{"\<\"F\"\>", "+", 
        RowBox[{"3", " ", "\<\"k\"\>"}], "+", "\<\"M\"\>"}]], "+", 
      FractionBox["1", 
       RowBox[{"\<\"F\"\>", "+", "\<\"M\"\>"}]]}], ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{351, 42},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]//TraditionalForm=",
 CellID->438083175]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "CatchAge",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->594241017],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CatchAge",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/CatchAge"]], "InlineFormula"],
 " is the age of first catch in stock or the age at which 50% of the stock is \
exposed to fishing."
}], "ExampleText",
 CellID->133722631],

Cell[TextData[{
 "By default value of CatchAge is set to the generic ",
 Cell[BoxData[
  ButtonBox["PGtc",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PGtc"]], "InlineFormula"],
 ", often referred to as ",
 Cell[BoxData[
  SubscriptBox["t", "c"]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->83596721],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FirstCatchAge",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/FirstCatchAge"]], "InlineFormula"],
 " (age at which ",
 Cell[BoxData[
  ButtonBox["CatchStartPercentage",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/CatchStartPercentage"]], "InlineFormula"],
 " % is represented in catch) is needed if the value of CatchSelection is set \
to Logistic"
}], "ExampleText",
 CellID->152728162],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"CatchSelectionFunction", "[", 
      RowBox[{"t", ",", 
       RowBox[{"CatchAge", "\[Rule]", "5"}], ",", 
       RowBox[{"FirstCatchAge", "\[Rule]", "3"}], ",", 
       RowBox[{"CatchSelection", "\[Rule]", "#"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"Sharp", ",", "Logistic"}], "}"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->451987234],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 122}, {385, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{385, 122},
  PlotRange->{{0, 385}, {0, 122}}]], "Output",
 ImageSize->{389, 122},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->198959317]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "CatchSelection",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->33541610],

Cell[TextData[{
 ButtonBox["CatchSelection ",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 "may have the value Sharp or Logistic, default value is Sharp"
}], "ExampleText",
 CellID->143002372],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CatchSelectionFunction", "[", 
    RowBox[{"#", ",", 
     RowBox[{"CatchAge", "\[Rule]", "5"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"4.9", ",", "5.0", ",", "5.1"}], "}"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->335805296],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "1"}], "}"}]], "Output",
 ImageSize->{61, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->9662150]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CatchSelectionFunction", "[", 
    RowBox[{"#", ",", 
     RowBox[{"CatchAge", "\[Rule]", "5"}], ",", 
     RowBox[{"FirstCatchAge", "\[Rule]", "4.9"}], ",", 
     RowBox[{"CatchSelection", "\[Rule]", "Logistic"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"4.9", ",", "5.0", ",", "5.1"}], "}"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->67501967],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.10000000000000009`", ",", "0.5`", ",", "0.9`"}], "}"}]], "Output",
 ImageSize->{103, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->143462882]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CatchSelectionFunction", "[", 
    RowBox[{"#", ",", 
     RowBox[{"CatchAge", "\[Rule]", "5"}], ",", 
     RowBox[{"FirstCatchAge", "\[Rule]", "5"}], ",", 
     RowBox[{"CatchSelection", "\[Rule]", "Logistic"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"4.9", ",", "5.0", ",", "5.1"}], "}"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->508083053],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "1"}], "}"}]], "Output",
 ImageSize->{61, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->55702]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "FirstCatchAge",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->200354866],

Cell[TextData[{
 ButtonBox["FirstCatchAge",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/FirstCatchAge"],
 " is the age at which ",
 Cell[BoxData[
  ButtonBox["CatchStartPercentage",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/CatchStartPercentage"]], "InlineFormula"],
 " % is represented in catch. The default value of FirstCatchAge is the \
generic ",
 ButtonBox["PGtcs.",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGtcs"]
}], "ExampleText",
 CellID->571624354],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"CatchSelectionFunction", "[", 
    RowBox[{"t", ",", 
     RowBox[{"CatchAge", "\[Rule]", "5"}], ",", 
     RowBox[{"FirstCatchAge", "\[Rule]", "fc"}], ",", 
     RowBox[{"CatchSelection", "\[Rule]", "Logistic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"fc", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->136873680],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQd3W8e5rr3W/SX3F8CJT3x8bnKSk56TOJYd9245stxkdUtWoySSYu8k
OojeeweISoK9FzVKcrfj3m1ZskTyvTOzsYENgoRIirJlh996zAXOHuw2D7/5
ZoO0/u/TO/7x9P+55ZZbash/QfIffY1/g9haGD/06WzEzRKcDEIlNjzZCAiU
WE6DDU/+PWNRrlhJ/w1PfvJRPL6rHe4NT36SseRoXs8Qb0jy04gSdcUtS8Vq
d77hyY80SgwZ0UCRQQG9kPdizapsePJjidJjRMXogVxIRkBvnrUllg1Pbtoo
PSLcEMu7kWc5SYSe9FHWoMqGJzdPXFMMeRqErCFpFEiynCdFmUTeD4Kif3Vz
0IYnP2Bc857TYU2BssiQNGSE7kJ6eDI8AkNoJunPohhgDK5ClQ1JvrdYyX2m
ZUYSWTcEkHZZirkh5FqSZPXgKDSEMgTl0IpU2UgmNzRWclezYiyFLJkdRGpI
jiU9KZSEvqWXJROBIfIiQ5TDFNUINjz5nmOlYiQgXwpZgroh4w3JvuYNkXKk
ebp5ehicHiyNUPooSxvC9FCOUENUo+gcvXZK2fDkOmOlYsTBIRcgy5HIw42U
NIkCSkpC+/MTTbEh8qUSCNGDGjJGUY9TNjxZ31jhjcrdc0UMcgGymECPOKQC
6HAnkEcgiYRHKEnWqAzNJHlDcnqUSCACPTQTjMkNT64rVn5nOCU4squSRXrw
SAshPSVx5EnwJHk4SdI8zBBuopEW5xBBAlEUzS/FemgJU9BNrdST9b7BP9ZY
+a0g91PZBYUAeRdbX7AXBJkAqZAYJLxLEvaaM0TMsbwktL+gGpEW5xBhAlkq
e6iL9NBNQ88o4clGMsFqxYiCoBAgZ2QTSBQyAdJCJIQuSs4QcQ6BJFmSjFRe
D0oPZZEhspwhfAIpMbkQN3J6ZA2ZoRhmNjxZHKu62JwbVI9IFrmA7Lo1Ag6p
AAlHNA/pKY5C3MUj8KQjvtgQ2jkNcXqxIdJcDilOIHx1Wpw6CrIH74bhZBbj
yX93T1Z7deQuqSJQCqBuhClyHhmD6hGGVICkEHEkC3fzqSGMji6eGINJ0pFg
sOUwkYQzRMwZkqFQQ1aWQJaeWXJuFBli/Lf0ZLXXwonB3R8qRjiLgkceyiJj
ZFcZIRAkAsSLCFNIz44I8kQZQkliWUmyLhUZwumRNSSnhyCBUD3GV6ZHkRt5
TmE5SfBTKWLXcP7kbnSGoWJkDQmBoODJuhGkyHiyhgQh4RHzdAhhLrWHQAkz
IjxRRhdDYAhJI5TUEoYU6DFcqIdgfinWQ+jGEmIIDBFK8lNKJmsWg7oRypM1
JAgFDxUjQJHxSBnZyjMAgpinQ0A7g+vWHkQbIcQI8wgliVFoz4RAD2aImJtl
eENy8wtxY7nssWRRWsqNU0vwE/BkbWdIrldNxAhloWIEKUoGd0MUASgCWTEo
fsgYUgFZQ/wQ+7J0+LO087Sxbm0BcLQGGSFGmEIkaYsy2GKnPQ5iSDufQzoE
hmRrVKaHnEsgI4Wl6TJ1aSk3lhJjhZ7czG6s+dyoGyFwUD2CFKpHAEoOftwV
fmqF3EeR8Uh5JAQvqye94Ojg8KHdm6XNR+H2Rjxp5Qgwcp4wSVojaGUrnbYY
2uKUrCScIYUJJDfF0Op0kR7LuFGi5Fg5OUlu5rxxPWJwQd0IUqgbAYqKQcTg
UPBjKveCIOOREjwUCUPs4etJDzoY7TxtHN4sXLdWHyh+tBACPEG0hNASRgsr
j1u7QCGSMD3amR4dwilmkR4j/OQiLDyWWswu1mM1YuT02Fr0R383T1yPGNoQ
NIysIUSPQNaNTj9UDKUvi8JLyRrigYwhdVMkPGIXxG4K163DhXaeNneWVp4W
1q3FgxZvlmYfw19gCLerligzJC4wpBsdPRDnEoig/KCPPhYtbHk9lq1I1yRG
7v7fbG5cZyrj3NAGoeHgy0W1n4pB8UHF4YWSofBQ5HxykLlBkLooEobYSeng
oTWDA4Q2Z5ZWRksOF9PDjeYcHjR7s4ZQAgxW+bSwiaaVm2USaOMNES/KHsMF
1SmnB61L+QfpQkPWJWngJnPjOk+GXJcuBF2QukEJUDco/vxEQ9zo9FIxKB4o
GQo3RU5w8YYQN5wUiYMiZnQQ7Gi389WFHa08LQKaHRSuT5MDTU40udDkZngo
jV5KE5OE6sEmGpJDWgSzTK4Coc9A+vN6LHbjmmuWDTGYGHoiBnNDx8Sg+KkY
FB/UBH766PRQMShuKBkKF4W4IXdSuG5SBwgSO0XM6LBR2glWvrqwgtDCaGY0
8TTaaJ9GOygOSoOT4UKjG43EEx81hCoUQFMQTSE0RwSGcEUImWJy80uuNB3P
Vx3alSxYVinG9Q/HOsb1n0kuM+iZG7oAhbihZWJQvNQNtYfC9SRiUDdcDCcU
DOqGAzICnx+kNkgYYis6GO0WShsjWzmYQWhmNDEaGQ3mbId6Kyg2hh31DtQ7
Ue9CgxsN7HwafGhkhjSH0czlkDhaySyT4mvUXvYAhJUfnB5qYdVxzcVsSUOE
ZcZ6jcj1x7qslcilGUKg8I8v9MQNP0Xry0LcoDA31G508rWlyknFoDigINgh
Z8hsFKmNf8phhdhC6TBT2hltBBNaTbwhJjQzmkxoNFIaCCYK1cMMQh3Bgjor
6myos6POgTon6thcVu8FMaQhgMYQmpghzTG0xFkRks7qkZ9fWGkqnFyIHsSN
NYhRnDRwE7ixLidArssYgpGJkSWQTyM6HwhaL8ND3dC4qRtqFzoJznxPpZ2K
obBR5FaKjGCBlMH1EZvQwWgnGNFGMKCV0WKgfZoNIDTp0choIBgo9cbsHuqM
oJioJLUW1FpRa2PwJQoxpN5PDWkIoTGC5i5eD65AJeXHwBJPxri6dNnn56sU
Y72GZs2xXkcnl2ZibhiDFCIGxQ89I2uIFzrmhpa5oWFuqJkbnQ6Kip9BqBtE
DAuFiCEzQ0owQULgx7fDAEK7Hm2MVh2lhZEtQbVoZDQQdJR6Heq0FK5DrQG1
RtSaUGNkmFFjoYbUMUPqPSCG1HlZDgnzeqSYHr28Hix7ZN3IrVmKPoBbyWyy
5ED8gG6soxjmEIgbpiCF6hGgEDcoPugJ3nxy0LpB0LgYTqgJxA07RWWjZA0h
bpgpMhNkRkiNkBgoYoKe/xhFhzYtpZXRokEzQY0mdbZDoxqNGjSoUa9GXSdq
OdSo1dAOtVrUaFGtRRX5qs8awqURsrXGjloy13joLNMY5GvUBFpTtDoleshy
bnDTSukFy4rLjHUfoNXGOh43N+hmTo8Axehn+KgbBi9F76Ho+CpU64LWSd3Q
OKgbauKGjaKyUpT8DKIwQW6kbsgMkBI39JDoINaig6DhV7JqtBI60dKJZhWl
SYlGgopVmErUK1GnQC2HErUqSg3bWqXCCSWqOlGloZIQQ6oNqDLghCG7c2II
KUVoHeKnhtA6JEpzCFnCkPKDLF4Ug/SRKZ1TCt0oyBs/kqSxvk/pyaVZwqCE
8pJQPfwU4gaFuWFgbujdFJ1LkEYc0NipG2rihpVhgcoMJYGvMOUG6oZMD6kO
Ei1FrKFudKjR3slXoUq0KNCsQJOc0ihHA0HGzyBSEGoIMkq1DFUynJBmt56Q
U0NOqFBJ6ERFJ8o7UanNGlJjBTGkxokaF2o9tBQhhpAytS1OV7iSDP3oVjmy
eGbJJ43Vi4Efwo31PSK5NGsE1jCFuEEJwsyvU6gePgpxg+KBwU3Ruyg6J4Mv
/zQ2ENRWqC3UjU4zVCbqhtIIhSEvkkwLKXFDQxGr0dGJDhXalWhT8obI0SxD
kxSNUjRIUC9GnRi1Hdmt1R2obkdVO060o5JRQWBby8Uol+C4BMekDDnKVahQ
o4LVJxUGVJhQYcEJOzWEq0OIHmSKIctbbn6R88/VuZULt2xZ22yy7iN1zVj3
w5Grs0VgY25YQxTiBiUAs2CdYvLCxNwwMjcMLhic0BMc1A2dHVpbvjNxQ21G
p4miMkJlgNIAhR4KHeR8GSklbqgh6YRYhQ4ldaNdgTY5WuXZDs0SNInRKEZD
B+rbUdeO2jbUtPJZogWVLahoppQ343gzjjXTTUdbUEZoxZFWlLWjTIwyKcrY
Po924qgGx3QoN+GEDdVED7KQCdMVLik/2nvQIShQlSPZZUvBenY1YtyIwSoR
N0IMewR25gaFuWENMgJUD4sfZoJPIImb6mFkblAc0Nuht0FHsEJroWQNIW4Y
0Wmgbqj0UOqg1EKhhVwDGV9nSlWQKCFWoEOBdjnaZWiTolWCFjG/VOlAYzsa
2lDfiroW1LagphnVTIMTTahsQkUDyhtwvJFyrDH7rrImHGnEkWZqyJF2HBHj
iCS76bASR7VUj0o7qj2oDaIhiqYEWpgeZP0iG6DVKZlcNJN80lj+twRLj8j3
48aN+DWAWwRBDQlTiB4U5gbFT/Ww+ChmL8ye/LuMThiZGwbmhp65oSNumCka
U75npx6dOqi01A2lBgo15J0UmYp/ICaHWI4OGdqlaJOgTYzWDrR0oLk926Gh
BfXNqG9CXRNqm1DTiGpeg8o6VNShvA7HCfU4Vo+j9dlNR+oLDDnchgMtdNMB
CThDjjNDqtyoC1M92rrZMzH2vJSbUJb9yP7ktcXA9+LGDToEuTpHFJRIfhzt
IdiZG7YAhbhBYW5YvLB4qB5mN0x8IWp0wGinehiIHlboLdCZoTNBa4SGYICa
X6t2aqHSQKmGshMKFeRKikwBqTx/9A4x2jvQ1k5pbUNLG5pb0dTCP85qRF0D
ahtQ04DqelTV4kRNdlNFDcprcLwGx6pRVoUjlThSxeeQBpQ14nA9DtRif222
cX8rqCEKlHXiuB4nnKgNoZFMLmmaOogeZEKhD0iXF2Ml43Kj3bhxYji7QIlS
iB6OMCUvSRB2ooef4aN6WJkbFDfMLobgcajRBoMVBgv0ZuhNWT20Bmj00Oig
5ssMVSeUKiiVUCggJ8ghk0EqhUQCMT+PtLehrQ2trWhpQXMzmprQ1IBGPhvU
1aG2FjU1qKrCiROUyhPZTccrcbQcZcdx5DjKKlBWST0h7YdO4EAF9h3H3nLs
LseOctq4pxb7GvBKCw7LcFSPCieqg6iPojlBH46RwoNkj+Wejt4MSePG7Z9c
nSsGVxdczA1nhMH0cITgCBbMOMQNihdWD8NN9bAwN8wOmOyUXGeDGQYT08MI
nQFaPbQ6aLRQa6BW57sp5VDIIZdBJoVMAqkYkg6I2yFu4594NKO1CS2NaG5A
Ux0a69BQi3r+B7/mBKorUFWOExWoZJQfX8hOJYdx5AjKjjJJyhcOHZvn2vce
xO6D2HEI2w7Mbzs4xzXursS+JhyU4YgOx2yo9KI6gPoIWpL0Izkys6xNjBWO
HXcOK2/P7fmGiuGOwc25wfSg8Ho4QxSiByUAh+DXNogeNg9sbqqH1QWLExYH
1cNsh9kGkxUmS76z3gi9ATo9dDpotdBooFFD3YlOJVQK/rGYFHIxZB2QtkPa
BkkrxC3oaEZ7E7+erUdzHZpr0FSDxmrUV6HuBGorslurjuEEo+LowvEj88cO
zZcdyBpSRgw5vHDo4NyBV67se/nqnt3UkB17sG3X/As7rzy748rzu6+8sJca
sqsSu+uxswn7FDhswTEHKj1UD5I9FEO06ljh04ziEVzhWCzXsqQeNzQdCRMC
NaSLEaUQPVxhCqeHMwhnIKuHwwe74Jk50cPmgtUJq4PqYbHDYoPZCrMFJjOM
BEEtqtdBp4WWuaHphFoJtQKdcqhk+T6ydsjaIG2BpBniRnQ0oL0ebXX8erYa
TVVorERDBerKUXsMNUdRfYQvRw8vlB+cP/7K3NF9c2V754+8vFC2nxpycO/c
K7uv7Nt5ec9Ll3dtu7pjG9Xj+eeuPPvspS1bL2159tLWF757fjfV45n9ePYo
XqrHHhle0eOojWaPtnR2WhH+ZcrKR+dGuHGj5ylyRG8CnjilwBOiR4TC6eEK
wRWkED2cfgrRw+GFwwO7YLVic1A9rHZYbbAwNzg9TCYYjTAaYORrUZ0GWjW0
ndCooCF6yNEpg0oKpRiKjvwOpc2QNELcgI46tNWitRotVfmtDcdQdxS1R1Bz
GNWHUHVw4QSfKI7tnSvbffXIzrkju+cO77x6cPsVrn3Pcxd3bf12x9bL2/55
+fnNl0jLlie+2fz4N08+9s1TT116fDPt9siW+Se2z205ePWFqis72uYOGuja
lixmuUejQjdWPjrr7sb3IUYSxA1KnBGDh9CVv//UkDCD18PF6eFjMD0cbjhc
sAsem9tssFphsVDMZphNMBthYm4YdTBo8z11KmiV0MihlqFTCpUYqg4o26Fo
g5xfkkgaIK5DRw3aq9F2Ai2VaC5H0zG+HD2EmgOo3r9wYt9C5d758t1zx3dd
5TYdeenKoRe/O/D85f3PXnr5mW/3/PMb0rj9ya+3Pf7V849+ufWhL7Y8+AXX
8/H7Pn/03i8eeeCrhx+kfe576MtHtnz51EtfPXP44tZ67FXguI1+1CL8G+pV
jc76uvE9iOFLwZdkJCg5PbxdjCg80cJkEoI7CHcALj/DRyF6OHk9HE7YHbAL
alGrBVYzLCZYjDAbYNLDpINRC6MGBjX0nfmeGhnUUqjF6OyAqh2qNihaIG+G
jH92Ia5BRzXaT6CtAi3laD6GpjI0HObL0f0LVS/Pn9gzV7Fr7viOq8deulL2
4nfcple2XNz39Dd7n/pq9xNf7nwsK8PzD3zy7H0f//Oejzbf/dGTmz4kLQ/9
9b2H7vzgobs+uu/Oj7g+99/74WPPfP7Y7kuPHcL2FvpwLFd/rnaA1tEN7txu
dAnqT8FfqIcvzojBx+tBiVA8giUt0cPtp1A9vHB54HQzmB4OBxx22G2wWwWS
GGExwKKHWQeTFiYNjGoYO2FQQa+ATvBYQ90BdTs6W6FqgbIJ8kbI6iGty3do
r0DbcbQcQ3MZmg6j8SDq+amkavfciZ1XK3ZcOb7tu2MvXDqy9ZtDW77mNr38
xBd7Hvt81yOf7njgo5fu+5Br/Oed72z+6ztP/fWdx//8Ftfy0B/evOe3b2z6
9aubfvMq1WPTe/946PNNm797tuxqa/g73fRaxFhh/9wF5r4Vthf3xI35u+zc
aXB6+JOMBEOgByVKoXqEGSF4Cpe0bh/cTA+XGy4X1cPphJPp4SB6WGA3wyao
RS06WLQwa2BSw9QJowoGBfRy6GXQSaHlH2uoW9HZAlUTlI1Q1ENeB1kNpNWQ
8I8v2o6ipQwth9F8EI2vLNTvm6/bO5c7SuW2y+XPXzy65asjT395aPPnB578
jGvf8+CHO+99b/s9/9q26d3n7nybtDz9p9ee/tPrj/32woO/OvvAr86Slrvv
OL3pjulNt09s+s9T5NtNf3hn012vb/r1W88+8Vad9qtbVjmb4MZ8ulF8iPWS
hOw80I1AumCUqSq8HpQY/F0UTg9fBL4whejhDTIC8AiWtG4P3G64XXA54XLA
aYfTBocVDqaH3QSbETZDwRHNnTCpYFTAKIdBBr0EejF0HdC257upGqGsh7IO
ihrIqyA9AUkFOo7nO7QcRPMr84375ur3ztXuvlqz80r19svcpmP//Lxs82eH
n/z04OOfvPLoR/se+oBr33HXmy/d+ebzf3ntmd+f41oe++Wph+6YfuCOyXt/
Mcm1bBJlNt02vOkXU/T1HUObRGPbnn19DWLge3FDeKzrkYTsOdiDYDcjTQmk
suRueCCOAKcHZ0iUEYGf6BFiBOELwOtn+ODxFiYTpoeL6eG0wmmBwwyHEXYD
bHrYdLBqYBU8+zLJYZTBKIFBDH0HdO3QtkLTDE1Tvo+yBooqyCohrYDkOMRH
0XEE7Xy90bRvrnHv1frdV+p2Xq596duaF7858eyX3Kayxz86/OiHBx56f//9
7778j7d33/U61/78H2a3/vb0ll+ffPpXM1zL/bcN3XvrwD2ink2iNFXiZ6lN
P+/f9B/prFFbLtw8bpTQI3fQ1UpC9hnKINRDyerBGxJMIZhkJBbnk0AXAlEK
p4c/xGB6+PwUoofXC68HHjc8ggWL2w6XDS6ihxlOE9XDYYBdB7sWNg1salhV
sCjz/Y1iGDtgaIO+FbpmaJugaYC6HurafB95OWTHF6RHFyRHFsSHFtoPzLfu
z88mDTsu1b90sfaFr6qe+bxi88fHH8+WFoceeOeVe9/at+n1PX+7sOsv57b/
iU4fz/56+plfTm6+Y+zxXww9/PN+ruc9ouTdosQ9ogifQAybRJFNot5b+Arw
JpxTSh99heecdYPXg9LNSDNSBYZQ4gjGClQJRBAIM5ge/gD8forPBx/Tw+uG
1wWPEx5HwRtdRA8jnAY49HDo4NDCTvTohFUJqwIWGczSfH9DK/TN0DVB1wBt
PTS1UNdAVQVl5UKuj/TIguTQvPjAXPv+q60vX2nZc7l516Xc1uotn1Y+9WH5
Y+8de/jdsgfe5hr3//3C3v+d3f2n0zt+f3Lbb6a4xqd/Mfjkz/sevbXnIVHq
flGcNySwSeTaJLIyPYgbia3s35NadMPX64H5qmJVbghPo8QJk32Ge5Elw+hh
dFNyelCSjASD6UHpQrBwVUv0CAQRCCBA9PAxvPB54HPD54LXCa8DXjs8NngE
axaXAU49nEQPDexq2FWwET3ksMpgkcAshllQb+gboKuHthaaaqhPLHRWLqjK
55XH5hVl2U9GJAeuduy/0v7y5bbdl1p3XmzZ/nXzti8bnssWn5WPvlv+0NvH
7n/zyD9eO7TpfG63u343tf3X4y/+cvS5/xzKNT4mij8oit4nCt8vijIlzJtE
mk0iPZcxuD6rvee4adzIRfHZUjGK/gmbYkPCaUaKIdCDEkOoixFFMIJguNAT
PwI+BLwUvwd+N/wu+JzwMT28Vngs8JjhMRW8y6mBoxN2JewK2OSwyWCVwNIB
cxtMLTAK6g1d9YL2xIKmYl5dPt95bF5VNqc8PCc/eDXXoWP3xfadX7du/6rl
xc8bt35S9/QHNU+8x20qf+D1Y/e+euSucwf/duaVv5zc96dsgbH9l8Mv/ufA
s7dlttyaflqUIi2PiIIPiQKPUD0cXJ9NIuM/RFFyM/f/pb/0oCwnyY14EHGd
eqDwbMneIv2g9DF6KYtUiXSDkmbwelASCMcZMQqnRyiCUJgRQqhwYUsN8SDg
RsAFvxN+O3w2+KzwWuA1w2uCxwi3Hm5dwbscCtiJHlJYxbC2w9IKczNMjTA2
wCCoNzTH59RH5zrL5lSHryoOXpG/clm275J0z8Vch9YXPm165qOGze/XPflu
7WNvVz/8Rm7Tkb+dOvSXmQN/mtr/u/G9vxnhGl/4efpZMmWIEptF4VzP+0WW
u0Wau0Wdt5RMGqVv+417QnX9buQid55ZPQoNoWQoi1VhhlCSiCQYvB7hLoSj
CEcYvB6hAEJ+hHxFpawTATv8Nvit8FngY3p4DfDo4dHCrYFbDZfgGaldAlsH
rG2wtMDSDHMjTPUw1sBQtaCvnM916zx0RXXgsnL/JcXLF2V7vpbu+kqy4wvx
S5/lOjQ8+U79Y2/VPvx69QOvVt577vhdp3ObDv5+dP9vhvf+amDn7T25xi2i
4JMi92aR9ymRl2u5W6QiN+0hkfN+kWm1w8H1X8dBLN75uuwnOgjKQF6SaD8o
fYxeRobRw9O9eIijyawelBgiXYwoIkyPcAjhIMIBhJkeFC9CHoTchSnFCr8F
fjN8RvgM8Orh1cKjgUcNtwouBZyygv62FlibYGmAuRam6gXDiQV9xbzu2Jyu
LD+bKPd+rdj9lXznF7Ltn0m2fdL+3Idtz7zf8vS7uQ61D16oune28q5T5X+b
Pva/U0f/NM617/9V/+7b09tvjRFeEnVxjc+IPE+LnA+IdPeJVLewpPGYyPKw
SLuG4eB2WPy6+Ns17HnN7120n+gQsnowQwok6VvekG5GmpEqUiUGSheiTI9I
GJEQIkEGMyTsQ9iLMNMj5ELIgZC9YCd+I/wG+PTwaeHVwNsJjxJuOVwyOCVw
iuEQFKWWephrYKpaMFbOG8rnDUSPI99pD15Sv3JRuE/pix9Jnvug45l/tT39
TuuTbzU//nrTI69ym6rumqm8c6rir5PH/zx29PdDR/5ngGvf/bOuXbdGd9wa
fk7k3sqXGY+KNA+LlOT+bGZLlbUN5S1Fz7qXe7GGPV+/HnQQh0HdGEIXYZBn
IEtOkq4+UHoZGUYPo5uRZqTQlWQUPgMhekQjiIYZIUSZHhE/Ij5EvIh4EHYj
7ELYQQnZELIiZCn0RAufGl4VvEp45HDL4JbAJYarHY5W2AVFqblqwVy5YCqf
Mxy9oj98SXvgombf1+o9X6h2fabc/kmuW8fTb7c/9Ubr46+1PHKh6cHZ+n+c
ym2q/PNI+e8Hj/5P3+Ff9ez/RTzX/qLI9YLItk3k3CIy3sIyxiMiOXm9WaR+
UiRf7VgU919fN9b2RuEeukYW/7zTRoEksQFGf16SWB9ivYhleHoY3YilGSlG
ErEEI45YbPEhukIgRAOI+hH1Icr0iLgRcSHiRIQYYkPYirAFIRNCRgQLn6X7
lPDK4ZXBI4G7A642OJvhaIS9Hrbagp7GI5f1By/q9n+teflL9e7P1Ts/Vb30
kfKF9+Vb8xNK2yPnmh8823jvyfq7p2v/PlHzt7HcpiO/TB+8PfbKbeFXfh7e
fasv1/6MSMcyhjzX8k+R5Htzgzvicvu8fq+493aNgriRZThPsS0kOEMKJOkV
SMLp0Y14mpFCPMlIIB7PGhLrQixKWayKD13MkKgHUReiTkQdiNgQsSJiQdiE
sBEhPUI6BDUIqgve7hXD0w53C1zNcDbCWQ9HHew1C7bKecvxfMmh2/el7uUv
tLs/0+z4qHPb+6rn3lU885bs6dclT1zI9Wm6Z6rh7+N1fxup+fNg1R/6Kn+b
r0IP3RZ6WeTeLXLsFFl2i2y3sKSxRSTbKlI+T8pRkbTEeC1380s0lhjflWzK
fbtmPbJucDA9YhzDPEM8g5RiWzhD4r2gZBDvYXQzljIkHmN0IR5FPIJYGLEQ
YsEiVVzoYnpEbYhaEbUgYkbEiIgeYR1CGoTUCKoQVCIg+Oze0wpPM9yNcDXA
Wbtgr5q3VVy1HLtsPvKt6dA3iw6hfuFfqmffVvzzDdlTr0ofPyd++Ez7/TO5
rXV/Gaj5Q2/Vb7srfhU/dke07BfB3KY9IvMekYlc9QsiRa7xOVHH86LWFQ5E
iSG7fjeEjdclxhgIMcKogCJD4kM8gzwDWYSGkEhkQOlhdDPSjBQSSSQSjDgS
MSS6kIgiEUEijDghhHgQ8QDifsS8RarY0GVB1IyoEVEDIjpEtAirEe5ESIGg
DAEJ/B2L3+WsnndUXrUd/8569JL1yEXLoa/NB78y7fvctOdjw44Pct2Um19V
PHle9ugZyYMzHfdNtt091nxn/kFo1X/HKv4rcvz2QNnPvYd/5jxwq5W73p2i
zu0i+YsiyQ6R/CWRuMRwL3fzl2wU7me5fZZwY4UdrnluXeMgxMaZGzkEhsRz
DPMwQxKEQZ4BRj+jLz/XCMco2Y1kGskUI4lkghFHMoZkF5JRJCNIhpEIIRFE
IoCEH3Ev4h7E3Yi7EHcWqWJAlw5RLaJqRFQIKxCSISRFUIxAOwKt8DfD25D/
VMVRftl+7Ft72UXb4a+tr3xueflj864PDNv/pXvhbc3WN4R7ljwwKb53vO2u
4ea/9jf+qafh96ncpuP/4Tl6m+Pwzyzk6vax5SoXu0SS7aK2baKmlQ/Emn+c
F739hroRE8LrEecY5REYkuAY4mF6JAkDjH5GHyUnSbJniZkolUQqgVScEUOq
C6koUsyQZBDJAJJ+JH1IeJHwIOFGwoWEA3Eb4lbEzUWqqBBVIiJHWIqwGKF2
BIkeTQu+unlvzZyn6uqi/vb9n1j3fGDe+S/jtrf1z7+p2/qa9p/n1U+eUT2a
n1Pa7uxv/d9M8x9Tjb+N1f13uPoOf24TuaiDIs1+kXKvSLpb1C7c86pGds2x
KjdWfmLCt8QmkEVgSJxjTAAzJEEY4eElSQ7xMENShAFGP6MPqd68JKkepLoZ
Rb8vxEW6C+kIUmGkQkgFkQog5UfKh6QXSTeSLiQdSNiRsCJhQcKEuBFxPeLa
xXuLiBFuQ7B5IdA4H6if89de9VVf8Z647Km45D72tevwF8LO5hffND7/uuGZ
87qnzmgeP9n56LTiwQnZP0aEfRp/E67/ZaD2Dk/V7Y5FKfFlUdteUcsuUcMO
Uc335gaWqSuWNGG1YnRNIja59ABxEeclSYzxjPIwPZIcwzxDSA0xNwoNSRP6
kO6l5CRJd4OSRjqFdBLdhAS640ucTzqIdABpP9JepDxIuZByImVH0oakFUkL
kiYkDEjokNAg3om4EjF5wX7CTXOhhrlg3dVAzRV/1WVf+Tfesi88hz517//Q
ufc9+653Fx1R98RM58MTyvtG5PcMyjb1Sf6a7vhj/uEGOfmq2yyVtxqPizRl
IsUhtmjlYpeoqvQo5IZvVQ5cf6z8iFSMKcSmqBuLmUCcp4Q2yVHkYYakCMMM
ZkiaMMgzwPTgDGGSdAsk6U6DkmIk0ZNATxw9MfR0oSeKnsji00h7kHYj7ULa
ibQDaRtSFqRMSBmQ1CGpQbITCSUSCsSliInR1b6waA/Bym/8x77wHf7Ud/Bj
z/733Xvede58y/HSG7bnL1i3zpr/mf8wpfO+IdU9/Yo709K/xDv+EG37bbj1
v73CpFEuUh4VSY6IxAdEzftEdVzjeg3TOsZKTizXM+tGDt6NeA7ekESOcUqS
sZwznCFpjqEs3YOMAUY/o4/q0Z1BTyYvSU8alBQySWQSyMSRiSHThUwUmQgy
YfQE0RNY4tDdNqQtSJuQNiCtQ0qLlAapTqQUSMqQkCDesRBvm4+1zHU1XY3W
fVe8B++et90733Bte9Xx/Dnb1jOWp08an5jUPzK2qJvkD2Fynq3/z9l0u63h
P8x1P9fmNpWJ2g6JGvevYE75odxYYbeuaRBi04V6MOJTAj0YiUmBHhNIcvCS
pMZ4RinLOcNFzyAoA+jpZ/Shp5eRQYaXJJMGJYXeJHoT6I2jN4beLvRG0RtB
bxi9IWQCyPiR8SHjQca1lC16dGuQ7kRaibQcKSlSHUi2LSRa5uMN33XVfttV
9XW08stI+efho58ED32w6O32LSetm6csT4ybHh0xPDCgu6db8/ek6m/xXMZo
+3+O1v+0NP1CV/9zVZVIXnWrMvfedRmjdY+VHDcnRl4PAfGpIjg3BCQn8qQI
4wLGkOYYzdI9whim9CzzlJVEpg+ZXkqvII30ptGbQl8SfQlGHP0x9HWhL4K+
MPpC6Aui149eL3rd6HUi40DGhowVGcuyB0q3z6dariQbLyfqv43XfB2r+rKr
4vPo0Y/Dh94P7XsnsOcN/44L3m2zwrdYHh4w3ddjuCdFTkn916jqjz75/7iE
HWpv1dT/TF39M1nlre2lh+CHEmMlh6ZizEBIrFiPHLweiRxEjEJSEwWkx3mY
Id2EUQYzpIdjGBnCEM8gegeWHsqcJH1p9KfQn0R/AgNxDMQw0IX+KPrD6A+i
349+H/o86HOjz4U+B/rs6LOi14ReA3p1yGiQUSGjQEa2xIGS1V/GKz7tOvph
9OC/wvveCu15LbjzfGDbGd9zJz3PTLmeHheeD/mq/bOv8w8e5e99il9bpf+l
b7+tc9EOr2eAblyUPjeyKVooRlYPIUI3eBLTAj2mkOTI6cGTJkzwjKObYyxL
zyjPCDIcw+jlGELvIKVvAH39jD709VL62S8RLfkkjYvBCAbCGAhiIIABPwa8
GPCg34V+B/qt6Dej34g+Pfq06FOjrxN9ioU+2XyfeK63/Uqm5XJP07fF+4zu
fS2ycza07VTguWnfM+Oep4Zcj/WTo9se7Lbc3bWos/R2TcsddvF/mdpu1zTd
VuoT2B9QjGueAL3qk+gSsqQeM4gL4dwQktODkeLI6cFL0s3BS9JDGMuSGc3S
O5Klb5gxhL5BSv8A+vsZfejvxUCG0ZOfbgaTGCIU/QVEVhgvBt0YdGDQhgEL
BkwYMGJAjwEtBtQLA6r5AfncgHSuv+NKX9vl3uaLmfqvuqs/TZd/mDz6XuLw
O0tmMO8Tfe5Huh33dtk2BS13hYx3Bg1/tGt/YxR26/iFarn7/4OLUeIclryH
iyJ2chk9ZpDIwfRICkhN5UnnmER3DiZJzwTTYxwZwhillzCapY8wgn7CMGMI
/YOUgQEM9GOgD4O9jAwGezAkkGQ4hZEkRuIYiWG4C8MRDIeXvdgh48KQfmFI
Oz/UOTekvDokuzokuTLYfqm/5Zu++i96az7NnPiop/z97rJ30odeT+47n9h9
JrZ9ujhfOe+N2u8OWf/iMP3O2Pk7p+qPft0fnZ2/NnNbVzUu32cseXo0Y5zC
IroKc0js5Ir8WTJSxBCe9HTekG4OZkgPxwQyHEySXo4x9DH6R7MMjGBgmDGE
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
iI3YiH+T+P/iZ3vc
    "], {{0, 136}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 136},
  PlotRange->{{0, 180}, {0, 136}}]], "Output",
 ImageSize->{184, 136},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->42374581]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "FishingMortalityRate",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->406594731],

Cell[TextData[{
 "By default ",
 Cell[BoxData[
  ButtonBox["FishingMortalityRate",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/FishingMortalityRate"]], "InlineFormula"],
 " is set to the generic ",
 Cell[BoxData[
  ButtonBox["PGF",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PGF"]], "InlineFormula"],
 ", in the literature often referred to by the symbol F."
}], "ExampleText",
 CellID->108252887]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "InitialAge",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->466920840],

Cell[TextData[{
 "By default ",
 Cell[BoxData[
  ButtonBox["InitialAge",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/InitialAge"]], "InlineFormula"],
 " is set to the generic ",
 Cell[BoxData[
  ButtonBox["PGt0",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PGt0"]], "InlineFormula"],
 ", often referred to as ",
 Cell[BoxData[
  SubscriptBox["t", "0"]], "InlineFormula"],
 ". InitialAge is the theoretical age of ",
 Cell[BoxData[
  ButtonBox["IndividualWeight",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/IndividualWeight"]], "InlineFormula"],
 " equal zero. "
}], "ExampleText",
 CellID->155145245]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaturationAge",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->60098871],

Cell[TextData[{
 "By default ",
 Cell[BoxData[
  ButtonBox["MaturationAge",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/MaturationAge"]], "InlineFormula"],
 " is set to the generic ",
 Cell[BoxData[
  ButtonBox["PGtm",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PGtm"]], "InlineFormula"]
}], "ExampleText",
 CellID->314915471]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaturationStartAge",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->49130518],

Cell[TextData[{
 "By default ",
 ButtonBox["MaturationStartAge",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/MaturationStartAge"],
 " is set to the generic ",
 ButtonBox["PGtms",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGtms"]
}], "ExampleText",
 CellID->211293630]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaxLength",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->341800245],

Cell[TextData[{
 "By default ",
 ButtonBox["MaxLength",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/MaxLength"],
 " is set to the generic ",
 ButtonBox["PGL8",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGL8"],
 ". Theoretical maximal individual length, often referred to as ",
 Cell[BoxData[
  SubscriptBox["l", "\[Infinity]"]], "InlineFormula"],
 " or  ",
 Cell[BoxData[
  SubscriptBox["L", "\[Infinity]"]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->244813740]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaxWeight",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->551720061],

Cell[TextData[{
 "By default ",
 ButtonBox["MaxWeight",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/MaxWeight"],
 " is set to the generic ",
 ButtonBox["PGW8",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGW8"],
 ".  Theoretical maximal individual weight, often referred to as ",
 Cell[BoxData[
  SubscriptBox["w", "\[Infinity]"]], "InlineFormula"],
 " or  ",
 Cell[BoxData[
  SubscriptBox["W", "\[Infinity]"]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->321305219]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MortalityRate",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->11345067],

Cell[TextData[{
 "By default ",
 Cell[BoxData[
  ButtonBox["MortalityRate",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/MortalityRate"]], "InlineFormula"],
 " is set to the generic ",
 Cell[BoxData[
  ButtonBox["PGM",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PGM"]], "InlineFormula"],
 ", in the literature often referred to by the symbol M."
}], "ExampleText",
 CellID->12649910]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "OldestAge",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->331612357],

Cell[TextData[{
 "By default ",
 ButtonBox["OldestAge",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/OldestAge"],
 " is set to the generic ",
 ButtonBox["PGt8",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGt8"],
 ", often referred to as ",
 Cell[BoxData[
  SubscriptBox["t", "\[Infinity]"]], "InlineFormula"]
}], "ExampleText",
 CellID->223841802]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "RecruitmentAge",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->513613173],

Cell[TextData[{
 "By default ",
 Cell[BoxData[
  ButtonBox["RecruitmentAge",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/RecruitmentAge"]], "InlineFormula"],
 " is set to the generic ",
 Cell[BoxData[
  ButtonBox["PGtR",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PGtR"]], "InlineFormula"],
 ". Age of recruitment (see ",
 Cell[BoxData[
  ButtonBox["SpawningBiomass",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/SpawningBiomass"]], "InlineFormula"],
 ") is often referred to as ",
 Cell[BoxData[
  SubscriptBox["t", "r"]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  SubscriptBox["t", "R"]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->86356102]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "RecruitmentFunction",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->223890337],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->139781122]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaximumRecruitment",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->710982512],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->146199036]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaximumRecruitmentBiomass",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->63619084],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->291231759]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "UseWeight",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->16906039],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->167536042]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Fishing",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->300239024],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->82714062]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "DiscreteTime",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->10962900],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->400881669]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "BiomassSum",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->657379523],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->933251286]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "TimeStep",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->627803234],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->666482486]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "RecruitmentExponent",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->168403946],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->663416365]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "BiomassIncluded",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->5683319],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->408511956]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Maturation",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->26089800],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->10872733]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "CatchStartPercentage",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->20983537],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->6072741]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaturationStartPercentage",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->668766566],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->20897547]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "CatchSelectionFunctionBend",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->57061580],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->200677417]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "PopulationModel",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->210302821],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->197216999]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "CurrentBiomass",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->59103926],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->250151665]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "GrowthModel",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->158482686],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->762503508]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "MaximumSustainableYield",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->561054156],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->250437921]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "CatchabilityCoefficient",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->25688859],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->91625728]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "BiomassMaximum",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->901325697],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->178535042]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "IntrinsicGrowthRate",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->152132727],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->450194370]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "UseMSY",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->442610227],

Cell[TextData[{
 "By default ",
 ButtonBox["WeightLengthParameter",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/WeightLengthParameter"],
 " is set to the generic ",
 ButtonBox["PGd",
  BaseStyle->"Link",
  ButtonData->"paclet:EconMult/ref/PGd"]
}], "ExampleText",
 CellID->85989342]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Properties & Relations",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759],

Cell[TextData[{
 "PopulationGrowth[OldestAge -> t, CatchAge -> 0,opts] is equivalent with ",
 Cell[BoxData[
  ButtonBox["PopulationBiomass",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/PopulationBiomass"]], "InlineFormula"],
 "[t, opts]"
}], "ExampleText",
 CellID->244333150],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", 
    RowBox[{"CatchAge", "\[Rule]", "0"}]}], "]"}], "===", 
  RowBox[{"PopulationBiomass", "[", "Infinity", "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->685510281],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->40831263]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"OldestAge", "\[Rule]", "t"}], ",", 
    RowBox[{"CatchAge", "\[Rule]", "0"}]}], "]"}], "===", 
  RowBox[{"PopulationBiomass", "[", "t", "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->613739841],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->779495]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationGrowth", "[", 
   RowBox[{
    RowBox[{"OldestAge", "\[Rule]", "10"}], ",", 
    RowBox[{"CatchAge", "\[Rule]", "0"}], ",", 
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}]}], "]"}], "===", 
  RowBox[{"PopulationBiomass", "[", 
   RowBox[{"10", ",", 
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}]}], "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->343308187],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->198904121]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FishingMortalityRate", "\[Rule]", ".1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CatchAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GrowthRate", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MortalityRate", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InitialAge", "\[Rule]", 
      RowBox[{"-", ".2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"OldestAge", "\[Rule]", "t"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fishing", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->265588945],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 113}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 113},
  PlotRange->{{0, 180}, {0, 113}}]], "Output",
 ImageSize->{184, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->493109508]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PopulationBiomass", "[", 
    RowBox[{"t", ",", "\[IndentingNewLine]", 
     RowBox[{"FishingMortalityRate", "\[Rule]", ".1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CatchAge", "\[Rule]", "3"}], ",", "\[IndentingNewLine]", 
     RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GrowthRate", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MortalityRate", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InitialAge", "\[Rule]", 
      RowBox[{"-", ".2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fishing", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->69490996],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 113}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 113},
  PlotRange->{{0, 180}, {0, 113}}]], "Output",
 ImageSize->{184, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->527019805]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Possible Issues",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373],

Cell["\<\
When CatchAge is larger than 0 FishingMortalityRate may need corrections \
\>", "ExampleText",
 CellID->122584960],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FishingMortalityRate", "\[Rule]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t", "<", "5"}], ",", "0", ",", ".2"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CatchAge", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
        RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"GrowthRate", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"MortalityRate", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"InitialAge", "\[Rule]", 
         RowBox[{"-", ".2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"OldestAge", "\[Rule]", "t"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Fishing", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"BiomassIncluded", "\[Rule]", "#"}]}], "\[IndentingNewLine]", 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"Fishable", ",", "NotFishable", ",", "All"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->588770042],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
pwAAAAAAgAD5P5Ks6+E=
    "], {{0, 392}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 392},
  PlotRange->{{0, 180}, {0, 392}}]], "Output",
 ImageSize->{184, 392},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]//TableForm=",
 CellID->11596780]
}, Open  ]],

Cell["\<\
PopulationGrowth calculates a fixed stock biomass for NotFishable \
BiomassIncluded. \
\>", "ExampleText",
 CellID->34611126],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NoFishing", "=", 
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FishingMortalityRate", "\[Rule]", ".2"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"CatchAge", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GrowthRate", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"MortalityRate", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"InitialAge", "\[Rule]", 
     RowBox[{"-", ".2"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Fishing", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"BiomassIncluded", "\[Rule]", "NotFishable"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->165556273],

Cell[BoxData["0.40577154633779433`"], "Output",
 ImageSize->{60, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->36312468]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FishingMortalityRate", "\[Rule]", ".2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CatchAge", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
        RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"GrowthRate", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"MortalityRate", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"InitialAge", "\[Rule]", 
         RowBox[{"-", ".2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"OldestAge", "\[Rule]", "t"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Fishing", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"BiomassIncluded", "\[Rule]", "Fishable"}]}], 
       "\[IndentingNewLine]", "]"}], "+", "NoFishing"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FishingMortalityRate", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "<", "5"}], ",", "0", ",", ".2"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"CatchAge", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GrowthRate", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MortalityRate", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"InitialAge", "\[Rule]", 
        RowBox[{"-", ".2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"OldestAge", "\[Rule]", "t"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fishing", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BiomassIncluded", "\[Rule]", "All"}]}], "\[IndentingNewLine]",
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->123494067],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
KPkf6h7tmQ==
    "], {{0, 101}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 101},
  PlotRange->{{0, 180}, {0, 101}}]], "Output",
 ImageSize->{184, 101},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->7906892]
}, Open  ]],

Cell["\<\
The upper curve represents is the growth curve for the total population, \
while the lower is the Fishable population with a theoretical value relating \
to the fixed NoFishing value (below the value of CatchAge). \
\>", "ExampleText",
 CellID->176811898]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Neat Examples",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740],

Cell["\<\
A simple expression for the total population biomass is found when assuming \
the marginal natural mortality rate to equal the growth rate:\
\>", "ExampleText",
 CellID->343951738],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyNotation", "@", 
  RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"CatchAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->15680167],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox["\<\"k\"\>", "3"], " ", "\<\"R\"\>", " ", 
     SubscriptBox["\<\"W\"\>", "\[Infinity]"]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\<\"F\"\>", "+", "\<\"k\"\>"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\<\"F\"\>", "+", 
       RowBox[{"2", " ", "\<\"k\"\>"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\<\"F\"\>", "+", 
       RowBox[{"3", " ", "\<\"k\"\>"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\<\"F\"\>", "+", 
       RowBox[{"4", " ", "\<\"k\"\>"}]}], ")"}]}]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{182, 38},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]//TraditionalForm=",
 CellID->137141868]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Stock", " ", "size", " ", "as", " ", "function", " ", "of", " ", 
  "F", " ", "and", " ", 
  SubscriptBox["t", "c"]}]], "ExampleText",
 FontFamily->"Verdana",
 FontWeight->"Bold",
 CellID->19705918],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PopulationBiomass", "[", 
      RowBox[{"t", ",", 
       RowBox[{"Fishing", "\[Rule]", "True"}], ",", 
       RowBox[{"FishingMortalityRate", "\[Rule]", "f"}], ",", 
       RowBox[{"Sequence", "@@", "#"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GrowthRate", "\[Rule]", ".35"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MortalityRate", "\[Rule]", ".2"}]}], "}"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"f", ",", "0", ",", ".5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "15"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"MeshFunctions", "->", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->24670462],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3GlWG8u+p2GvVSOpKdUQ7ofztcZR87jnnnP2tjGYThIIgfq+7/u+7xFg
G8OvMiIzMiMbCQmEDbZivduLLbAklA//DAnM//6v//t//ut/ffjw4f8J/x0J
/5G38Qesf6jXr747u/UmlqGHnZPd4g+98LbhkNwh+QOX5nB/oGv1x++c/AlL
DwO9PvqDNfdXOye/6zKCMUR/+IGtTa9t5+Q3WPojSGGM0B+RNwYTDCcveWq2
c/JOl/54URhjaVYMphjOSKP5Vp6575C8l2V4jJiKGQZzDEnSJePFFl/Y2Q2T
t7yWwUCfqhhcY7jAiHoY32B8i8ntK73ot3Pydtayo0BhXBMVgwWGN2xc3JEm
X4WesSl93n3bOfkla9ljTmEs0L/B4AZDOiJGggqBxDcxcsn0HrMfP+1bBjsn
P3OtgtG7Qf8WgztpOIy+YSz0HZPv0iXTH5g9kOaPP/87Sjsnr7pWPKp0aDAV
w28YfScqxveY0CkxfSARGI8ijF/73cYdki2u1Y+k8urW4DuG3zG6x/iHEBsX
AoxHomLGVFxD6C18M3o3TF64Vj9u0uHuf8fgHsN7jH5g9IAxPWtMHokKCQbF
MIcIAwvSW+Ahr52TTdeTMNC7R/8egx8YPpBGbDhMgCltxvzoYdy8LR7y2jl5
cj35yFAbP9B/wECAwVSMQWBMFBhEBQdD+rAbiL1NHvLaOdGsdR4KCuOBwmAq
RuBhSBfOwNsglywgw8Dt09/Hfztr52SdT5wcze4jekzFEBIMZkNSwcGQPpKH
IQ6NW0nIT/jUtrj+QCTrw2C7UGAAxcaEGZhqYYjbDN6GDOOd8hDXHzJM1vzs
pKPfgwKD2lDtQtnQUJ63cjakC5mKR6G793RyWbZ+Syfrfzrk8HWALngbql3o
VLEhv5qhgSHuNBQYdGg83OHH3XudHvr1ezhZ/86TA9cGb0O1Cx2rnp4YPm9V
nqFwKgiMW/y4xf0dvv9GPOT1Tp1sdG95G8oulNtsKPsN9dMT+QUNOWVciCpu
8f0W327x9bc4uaxY7wXJxjBa3CvkPdVmQ7Ch2oWufIbyeLMEBr3w9hY373Zr
uv56yzw2hSEdYvU5RbsLVW9EpWco6v3GI9uLalTwMK5vMX9XL31sut7s6HjG
HSPHqAlhbhjvN8bQvByqbDm4/cbjQoLxcIMfN7i/UY0LYQkqFgzG7BbTm9+T
h/jgv0Ebz7hL5OjUgYbKhnTUBtr9hvKKKD2nPF7TKAxpXIgqbvDtBl9vVONC
gnFDVEwojNENhm/+dfVN19u08bz7w9tQ7TeWvfA1w6PQnMZsEBUL3C9UMO7o
cb+5weIG1zdExUwHY7AgP1D22/CQD8GbsvF8GNXl+42BdsvxOKUwqI0HIbYX
FWF8X+DbQlFhCEO8XFbRW6C7QGfxO5xf3iCMZ+98FBI1OjfELYfahvgBj2OQ
JniY0mYkScU17q/x/ZqqoN0tlHGx0I+LBfkRdRWMa7Spscbb+KGgZ6+3ZuMl
d4Mc9DIeK3gUbNShbEe7CpvHIR5HpIcxHqiNH0IUxv0cQkQF7es1UXFLYSwW
ELpeUBgLTBeYLJbCaIkw5qjPUZu/1wHCH4i3YOOFMH4U8VDGQwUPNTzU8djg
SPTw2MfjgPQwxMMIP8b4MVE+4H6G73N8oxEV17hl5xdJxUJRMaYwVCqupXGh
gVGdoTJDefbOBojmQPxyGy+8A8KD/72I+zLuK8oR/9HCjzYeOnjo4kcPP/r4
McCPIe7ZluP7BN+npG8zfBWa426OW/bFvrjG9bUWhrTBEGFco3etwBDfJcGY
STBKMxSnKEzfzQDRH4hfaOPlL618UK/vVXyv43sD903ct3DfwX0X9z3c9/Gd
bTm+jfBtjG8TfBWa4k5ohtsZbiiMxRzXcwJjfo3ZNabXmFxjTI/+8BpD+m+e
9DD046I0VWDkJshO3oGQt2NjK7crPNq3OdwVcFfE1zK+VvGthm8NfGviWwvf
2vjWwTe26/g2xFehEb6OcSc0wa3QFDfsS1tQMafN5kSFBoZWxRytOQdjtgpG
Zoz0GKnR2xVieDh+iY1twVhksMjiJo/bIm7LuKvgroa7Ou6a+Mq9ynHXw10f
dwPcDXE7oo1xMyFJKqaYz0izGaZz0mSOMTvFkH84O0d/jt4c3Tk6czWMGQdj
ymBMGIyxAiM5QmKE+PDNbUJ+PxjzJOZpXGdxncOigEUJN2XVWea2hds2bjq4
6eKmh5s+bga4GeJmhAX7ptt8AqHZlDSdkSYzRcXQSEWbvbcx42BM14URGyI6
eEMDZNnh+Mk2tvi9G+GBnSYxTWm3HNcVLGpYNLBoYtHCoo1FB4suFj1c93E9
UD5+PsaMNp2QJlPSeIoRfXIxnJFfwNCfoTdDl9aZoT1Di75XUTHVqshTGKIK
AmPEYAwVGBF6N0L9NyHkLdjY4m3xGCYZTLOY5jErYlbCvIJ5FfM65g3Mm5i3
MG9j3sGc7TpmA8yGpOkI0zEmtPGENGIbj8FUUtFTq1DBmKphTLQwxHGxAkaw
j0CP9AuFrDgoP83Gdm+IHL4YhnGMUhilMc5inMOkgEkJ0zKmVUxrmNYxbWLK
7TqmPUz7pMkAkyFpPMJ4jBFNUjFBf4oerTtFZ4o2rcXY1KdEhQJjgtJEgiF+
QFYzLmQYA2MY/h58XXi7v0DI6oPyc2xsHUY3jF4U/TgGSQzTGGYwzGGUx6iI
cQnjinqwtDBpY9LBpItxD+M+aTTAaIihEHvuMBijP0GP1p2gM0F7IqloUhiN
KUQY1QkqE0kFDyM3hhYGGxdPwvB24OnA3fmpQn6tjdf44RDhoWuH0ImgG0Mv
gX4K/Yx21zGsYFjFsI5RA6MmRm2MOhh1ScMehn3SgO09+uQXwqE3RpfWGaM9
JjBaEzTZNKhPUJtIKmQY0nlkLJ1HCIwRgzFUnUdUMHoMRlcLw9UmOdvcd4he
bT15XF7Vxmtc+Yclq5dFP4d+Af0i+iX0y+hXMahhUMeggUELgzYGHQy66HPf
ZOkNINQdojtChyaoaNGaYzToQRdVyDDKY5TGKNIKYwWGoMIABlMR6W8Aw0HP
g/YWrpqvNUbWOTSvZ+OVrpkcLD8aQTRCaEbQiqGdQDuFTgbdLLp5dAvoFtEt
o1dBr4peDb0Gek30uI1Ht4tuD90+OkIDUntIao3QpDXYiaY2hlB1jMqYqJBh
yCoIDE5FashgDBQY4efCELpswtbYspDfFUbFg6oPtQDqIdQjaETRjKOZRCuN
VgbtHNoFdIrolNApo6PeeHRa6LTR6aDTRVuoh3YfLaEBmrTGkCSpGKFKq4xQ
ppVGKNIKI+QpHlEFgTFUVKhg9BmMngTDvzkMoQuh+tZONL/QxuuREx6Wsgdl
Lyp+VIKohlGLoBZDPYFGCo00mlntSadVRauGVh2tBlpNtFpotdHqoNUlNXuk
Rp9UZ9uP2hBV2jIVORnGUFIhwRhIKmQY4hUqMLrPh2GlnQvVXjRG1jw6Wz+I
r/pjyct2GppVz6KeR6OARgnNMpoVNKto1tCoo9FAo4lGC402rYNGF/UeSfy7
1T6EKgNSeUgqDVGkFYbID5FjU0VQIcNIDkgyjGifFGHjwgAGVfEkjMslMM5o
lmcJWf/obPc4vvZTHvKl6kDOhbwHBR+KAZSCKIVRjqIcQyWBShLVNKoZVHOo
5VErol5CvUKrol5DrY5aA7Umai3U2iRZVKUHsXKfVBIaoEgrDJAfIEcjKgYQ
Sg+QookqJBhMRYQ7jxAYTIUKRns9GA1jGJYqzLT1TzQbHaAtHs2fACN9hbQd
GSeybuS8yPtRCKIYQjGCUgylOEpJlFMop1HJopJDpYBqEdUSqhVUq7QaqnXV
/Km0UemgLNQllXqkolAfBVq+j1xfUiHCSDMYREWfFO8TFTKMcI/bYHQ5GB0j
GK2lMGxrwDAJVUinlafHyC+xIdyl1/5HLsJNJC+RvELKgbQLGQ+yPuQCyIeQ
D6MQRSGGQgLFJIoplDIoZVHKo1xAuYhySeWhXEe5gXITJaEWSm1SsUProiDU
Q56W6xEYkoo+0rRUH0maqCIuq+iRFBjdJTDaRjCaz4FhVsM4qeCkvHSMbHp0
tmhDvDOv9I8ohSuPXSBuQ+IKCTuSTqTcSHuR8SMbRDaEXAS5KPLxpXuSYgnF
CopVFGso1mkNUqGJQovWRl6og3wXOVqWvQyS6SHdQ4omq0j0EO8h1kOUJqsQ
lqAiyFT4mQovGxevAUOyUSY2jlk8kleCsWJS8e/SfMx2kSw74vqVjSOXRC6F
XBq5LPI55PPIF5AvIl9CvoxCFYUaKV9HvkHKNWkt5NrICnVI4rWluxBK0ZI9
UqKnqIgxFQQGhRSiKhQYHQ5GW4EhqBBhiDYMYKg3n4qNKnc2WQnjqCR1WJKm
+kYP+Pofb2hDc+EyPy9HQh7zM4StiFwgconoFWIOxFyIu5HwIuFHMoBUCKkw
0lFk4sgkkEkim0Y2g2wW2RyyeWQLyBWRKyFXQa5KqyFbpzVImSYy3Itj6TZS
HVKSluiS4rQYLUqLdIkKEYakokMSVfiYCgVGS4Fhb3IwGioYF8+CcWIEQ0h4
8A+Lm7028nIb/OVP3u6zkZCH3YLgOUIXCNsQvkLEjqgTUTdiHsR9iPuRCCIR
QjKCVBSpONIJpFNIp5HOIJ1FOodMHpkCMkVkSsiUkakgU0WmhkwdaW53mmoi
1SIlhdpICHVIcVqMFu0gQgvTpPNIR1EhjYs2SYbh2hCGdQUMzTZDDeO4pLIh
wvjCOlgPyQttaN61JkhsiES4Wp8ZfgsC5whYEbQhdImQHWEHIi5E3Ih6EfUh
FkA8hHgYiQgSMSTjSCaRTCGZRjKDVBapHFJ5pApIFQ3OUKk6kg2pRFMq3qK1
EaNFaZG2gQoFRhs+mgyDjIsWUaHAYN8ieRUY5VUwRBsHBdJ+YRWSrdtYn4d8
B568Dys3FwYrGkYs+sTfShSRKCFRRqJCqyJRQ6JOigs1SLGmVLQlFaEwwrQQ
fWEk2IZQgOZvq2CQcdEiKtxqFSIMafPZ4GDUN4bx5DZDtGEIQ7Qhpz92v2pu
aNaKMSJcp+sUbhM8ZnjO4D2H7wI+G/xXCNgRcCLoQtCNkBchH8IBhIPSpxmJ
IhpDNI5YErEUYmnEM4hnEc8hnke8gHgR8RLiZVoF8SpiNVqdFBVqkCJNqbBQ
CyGaNC5aCND8NB/NS+NVEBhNkgxDVLEURm2bMDRnE35oyH0WypN4IRs9T9EY
0I+jFQPq2UiEa3OcwGmCywz3GTzn8FjhtcF7CZ8dfgf8TgTcCHgQ9CLoRyiA
UAihMMIRhKMIxxFJIJJENIVoBtEsLYdoHtECokVES4iWaRVaFdEaIkJ1qXCD
FBJqKp9goLlKhQKjSZJVSBsMnQqbblwYwjBXnoCxepvxZQmMfQZD5rE+jI3W
S2DwS0ZydQz7CRyncJrhtMB1DpcV7gt4LuG5gtcOnxM+F/xu+L0I+BDwIxBE
MIRgGMEIQjGE4ggnEE4inEI4jUgGkSwiOUTyiBQQKSJSIoXLtArCVVqNFKqT
FBINiPmbJB/LS/PQ3DRZhQKjoYNRNz6PSDCqa8FYc/+54myigfFKL09hezbk
a5PvKjlHW+A4g8MK5wVcNrgv4bbD44DHCa8bXg98Xvj88AfgD8IfQiCMQBSB
GIJxBBMIJhFKIZRGKINQFqEcQnmECggVaSVaGUEh9bf1AzUE6iS/WAM+mpdl
oKJBctDs7EcvFBh1HYzaNmGsv834rLPx8uG/4mhu8aoujmA7hu0El6fgkWiW
2wm3Cx43PF54ffD64Q3AF4QvBF8E/ij8Mfjj8CcQSCKQQiCNQAaBLII5BPOk
QAGa6wxUIOSv0mpSvjrJy/IINUhumovmbBjAICrqhISsQoFR024wXgXG2mcT
zUHUOzGUs4yTZiuyLR7C9ViPYD3GxQlsp7CZcGnG5ZmCxG6D4wpO+8ZPZAyX
vwBSEf4SyVemVWhVeMVqJI9YHW6ai+VkOWh2GoHBVGjGxUVNB6P6BIzTsm6b
YQTj2dsMvQ3oqKw4Xssu+cA2qC9XIV7P2SHOjnB+DOsJrKe4MOHCDNsZbOe4
tOLygkPigMMJhwtON5weuLxw+eAOwB2EOwRPGJ4IPFF4YvDE4U3Am4Q3BW8a
3gwtC18Ovjx8BZK3SCvRyiRPhVUluWtSLpazppDgVfAwiIoa6aKmqFBgVHUw
KpvBeMk2Y9nQ0F+y4mt/HRtb4SFej+UYZ0InOD/FuQlWM6wWXAg8rLBd4NKG
y0tcXklI7E7YXXB44PDC6YPTD2cAriBcIbjCcEfgjsIdgzsOdwKeJDwpeNK0
DDxZeHK0PDwFWpHkLtHKtArJJVSVcorV4GDZaZKKGi5ZvAplXFSleBUWpuIZ
MAQVz95mrDh2q7Wsb2PZX9wUhukQpiPtyeLcjHMLrGewnuPCiosL2GywXcJm
x6WDGyMe2L2w++DwwxGAMwhnCM4wnBG4onDF4IrDlYArCVeKloY7A3eWloM7
D3eBVoRLrEQrk5xCFSlHVcrOklRUtSqUcVGV4lUoMCpGMMpbhrH+2eTJg77m
h23XxukRTo9hEjqB+RRmEyxmg32F1YaLS1xcER42B2xOXLq4578+2P2wB2AP
whGCIwxHBI4onDE443AmaEk4U3Cm4czQsnDmaHk4C7QirURyCJWl7EIVKfn+
EBUsG+uCxatQwahI8SpMTIUWRklqKzBWn02ePOhrfti2bJDH4Qgnx6TTE5Lp
FCYTzGaYLbAIncFyjjMrzi4MtFy4YHPD5oHNyyEJghSCPQx7BPYo7DHY47An
4BBKwpGCI03LwJGl5eDI0wq0IskuVJLib/SqgkuWjUujQgWjQtKoUGCUN4Nh
YKOwwTZj9S5Cfi//9ooP02DQzKUVt7WOjeNjkE5wcko6NdHMMFlgOoNZ6BwW
KywXOLPRLnF+hXM7zh3Gz1lkJJchXIZxFcFVFFcxXMVpCdiTsKdoadgztCzs
OVqeVsCVEPdNussSSGUpm5hIgmXlOmedVZbDKEsZwCi9FgzN0XzV9ZJb4Q/o
0SmOTaQTs9SpBadnhIfpHCYrzBcw22ARuoTlCmd2ksDj3IlzF6xuWD2wenHh
gx6JIaF11mUBl0UpW0nVRVnJWt5ERZmkUaHAMFJxxFSsD2M/v/HZZOvrhUPj
yykOhUwqJ8cWCJ2c0c5xKmSF6QImG8l8CfMV4WGxw+LAmRNnLpy5ce6heWH1
weqHNQBrEBchkozEFgMpDlsCtiQtRUvDlqFlaTlanlagFUkXciVY5aiNc64z
loXLXFap0IwLAqP0W8F4yc0Jf+vAjC9ch0IWHFnUTs5xYqVd4FRI4HEJ0xXJ
bIfZAbMTFiEXLG6ceXDmxZkP50J+nAdwHoQ1BGuYFlGQXMRxkaAlcZGipWkZ
WpaWo+VpBSlrUdV5SelMbA0V2vMIVWEMo6jA0NhYCmPlNmOLNlZcm/yuZ9vY
t+CA9UXsDIeso3OSZsif2HByidMrmh0mB0ngYXbR3LB4YPHC4sOZnxbAWRDn
IZyHaRFYoyRRiDUOawLWJC0Fa5qVoWVpOVqeViCdixWlzsQoDIs6M8vEdcq1
CkZxOYzCBhPjlYbGiuv88LKNjfBXPp9jn3XA9YV1KGQlHV3QbDi2qaic2AmP
UwdOnTAJuWByw+yheWH2weKnBWAJ4iyEszAtgrMozoViyhg5T4KUoqVpGVqW
lmPlpc4KXEVY1JmLigrzchX688gxI7E+jINfAQNP2fiw5JnLOlcrr89WCO2z
Dri+iF3gUMhGEngcXZKOr0gqJ06cunDqJpk8MHlpPpj9tADMQVhCtDAsEVoU
ZzFaXEFylsRZipamZWhZVk7KkqcVVJkLVAXLxKdXUYTQMddR8SkYhSdgrNhm
GB7El6wnyfEnsjWvU3zWsHcJEjcHPl9AaJ91IGST+sI6vJQ6uqLZSccOkubU
c+rBqZck8DD5aZSHOUQLwxyhRWGJ0eK0hILEkoIlzcrQsqwcKw+zWEHJJMZU
nHLxKlbAOFT3RbSxOYy9NV7QePZa38aaVyjC+OTAJztp74p1ySGxQWj/UuqA
64vYFQ6F7DQHjsScOBZy0dwGr3uc+nEagClIC8EUhilCEniQYrQ4zAlaUkFi
TkMqQ8uycqw8THLMxqm6FSqWwihIg+IJGHljGK/93GS7c0OE8dEFkhOfhBwQ
nezJcWeKz1cQ2mcdcAk8vthpDsKD5CQ8jlw0N+Fx7MGxl3Tiw4nfSEsYp0yI
KQpTjBanJWhJkozElIYpw8qyclKnQnl13E+JnBQgdqzuqEBJ0DcO1T0NI78W
jBWH74VLc9x5DJrLV98BEcbfXvztIX1006iTT06WA3sOxQl/HD/bsc91IOcg
PL44SQKPQxfNTXgceWgCDx/NTzoJ0IIkvRaFTRynCVpSEmJKcUgyOJXLsnIG
V3iSh5gBCXWGMEQbB5vD2Pt1L2jo12ob/6A/jih8wF9+/OXD30JeiE4+ck4+
6Z2wFCQO7HMdiDlJRIiL5iY8Dj00L+Fx5KNRHscBWpAWwolQGCcRWpQWW8Xm
w/KXW0+yOMmpOs5rO+JbqUILI0/a17UMhubrd9Ov5Rced81NL1Mhw/hPEKQA
/hLyQ3KiR+KmSOSc2JPjkTixz+fCgZyb8CBRGySflMCDFKBRG1JhWoQWxXGM
CCHFaQlakpaipUkykpMMSFkcy+XUaVTQDtV94RNh5MG3Pgz+GOnf3tZIWXY9
mssN/fyD/fSy8K5/R/DvMOk/IShI/BySZU44KnsuxYmCxEVgkNxSB3IewuOL
lyUK8dMCOAwSHkchVpgm86BCSHFagpZkpWhpKVHIcQZSWRzJ5dTpSGhV0J4J
I0da85D9TBsrYPwrhn9FaYIQEUlIjSRghMRLkTAqn+REJGLcU5LPbnx2K0L2
PaQDMS9JsEHy0wISD1KIxXiQorQYK05L0JKsFC0tJY+RowxInJBDoZxBehWi
BI2NJ1TkSKth/Fob/AfwMP4njv+JSclI5DGinSQMyd9+ioQ5+cg5+cQ5EWzs
eaT4k+xnDz57JB4kL4kI8dEYD1KQFiKJPEgRVpSk4vGUEB7JYYaq0CSQMOqA
xcNYOi5yqvQw3o4N/g0exj8TIAk8xGQkmjFiOElkJz7FyUc5AYmYV2qPS+XE
i89eice+j+YnPEgBGseDFKZFSDKPwxgrTkuwkrQUV5qVUZB8yeBLVpdOhQSD
vrFv1Gej9tYYGm/BBg/jv0UYcnohK5AwJ38ZDhMfh8Sr8NAj4Z189kFM5CHF
eJBCrLBKyJcoK0aLs5iQL0lWipVmZUiGSA74OBjrq9gIhua5wwthGF7Psuv/
wP2uGAIjCVIC/23IgxOyDMl/wkZIAgwJc/JR3Sd1e1yqYSIg8ZNEHqSglMxD
KiKl4qEWIrVCiA7JQUZtI4v9LHmv8OemKngYy2z82sU/8vz/qnjEpQyFrDNJ
/hLTIPEvR+KX2lOnciIgCdAYj/0QLUzieRxEWTFWnJVgJWkprjRXRkpGsp8h
KhQY6taBIdvY1jR4paWZXfIl+vPLCiSKkNWThBsmf/tVfVT3SZ3KSUDtJAip
kErIfoQVlXqax3Ik+0IZKT0SQmJ5e7re+NDQL0MhL0Hyb0MkumHyd2ANJAGl
PXUqJCFWmKUTsh9jxVkJVpIrxZXm4oQIf37mW0PFe4Qhr3XHyPpIIiok/16O
RHLC+qjrky7CIyj1Qb14HlJRKYXH5kI+swQbnzU2OCSGKjQ23hcMfj1/jDw5
SSK6SRJiSIIGSJY6Cara4wtB60Qn5HOMFedKsJJcKXWyDdEJp2LPsLc3NJbt
czba/ywbIx/kV0KegSSiO92EjZAElyAJatMg+RQi7cmFtSNlL4q9ZwhRI1Fs
pLEntsxGBp9oH7b9hPR5a9ngevZA0386Lz3X8EgiRkjUTv7WpUfykcHQFiZC
SBGS1kmMK05S8aBC9vhSJMGG+MZeWpdOhd7GM4/rNtbWbch/S0byQffM99nn
GmMkYQ7Jmk5CqjQ8lCIk4kT36wplHlIJLrUQxYaRkE9yOhjPfvC3tV7JBn89
zx8j62xIjIbJKiQhpY+GhQ14SEWVPujWMiHEBpshn/jSBr0dGHh9G/KVLNuN
vBCJwcZ1hRP69t+6eBiaVgmJcRn9Zv5PCXyiNoQ/pVK6jGz82m0Gf4w0b6y+
/OU3twyJVsi2Jglz8pcuLZKwlF4IKSKlGSAaIUoJ6XsNejMrlv7x/7Vr2b16
Vb3LkKw7RjTf1+ORRDdG8pfaBp/ehlKUK0bSCyFDIwGppLaPKVWv9PX4TtcW
zjXrI4mokYR1QsJShkj+jpCe5CEVlxJskDcS6pLqdjBWLv2MWirkFZBITsIG
aWxoelKIZENsuRD+09/ZMFyaMcKfiDdAsmLXqkeiHybLMrKhFFXihahsLBfy
wWgL+qrn9Pe7VoyRZ5xr1pok6ziJKK2woURtCH+S4uoSSoYTY6di9dpsN7L5
uUZCEt0EScS4ZTwUG0uELPOwGxprrmVj5KVIYmsg0ThZYkMqKqWyEYWKh1rI
6m3GjseaSz9GsN6W9TlIVjjh/ncFDzHBxl/cKUYjxHCbofnsfsYj+xutrZ1r
XoJElyEP0YZSTNWTz03+QBvLvlI2PclutmV9OZLoWkhIy2xE14JhOCH/hLXs
MXnyi2jFFW42RtZA8q8nkUSfQhIlCTb+E9WeaNaZGH/mer1BKgvhb2KdMbLW
huQpJAZOmA1Nf0V3NozXa59kXzJGXopEN0wMbTy5Bf1j10971rZsN/KSc40W
yVNOiI3IUhvb+kx/m7V6D2Z4+QtvbuMt6/aQCDb4//3P7mzy1NLPfHAH8ZUe
tJeMkWcj0djYwXjL64VjZCMkAgzNJNnZeBdr9ZZ1K0iIDW6YvPZg3K2tr+eM
kdUbEoZEZSO224K+18V/RWv2P89GItiQx8jubPIbrOdsWdXnmn/yNugbOxi/
03rmllWtRWNjB+M3W6vHyGokgo1/xndb0N98PTlG+Hgbu7PJn7OeHCN8so0d
jHexVsz29Y/gqjEi/qI8Gv8L9F5yn3frJ6wVE/55+wE9En53If++9xfc5d36
SWvrNpb9ddnGDsZ7WctsbGtXoHlKwoPZPU9542uFje0+zdRc2+7Zyttfq4/R
6x24nY13sfQbA8O3t36jr30Tu/VO187Gbi1bOxu7tWLtnqfs1m7t1m7t1h+y
/j/T4jES
    "], {{0, 137}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 137},
  PlotRange->{{0, 180}, {0, 137}}]], "Output",
 ImageSize->{184, 137},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->53807685]
}, Open  ]],

Cell["Fishing Mortality Rate of Maximum Sustainable Yield ", "ExampleText",
 FontWeight->"Bold",
 CellID->54439511],

Cell["\<\
The fishing mortality rate which gives the maximum sustainable yield in an \
idealised Beverton and Holt model is found to be 4/3 times the individual \
growth rate (which in the idealised model equals the mortality rate):\
\>", "ExampleText",
 CellID->653098498],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Notation", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PopulationGrowth", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PopulationModel", "\[Rule]", "SurplusProduction"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GrowthModel", "\[Rule]", "QuasiBevertonHolt"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"BiomassMaximum", "\[Rule]", 
        RowBox[{"EquilibriumBiomass", "[", 
         RowBox[{
          RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}], ",", 
          RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
          RowBox[{"Fishing", "\[Rule]", "False"}], ",", 
          RowBox[{"InitialAge", "\[Rule]", "0"}], ",", 
          RowBox[{"RecruitmentAge", "\[Rule]", "0"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"MaximumSustainableYield", "\[Rule]", 
        RowBox[{"MaximumBiomassGrowth", "[", 
         RowBox[{
          RowBox[{"Fishing", "\[Rule]", "False"}], ",", 
          RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}], ",", 
          RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
          RowBox[{"Fishing", "\[Rule]", "False"}], ",", 
          RowBox[{"InitialAge", "\[Rule]", "0"}], ",", 
          RowBox[{"RecruitmentAge", "\[Rule]", "0"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"CurrentBiomass", "\[Rule]", " ", 
        RowBox[{"PopulationBiomassOfMaxGrowth", "[", 
         RowBox[{
          RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}], ",", 
          RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
          RowBox[{"Fishing", "\[Rule]", "False"}], ",", 
          RowBox[{"InitialAge", "\[Rule]", "0"}], ",", 
          RowBox[{"RecruitmentAge", "\[Rule]", "0"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], "\[Equal]", "\[IndentingNewLine]", 
     RowBox[{"PGF", "*", 
      RowBox[{"PopulationBiomassOfMaxGrowth", "[", 
       RowBox[{
        RowBox[{"MortalityRate", "\[Rule]", "GrowthRate"}], ",", 
        RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
        RowBox[{"Fishing", "\[Rule]", "False"}], ",", 
        RowBox[{"InitialAge", "\[Rule]", "0"}], ",", 
        RowBox[{"RecruitmentAge", "\[Rule]", "0"}]}], "]"}]}]}], ",", "PGF"}],
    "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->18597644],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"\<\"F\"\>", "\[Rule]", 
        FractionBox[
         RowBox[{"4", " ", "\<\"k\"\>"}], "3"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 ImageSize->{57, 25},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]//TraditionalForm=",
 CellID->539351534]
}, Open  ]],

Cell["The surplus production of Beverton and Holt growth", "ExampleText",
 FontWeight->"Bold",
 CellID->207112509],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PopulationBiomass", "[", 
        RowBox[{"t", ",", 
         RowBox[{"Sequence", "@@", "#"}]}], "]"}], ",", 
       RowBox[{"CohortBiomass", "[", 
        RowBox[{"t", ",", 
         RowBox[{"Sequence", "@@", "#"}]}], "]"}]}], "}"}], "&"}], "/@", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GrowthRate", "\[Rule]", ".35"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MortalityRate", "\[Rule]", ".2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fishing", "\[Rule]", "False"}]}], "}"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "GoldenRatio"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->386810867],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 114}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 114},
  PlotRange->{{0, 180}, {0, 114}}]], "Output",
 ImageSize->{184, 114},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->441658052]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CohortBiomass", "[", 
  RowBox[{"t", ",", 
   RowBox[{"Fishing", "\[Rule]", "False"}], ",", 
   RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GrowthRate", "\[Rule]", ".35"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"MortalityRate", "\[Rule]", ".2"}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->315617253],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.2`"}], " ", "t"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.35`"}], " ", "t"}]]}], ")"}], "3"]}]], "Output",
 ImageSize->{122, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->303605228]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PopulationBiomass", "[", 
           RowBox[{"t", ",", 
            RowBox[{"Sequence", "@@", "#"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"CohortBiomass", "[", 
           RowBox[{"t", ",", 
            RowBox[{"Sequence", "@@", "#"}]}], "]"}]}], "}"}], "&"}], "/@", 
       " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"InitialAge", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"RecruitmentAge", "\[Rule]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"GrowthRate", "\[Rule]", ".35"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Recruits", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MaxWeight", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MortalityRate", "\[Rule]", ".2"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Fishing", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"FishingMortalityRate", "\[Rule]", "F"}]}], "}"}], "}"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", "GoldenRatio"}]}]}], "\[IndentingNewLine]", "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"F", ",", "0", ",", ".5", ",", ".1"}], "}"}]}], "]"}], "//", 
  "Show"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->224721781],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 114}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 114},
  PlotRange->{{0, 180}, {0, 114}}]], "Output",
 ImageSize->{184, 114},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]=",
 CellID->162742633]
}, Open  ]],

Cell["The basic yield curves", "ExampleText",
 FontWeight->"Bold",
 CellID->34282907],

Cell["\<\
Another numerical example showing the different properties of the Beverton \
and Holt Model\
\>", "ExampleText",
 CellID->414176971],

Cell[BoxData[
 RowBox[{
  RowBox[{"opt", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CatchAge", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"WeightLengthRelation", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GrowthRate", "\[Rule]", ".35"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Recruits", "\[Rule]", "100"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MortalityRate", "\[Rule]", ".2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxWeight", "\[Rule]", "10"}], ",", "\[IndentingNewLine]", 
     RowBox[{"RecruitmentAge", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InitialAge", "\[Rule]", "0"}]}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->377916220],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"TotalCatch", "[", 
       RowBox[{
        RowBox[{"CatchAge", "\[Rule]", "tc"}], ",", 
        RowBox[{"FishingMortalityRate", "\[Rule]", "F"}], ",", 
        RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", 
        RowBox[{"Sequence", "@@", "opt"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"F", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"tc", ",", "0", ",", "8"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[8]:=",
 CellID->31280917],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 117}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 117},
  PlotRange->{{0, 180}, {0, 117}}]], "Output",
 ImageSize->{184, 117},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->58522005]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"TotalCatch", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FishingMortalityRate", "\[Rule]", "F"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CatchAge", "\[Rule]", "tc"}], ",", "\[IndentingNewLine]", 
     RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Sequence", "@@", "opt"}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"tc", ",", "0", ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPoints", "\[Rule]", "35"}]}], "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->130858157],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxsvXt4nVd1r7tQAklIE7DiOPfEku0EArlYmENbAhKwW8qlpxu6aSG9ABso
ZPMUWmi5le2TQssds4ESAj1NKSUBAggISRrcIBInJgm5ycu2bEu2LC0tLS1J
SxcUkpCNcTZZU+9vnN9YR/+s59WY3/fNy5i3Mcecs+e/v/PVb+mqVCqXX1Sp
PPGb/85t/13T7zwovqr9d3OSD4l3V5/42yH+Yjv8T8R/cvkTfz8Vn9d+/gHx
z5af+BtO76uKb7rxib896f0j4ve/74m//el7o+IXXPbE38H0/XFx+ZtI8Qmu
Tbb/Uvxq4jvveOJvKsW3Lr7u2if+plP8G+KPffSJv5mUnqb4f1zxxN9sSt+c
+JWveOJvPqW3Jb74oif+FlL6F8VPf9oTf0spP5YTR7rRF+dBMfri8iEx+gKj
LzD6AqMvMPri76uK0Rd//4gYffHvjYrRF//+eL+X+0SKTzD64vGLX/TF41sX
oy8e/4YYffH0NMXoi6dvToy+eHpbYvTF078oRl88P5YToy8rSV9Wkr6sJH1Z
SfqykvRlJenLStKXlaQvK0lfeF9V7PqykvRlJenLStKXlaQvK0lfVpK+rCR9
WUn6sqJ8hF1fVpK+rCR9WUn6spL0ZSXpy0rSl5WkLytJX1aSvqwkfVlJ+rKS
9GUl6cuK9KX92suOSF+cB8Xoi8uHxOgLjL7A6AuMvsDoi7+vKkZf/P0jYvTF
vzcqRl/8++Ni9MXjE4y+ePxqYvTF41sXoy8e/4YYffH0NMXoi6dvToy+eHpb
YvTF078oRl88P5YT0750DXj7Ag+KvX1BPiT29qVrwNuXrgFvX7oGvH3pGvD2
hfdVxd6+8P4RsbcvfG9U7O0L3x8Xe/tCfIK9fSF+NbG3L8S3Lvb2hfg3xN6+
kJ6m2NsX0jcn9vaF9LbE3r6Q/kWxty/kx3JixlnHSV+cB8Xoi8uHxOgLjL7A
6AuMvsDoi7+vKkZf/P0jYvTFvzcqRl/8++Ni9MXjE4y+ePxqYvTF41sXoy8e
/4YYffH0NMXoi6dvToy+eHpbYvTF078oRl88P5YTM47+DemL86AYfXH5kBh9
gdEXGH2B0RcYffH3VcXoi79/RIy++PdGxeiLf39cjL54fILRF49fTYy+eHzr
YvTF498Qoy+enqYYffH0zYnRF09vS4y+ePoXxeiL58dyYuZtT5e+OA+K0ReX
D4nRFxh9gdEXGH2B0Rd/X1WMvvj7R8Toi39vVIy++PfHxeiLxycYffH41cTo
i8e3LkZfPP4NMfri6WmK0RdP35wYffH0tsToi6d/UYy+eH4sJ2b80p3GL91p
/NKdxi/dafzSncYv3Wn80p3GL91p/NKdxi/dafzSncYv3Wn80p3GL91p/NKd
xi/dafzSncYv3Wn80p3GL91p/NKdxi/dafzSncYv3Wn80p3GL91p/NKdxi/d
afzSncYv3Wn80p3GL91p/NKdxi/d0hfnSqX9motOlb44D4rRF5cPidEXGH2B
0RcYfYHRF39fVYy++PtHxOiLf29UjL7498fF6IvHJxh98fjVxOiLx7cuRl88
/g0x+uLpaYrRF0/fnBh98fS2xOiLp39RjL54fiwnrlTa0fzoadIX50Ex+uLy
ITH6AqMvMPoCoy8w+uLvq4rRF3//iBh98e+NitEX//64GH3x+ASjLx6/mhh9
8fjWxeiLx78hRl88PU0x+uLpmxOjL57elhh98fQvitEXz4/lxJVKyYYzpC/O
g2L0xeVDYvQFRl9g9AVGX2D0xd9XFaMv/v4RMfri3xsVoy/+/XEx+uLxCUZf
PH41Mfri8a2L0RePf0OMvnh6mmL0xdM3J0ZfPL0tMfri6V8Uoy+eH8uJK5Xn
t997tvTFeVCMvrh8SIy+wOgLjL7A6AuMvvj7qmL0xd8/IkZf/HujYvTFvz8u
Rl88PsHoi8evJkZfPL51Mfri8W+I0RdPT1OMvnj65sToi6e3JUZfPP2LYvTF
82M5caXyhXa8z5W+OA+K0ReXD4nRFxh9gdEXGH2B0Rd/X1WMvvj7R8Toi39v
VIy++PfHxeiLxycYffH41cToi8e3LkZfPP4NMfri6WmK0RdP35wYffH0tsTo
i6d/UYy+eH4sJ65U2tF633rpi/OgGH1x+ZAYfYHRFxh9gdEXGH3x91XF6Iu/
f0SMvvj3RsXoi39/XIy+eHyC0RePX02Mvnh862L0xePfEKMvnp6mGH3x9M2J
0RdPb0uMvnj6F8Xoi+fHcuJKpZ2Ma3ukL86DYvTF5UNi9AVGX2D0BUZfYPTF
31cVoy/+/hEx+uLfGxWjL/79cTH64vEJRl88fjUx+uLxrYvRF49/Q4y+eHqa
YvTF0zcnRl88vS0x+uLpXxSjL54fy4krlVIsvdIX50Ex+uLyITH6AqMvMPoC
oy8w+uLvq4rRF3//iBh98e+NitEX//64GH3x+ASjLx6/mhh98fjWxeiLx78h
Rl88PU0x+uLpmxOjL57elhh98fQvitEXz4/lxJXK4+2/DdIX50Ex+uLyITH6
AqMvMPoCoy8w+uLvq4rRF3//iBh98e+NitEX//64GH3x+ASjLx6/mhh98fjW
xeiLx78hRl88PU0x+uLpmxOjL57elhh98fQvitEXz4/lxJXKs9vv2SR9cR4U
oy8uHxKjLzD6AqMvMPoCoy/+vqoYffH3j4jRF//eqBh98e+Pi9EXj08w+uLx
q4nRF49vXYy+ePwbYvTF09MUoy+evjkx+uLpbYnRF0//ohh98fxYTlypvK79
3fOlL86DYvTF5UNi9AVGX2D0BUZfYPTF31cVoy/+/hEx+uLfGxWjL/79cTH6
4vEJRl88fjUx+uLxrYvRF49/Q4y+eHqaYvTF0zcnRl88vS0x+uLpXxSjL54f
y4krlY+043mB9MV5UIy+uHxIjL7A6AuMvsDoC4y++PuqYvTF3z8iRl/8e6Ni
9MW/Py5GXzw+weiLx68mRl88vnUx+uLxb4jRF09PU4y+ePrmxOiLp7clRl88
/Yti9MXzYzlxpfKDdrqeIX1xHhSjLy4fEqMvMPoCoy8w+gKjL/6+qhh98feP
iNEX/96oGH3x74+L0RePTzD64vGridEXj29djL54/Bti9MXT0xSjL56+OTH6
4ultidEXT/+iGH3x/FhO/OscamfDM6UvzoNi9MXlQ2L0BUZfYPQFRl9g9MXf
VxWjL/7+ETH64t8bFaMv/v1xMfri8QlGXzx+NTH64vGti9EXj39DjL54eppi
9MXTNydGXzy9LTH64ulfFKMvnh/LiSuVk9rhniV9cR4Uoy8uHxKjLzD6AqMv
MPoCoy/+vqoYffH3j4jRF//eqBh98e+Pi9EXj08w+uLxq4nRF49vXYy+ePwb
YvTF09MUoy+evjkx+uLpbYnRF0//ohh98fxYTlyp/Hb7vc+WvjgPitEXlw+J
0RcYfYHRFxh9gdEXf19VjL74+0fE6It/b1SMvvj3x8Xoi8cnGH3x+NXE6IvH
ty5GXzz+DTH64ulpitEXT9+cGH3x9LbE6Iunf1GMvnh+LCeuVN7ajsdF0hfn
QTH64vIhMfoCoy8w+gKjLzD64u+ritEXf/+IGH3x742K0Rf//rgYffH4BKMv
Hr+aGH3x+NbF6IvHvyFGXzw9TTH64umbE6Mvnt6WGH3x9C+K0RfPj+XElco/
teN9sfTFeVCMvrh8SIy+wOgLjL7A6AuMvvj7qmL0xd8/IkZf/HujYvTFvz8u
Rl88PsHoi8evJkZfPL51Mfri8W+I0RdPT1OMvnj65sToi6e3JUZfPP2LYvTF
82M5caVyezudl0hfnAfF6IvLh8ToC4y+wOgLjL7A6Iu/rypGX/z9I2L0xb83
KkZf/PvjYvTF4xOMvnj8amL0xeNbF6MvHv+GGH3x9DTF6Iunb06Mvnh6W2L0
xdO/KEZfPD+WE1cq723H61Lpi/OgGH1x+ZAYfYHRFxh9gdEXGH3x91XF6Iu/
f0SMvvj3RsXoi39/XIy+eHyC0RePX02Mvnh862L0xePfEKMvnp6mGH3x9M2J
0RdPb0uMvnj6F8Xoi+fHcuJK5eR2uM3SF+dBMfri8iEx+gKjLzD6AqMvMPri
76uK0Rd//4gYffHvjYrRF//+uBh98fgEoy8ev5oYffH41sXoi8e/IUZfPD1N
Mfri6ZsToy+e3pYYffH0L4rRF8+P5cT4M4S+OA+K0ReXD4ndnyH0BXZ/htAX
2P0ZQl9g92cIfYHdnyH0BXZ/htAXGH3x+AS7P0PoC+z+DJuTP8Pm5M8Q+gK7
P8Pm5M+wOfkzhL7A7s+wOfkzbE7+DKEvsPszhL44s3+6T/riPChGX1w+JEZf
YN8/3Sd9gX3/dJ/0xd9XFfv+6T7pC+z7p/ukL7Dvn+6TvsDoi8cn2PdP90lf
YN8/3Sd9gX3/dJ/0Bfb9033SF9j3T/dJX2DfP90nfYF9/3Sf9AX2/dN90hdn
9h+FvjgPitEXlw+Jff9R6Avs+49CX2DffxT6Avv+o9AX2Pcfhb7Avv8o9AVG
Xzw+wb7/KPQF9v1HoS+w7z8KfYF9/1HoC+z7j0JfYN9/FPoC+/6j0BfY9x+F
vjhzDs1zpC/Og2L0xeVDYvQFRl9g9AVGX2D0xd9XFaMv/v4RMfri3xsVoy/+
/XEx+uLxCUZfPH41Mfri8a2L0RePf0OMvnh6mmL0xdM3J0ZfPL0tMfri6V8U
oy+eH8uJ+dsifXEeFKMvLh8Soy+wny+1RfoC+/lSW6Qv/r6q2M+X2iJ9gf18
qS3SF9jPl9oifYHRF49PsJ8vtUX6Avv5UlukL7CfL7VF+gL7+VJbpC+wny+1
RfoC+/lSW6QvsJ8vtUX6Avv5UuTHckrPnTpnpcTvbnH53n0d8stW44H8MovX
sLjk7y5xyc/dHeFLPj2q8DDh4ZLfe8Xld5+45OcBccm/MXHJr0Pikj+HO77f
Tub7KgN8H+b7MN+H+T7M92G+D/N9uPxOpPdNitvqcXktvX9KXPK1nr43LS71
u5G+P9ORnvLck5UemPTApAcmPTDp8fdNikmPv39KTHr8e9Ni0uPfnxEX/WqK
V9r1P7iU96x4T1vN58Sl/OfFN7frS0tc9GFBfHW7/i925Ef5zgnKD5j8gMkP
mPyAyQ+Y/IDJD5j8gMkPmPyAyQ+Y/IDJD5j8gMkPmPyAi34tdcS3hDtZ8YWJ
L0x8YeILE1+Y+MLEFya+MPGFiS9c4rut3/uxODeR9pT/017CPh7n3Jml9L5l
sc/vWul8rJbCZTntmX/nUZ2fBfv5No/q/CzYz7d5VOdnwX6+Tbyf9sT341TS
fpxK2o9TSftxKmk/TkX9Oez7cSppP04l7ceppP04lbQfp5L241TUn/v3m2L0
MaeH+k96YNKT20+vnxMd7Uc+Lyi3r/n8IOSk39uzaF9Jv7dn0b6SfpjxDMx4
xtv3aE8Zz3j7Pp/yp5XyYyHl12L6/pKY/PD2a7KjfaX+kh+5vfX2Yqqj/UVO
fuX22NuT6Y72GTn5mdu/fN5Obr/z+Tu5Pc/n8eT2PZ/P4+mL9pzy8PhHe055
ePyWOvKj5MMapR8mvTDpze0/ctKb+wPkpDf3D8hJb+4vkJP+3H8gJz9yf+Lp
W+joX5CTX7m/QU7+5f4HOf1B7o+Qk94Sbq3SB5MemPjDxBcmfjDxgYmPl99S
hxymvyz1JuanMM9nLqG26Hmec3mc3+v9S7NjvJ3PH8vjUeoH7YGfXxXnZ6Hf
fn7VdIfczyuK85LQfz+vaCadTxTnJVG+fn5TnJ9E+fr5TXF+EuXr5zfF+UmU
r5/ftNTxfc7D4fsw34f5Psz3Yb4P833Yx0Pdqfxj/oq+uL2zqt883sj9b+5v
c/+R+4vcP+T+ILf/ub3P4ak/hIcJn9vH3B7m9i+3d7l9y+1Zbr9ye5Xbp/w9
6rfbK9Yme8XaZK9Ym+wVa5O9Ym2yV9AeHVodhz5lNT8Oi9vZeeNEkk+tzutP
XB0f1cUl/tPiUt8b4hL/GXGpz01xif9sx/t3tvXiaXo/zPvhkq6WuNSv4KJ/
C+JSvxbFRf+WxMSnxJP6Micu8ZwX832Y78N8H+b7cCmPnTrnt+T3Xf1uV75H
XOr/QZVPqQfj4vLeiQ55qSfHq7xhwsOUP1zSF+Vd0hdc0hflX9IX5V/yN8q/
xL/Z8XxJ50kqX5j3wegTzPth9AvmezDlC5ff0I8/bX8/9KN8L/SD8qK/dPve
jn7qF/lXeFLfaxfHVTUx9Qsmv2HqA0z+e/ynO8KX/F2T6ueaVD/XpPq5JtXP
Nal+rlF9gKkPMPUBpj7A1AeY/IapHx6/pY74lHSdovjAxAcmPjDxgYkPzPdh
vg8TXz9fcSmNR7Z21Gf0xfvnajpPvNpPe8TzPh/Fnjqb7JNN6Sfs46XZjvbN
4zsnOezjqXnJYR9ftdL4ppXGVwtpfLWYxldLHeXPeIXxCXLC037Crg9b+4vZ
4DkaDzG+Ib9hnie81+dastfX0nnrYW8vcs6/3yXG3p3l5fkjyX5/RPZ4GPsx
jP0YZryV7e/5+fL9LtmfYezPMON7mPfB6KO/bzLxbIc9J4dn/sD8wM9DjvOY
Gf/7echxHjPjf5+PxHnM6E+2d7h9J87bZfzt5/3GebuMv/2834WO83Szfdbt
EXetls/B1fWUezvY7UL3i0v6HlzNX9Ypd4nL7/Dqcw9LDpf8rnbIS3wfW/3+
bslLvPaIkRO+/H+vuMRvn7iU/34x3y/94FG9D+Z7MO+HS3mPiPkeXPJ/f4e8
lNOTBogP8hKvA2LkhKd+UJ+KfowqfNGPMTFynqc+8TzjN8IzXoCR8zzjN+Qw
csZv/r1JMflRfo9V+mHSDxN/mPTBxA8m/jDxgxlvwsQXZrwJE39//2SHnPEt
7QftS9GPmsIz3oKR8zztjbd3Uyn+wch9vB33CzB+IzzjMRg5zzOegxkPw4x/
YdKfx5cw6YNJP0z8fT4w1THeh4k/THxhxpcw8YcZb8KkB2b86d+P8/MZ3/t8
pZniE+EZ7yNnvOPxi/P4S/7NpvybS/k7m+Y3cX5/0fcIDxO+hJsXf6Cdny0x
8w+fLy11fJ/xvY93T9L3YB//nqTv+/yiJSY+Pr9odcyPYB8vn6TxFf0b42Of
vwX7ePqkNH4jfnEPG/Nf+kcff9FfxniZ/oX+hnG1928zaf7fydiX0De3R8d4
G0aOvrn9ajbNH2fT+udcslfHeBx2e/58sl/H+Bx2+37Y2ylvwsMefrljfO32
rxgvI6fcfH6/JtWfNal+rEn1Y02qH2tS/YjvEz8v/26N/0tswr5JfF3OvRj3
pfvn7pU++foyflvLYtaHGR+hbzD5k+c7Pr+pVP7/85P4D+u97m9a1fiQ+sD8
xdef79b8g/T6+vN9kjN+ZDxJfYJ9ftJK90e1NH4jPPFnPgAzHuL9MM9TXxnv
weX5GE8yfoEZb7h8l8b/Pj/rkv+Rr9fuTf15jAf5Hsz4CGY8BBMfmPGOh59M
47fZ9Py+NJ/Yl+ZLY2n9cSz1bzFeYjyQ7bsw/T1M/+7jrUYaP82I0V8frxxK
7eOhdB/J4dS+HU73z0R/6vamE9W+uX0y2O1NJyZ7w4maj7o9Pu7zYHyJHHb7
z1RqH+O+D8aHJZ5r03ixW/NZ5LC3Zw3JYeTMd5HD3r7EeiaMnPFTSdc6cTsa
un9gVnIYOeMh5DBy5s/IYeTMp5HDyJlfI4eRM/5ADiPHf4j2yfd/tGSfc7/S
uI+T+baviw6L/T6sRxWe9t/bkxXNZ5HTvsF+Pi/+irs0/8P/x/1Z9qX5ylJK
X9xvSX9B++znA4f9gPaT+Ph8vqn0wrTftF/EF38d9287mOYfS0qvx7cr9YfH
qr3J45/yvbUaP8CMH2DGpzDfQ39g9Acu5RTr6e5/vtqefOY5Gg/6+vBsWh+e
S+vDYU8l/n6/z0LiezrsQ3m8THkiR78oX8qH/pf+Bn3MTP7TH3p7P9bBPn85
lOZDh8X0T4xH6Z98PDslpn9i/Ef/BNM/+fhwRsx4HnZ9Xav+Bqa/gelvYPob
mP4GZv4Dl/p0W1pf3yEu+XeH/u/27oNij99h1Xe3165oPOTlP6HwMOHL/ycU
3ufLsf5AfUe/0Sdfr6ypPWWcS/uYx9fub36Pvo9/gc+nDqX5aPTf6BPzBeKB
HP3y9YTov329e03an7A2rcedkvYrrE3rcaek/Qtr0/rmKWk/w9q0vnlK2t+w
Nq1vniJ7O+0X+lzSFff1IEe/keNfgBx9R46/AXL0Hzn+Bz5+CDn+CD5+WJCc
9RgfPyxKXr63LH1F/z3fltP4YknP+/pLNa3H1DTfcL+QvQrvXFP/TXje5/6h
VTHtK+0n6y/0h/jTuP/M/mR/m0jz84nU/x1O9pTd6j+xr+fvMz/AHpy/5/5X
E3q/71+spvqbx0Mzmh96eUX7Q/nl8NR/wvt6RbRH5K/bb+P+VsLTPvE9n48u
K3/wN3b/zPFknwz/CPxl3b4Y9lj0Bqa9gWlfvL8M+ynth4+Xwh5K++D22LBn
Uv89/sviki/XqTzLzw3ikr/bkx1tl9jXF6tan/R6cEjs/VM19T88P5m+XxO7
vR67QT19b1rs8yW+PyP2+VC139crq+rvYPfPoz2ZF7t/Hu3HQorPNuk/+Q+T
/zD5DzN+8PH9PrGvD7f6ff2qpfLw8JPpe7X0/JSY/Pb3TYvJbx+PzKT63hT7
/KGVxhct5be3//Ni8hsmv2Hmgx6/bWo/yH+Y/IfJb98/N6b5EOMR2Ne3H1V+
+v65KTH56fvppsW+vv2o8hMmP/35WcXH1yseVf7B5B9M/sHkH+zr548qP2lP
yU+Y/ITRZ5j8hZmvw9gvYfpr5ieM59xeNiVmvAaTH7yP/IDJD5j8gMkPf34p
zZe2qf8nP2Dyw8cH29P+kTvTfrthMe+nf+L9MO+HeZ+PL4bFvI/xBO+DeR9M
fGHKz8cnwx37u3z8fZ2Y97t9bbuY97u/7t3J3/aQmO8xXuZ7MN/z8fj25M+/
O433J9L4fjLZ47Zp/Mn3fLw8nOwL+8S01zDtA0z74OP76TSeb6Tx+0z6fjOF
39Zf7NCnK74w+QOTPzD5A5P/MP07TP7B5B9MffT3z4upjzD1EaY+wrRPMOkt
5xGdpfTCpBemvGDKC6a8YPpX5ykx5QdTfjDlB1N+Hp+mmP4Spr+EyU+Y/PTv
bet/Wzsd5yg/YOobTHnDzIdgyhumvGHKG6Y/hMkvmPzy7y2IKW+Y8oZJ3452
vM+T/sKUL0x5wpQnjH7DlBdMefn7m2LKC6a8YMoLprxg9B8mP2DyAyY/PL7o
f0/S9x61pzDlDVPeMOULU74w5Qt7fehJ9aEn1YeeVB96Un3oSfUh0lPe26vy
hX083Jv8uXqTf1Zvsqf1Dvh4tHfAx6O9Az4e7R3w8WjvgI9Hewd8PNqb7PW9
qT5uSPVvQ6p/G1L92pDq14ZUvzak+rVB+Q+T/zD5D5P/MPoNk18w6Sm/G1Uf
YcoHpnxgygemfGDyHyb/YfIfJv9h8h8mvqX+bErtxSblN0x+w+Q3TH7D5Dfs
7cmm1J5sSu3JptSebFJ82/9ePl/6AqMvMP0ZjD778/Ni8tPftyAmP/39S2LK
8+x2Op+h8oQpT5j2BSa/YfIbpv6/vP0d7gO4T0z+w+Q/TP7D5D9M/sPkP4y+
w+QnTH7C5CdMfsLkJ0x++vd29b+nnU8Xqrxh6tfX2u99lsobpr7BlA9MeQy3
0/FslQdMecCUB4z+w+Q/TP7D5D9Mfh9t3z92kfIbJr9h8hsmv2HyGya/YfIb
Jr9h9Kncb3Wp8r/Uv0uV/7CP7zen8f1m5TdMfpf6sln5DZPfMPkNk98w+Q2T
3zD5DaPvsK/v9iV/yb7k/9g34PaEvgG3J/QNuD2hb8DtCX0Dbk/ok70aOyf+
yNgzWD+G8TfO/uvuT7M3zc/DXoA/rPtLZ3tBQ8z6TAl3rNZ7YewvMOsp7u+6
lOy/d2o9zP3b8OcKfye3Tz+W1tcf6/f9uI/Jnk788R+AeT/M+2HeD/N+z6/w
Z8Ie7v5S4d/k63FPSutvT1J+ln7tqOzFeX0i5yf5DZfn1yZ/gh2yf7p9vpry
427pn/vLhX+Ir4/G/gpfD3pY9lm3D4a/mp9n9JjCEx/C5/0IeX+B6/PhZP+a
SO+L8vDzDo6V3P23aym/Y/2C9sb9rWP9gvbG/c9nOvw//P1hX/XzXB6TPdXz
I/SH+Lh+dvqLZ39w90/P/t970/vC/8f9Bx+WPRv9JX3kb/nePbLzlvB3i1lP
d32J8H5+24zWI2kvkGd7JPXO7WGVCozc7WPcK3yD5G4vW/Vb1fpQrd/PP612
/Pp5p1W1b76+M9bBfM/PP83ha2r/fH0n1pf8PFTWdyZTPDvXm/i+n4/K+VSx
/oT+eTs3ndIf61GUo+dHrD+xnufrrbH+5OeR4L8c61F+firrY7Ee5een5vWq
Wr/rz0q/6wt8s9ZXXF9W1O4id/+XlX4/L7klfYD9vOSW+jvYz0tm3HFY/k8w
3/Pzk1sqf9j9AlhvivUvPz+5pfKF/fzklsrX0xfrXZQv7OuPKypv5H6eckvl
C1O+nj+x/oW/BUz5Fj6yyoMd62PIKV/Y1yOPpPMsjyi/3X8o1sfIb1+fivUx
X388ovz39apYLyP/fb0q1svIf5j89e/F+hj56+trsT5G/vr6XKyPlVq5LPb6
1JXW37s0n/X9bEMd62fI8WfN62fIWQ+jPyK9hCe9MOmFSS9MemHSC5M+/EvQ
p7wehpz0wqQvr18h9/0WsT7m39sm/xW+53xzx3oZcvTZzzPb3iGHiV9e//Lz
ww50rIfhz0n8YOLj/ufbxXwfpr7xftj35w8n//QxhffxJOtn13Ssp+Ev7vra
nfS1O+lnt+Jb4rFW8YMZP/M9GLnPP9ak8W0w4YlvWz0uOlXxhYkv62HEF/bz
JteKkft+obVi5D7uWKvxY2bCMz5B7ucpr9X4OzPPk962+n/0NNU35KQfOfqP
nPxATnnl/Mly1tcoT8LDyPEHQ075ZiY84wF/3/60PjrWwTzv49R1ml96+cZ6
Kv0HTP8B0394fJop/rMd642lmztD+Q+T3zD5y/oc+sb7YOToG3IYOfqHHH3L
7O87mMprXIx+wugnjD5m5v30N8jpbzz+rbSevJDis5jWl5dS/JY78v/57fee
rfyHyf+83kl8YcL7+thZYp73+4jOkj5nJrzfP3SW9Nvza1TM/Dcz70Pffb13
KulTrD+j77DfJ3SW9N3jF+vNjFdz+fr6d6w3Yw/MnNdrv9COx7lp/SXWb339
eLvCU16Epz4QHkZO/UCOfczXk/d1MM9TP5BTP1yfghnv5vLy9fVY//b1uHPS
etF5qh+uf7EeTv3w+C135HcZr61XfeD9MHJvn3rUHhHe26ce1Qdf797Vwb7+
vF9y9N/L82Babz/cwb5eHfmFfvv6eKzXo9/uDzCb4hPr8+i3x6/VUT6uL4sp
vrE+T/nk9foy3+lVebSTdW1Paq+CCe/3p/Wk/iGY8NQHL989Yvd/CeZ59N/j
E4z+w95e9aT2qie1Vz2pvepJ7VVPaq96kn9MMPH1+WxwyYbe1D9sSPsHe8XI
/TzxXul3ZsK7faM33QfVm+6D6k33QfXKnpvZ/QFm0/vDX8HtB70Dbj/oHXD7
QW+6j6l3wO0HvdLfnJ/t5bPHN6T2Oxi596fB5T0bU3u9IbXXG1J7Hczz3h5v
SO3xhtQeb0jt8Qbpo/tfhL8E+ujfn0npaXaUD4z9LjPxJz/L+uOm5M+0SfWZ
8N7fbZK+IUffPPxBMfoGo1+Z3d9hPr2vlfw3FtL7F5M/R/hfoE85/a9rx/v8
1N9vEpf1y/NT/7Mp9T/BhEc/XB7+HegHjH7A6Afs/c+m1P9sSv3PptT/bEr+
YcHEl/zA/4H2CDmMnPrj8j1ixqMw9orMvI/2BDnlD1P+MOXv5RP+IpQ/TPnD
tMfZ3+MH7XQ8Q+0Fchh/CfQdOfoOo+8w/RmMfsDoB4x9MjPfJ774Z7Bfyv1L
hjvY/Tvifeib+4+EPwv65v4j4c+CvsG0R55f4b9C+bp/TSv504T/CuXr/jRL
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
kR6/j6Gp/gym/y3ff1Dzu5I/YS8r8t1p/alz/cf3b+1bHZ/9oh97EOlFn2Hs
Pcz3mC8Rfz9f4ASt72DPKPnzOdkzy3s/IntFeX/YN7DnEX/Wk3gf9jp//0Sy
p80m+/Rssldk+/H9mm+U90R5Yr/L5cv3SrnV0venkj2unuxp08ke1kj2rLAP
YR/38+PDnlS+l+1JwSXezXQfWzPZ35rJXheMPYDnYZ4v5d9M9rFg7At+38ls
stfNJvvebEd58jzs863ZlF+zKT1zeh52+96cwpf2Ipj1M78vOp4v9uS5lF/B
2M99v/7edP9A3BdE/aXfw97m5z3vT/tBoz6X9+wXsx5W7CO/TPt/KwMux/52
ONnTmxr/u78d+39ivo596jJr5x5M9pgH0jmuD4qxZ/A8zPOlvg2ndd/hjvUH
P+/jgXQ+QrQvrAeUfuupsv9TPjD2BtoH7EHlfcHoI+0L4ykv/8g/xjuev2GP
wb5Hvvv6J/aZuF8MezHtLfP7fJ+c20dCP7CnYz8o6Wsk+8UB5Qf+A36+Q+hn
ya9tig/jVbdnHUj2rgN6nvru59XHfU5+/wP7wxf1Peyx6BPs+/d/ovzG/k14
mPCsV7m9LPxh/L4Y/Cnu7/BH8PWl8GdhfIA9hPR6+Y2l/bOzaX/YrObn9Ke0
B+Qn8/1SrqH/6F+J76L0n/j7+P+o9KcdjSt+JXs39QemfLDv+bmB2V9oQu+j
/pDf5G+2l8PEz+1wyx1y6iv55+3rcoc++v7mvJ4b4wHXqzjPHmY+7v1bjAcY
j8NuN43z7GHiDzPfy/0f40nGr+h34RtVXiU9t6f76fYn+QFx0aPrO+6PhBlv
ON+axmc703rAtMZbjI+ch1N/znlMJ8p/CX1H/2lPaH/o35gfwozXYeojjD0D
Zv7r5RPrOcwvvH+L8aWfLx/M+0r+1tJ4IvSpPBf65OPYOF8IZn7n45UYLzB/
Qs58xPU9j88ivykPf99wyo9ob6hvtDfMB/3coT1pfpPP/4n+lve5v8my1pMo
P+YPyH0+8VWtb8DUF2+v8Iec6nc7cT2Nf+Ylxz/Ixze3pPW+fapf7p+3rPU2
X1+qixmveX1d6Pd58vfUvjH/Iz9Z34aZb3j9Xkrt5W1pvnxXWh+5XuMHvk/9
pf3x+zau0v1Cnv+cn3C9xgN+Xk2X7IuUJ+uLl1k9PJTKP9bLsUfBrIf5fDvG
24yHYOS0D8hh7Osw8YGJP4w9xOMzJn1ivTrrG+NB2jf0gfF+ee/PVP70v+gJ
5U1/k9tvP2/ulnTf5G3p/rKd6b7lu9J9ZcMqb9Lj9w2PSU7/5Pc73ZN4V9KX
quTYK5AzH0KOPqJf6Cvjc9KPnPT7eusdOl+P9Pt9UvdKzvjQ74vam+5bG5G8
cE3y8luTnPz3+cTtGg+S/z7/uEdy8g85+Yec8vH0jklO/pR8OVP5UeyfZyg/
kJMfyMkP5OQHcvIDOfmBnPxATnmWduRs5U+xl56l/IDJD8KTH8jJD+T4NyDH
HwU5/qPI8R9FTntW7KPnSZ+KvfUclR9y8gs5+YWc/gM54zfk+FchZz6CHH0v
vF7lWYpxvcoTOeWJnPxCTn4hp/4hp/4hp/0v8ehReZX39Cg/kJMfyMkP5OQH
cvIDOf2lPz8rOf1PGT/3Sp/OaevdBuUHcvIDOfmBnPxAznjC3z8hOfpQ/r9B
+gqjr0X/Nyq9yEkvcuxXyOkvkFPexT6/Sflbpjkblb/IiT9y4o+c8iv2/PNV
fqU+nK/8QU7+IGe+ipz5DHLqz652OV2g8ijrrReoPJAznkLOfAY5+l/Wy56h
/IbJ71J/niF/Sg8/JTn68qx2vl04gD2srL8+U/0fcsq7rIdcqPYPpv17bTvd
z1J5/WP7u89We7TUTsez1B4hpzzK+tVFKo8b2s9dJP9G5MznkJO/L2v//2Ll
7+H2ey5WfpX1q0uUX+31tuMuVfrbn3n1pUp/+3vXXKr0tvNz9lKlt/35LZuV
vnYyrtys9LX1997Nso+3s3ddn+zd7XS+sS/5y1c1vnc/o05/Oca7zN8YD/l8
OvYvwX5uaew3yefVur9h7E9ivcftnZ37kfL+I5j6lPcbwbwv7y+Cyf+8nsT4
lPoEMz6AKS+Y9h9m/sp8gXTC5BfM/NX9ITv31zDfcDt67I+B2R8C468Bs78D
dn/82H+S95vk/SR5v0jeD5L3e/A+P+/6vnTf7X39+Dujb+U37CXkB/kFe353
7qfI+yeYP9PeM/9H/+Hy3o9ofuL7efA3npC9uehncIlfMP1Ptu97fej0z8/s
9opO/3qPf6e/PEz7DjPfh5mPw4y3YMZbMP7pcMmPTn9zmPbYv9/pbw0zPvf5
ZMw3/fzIGdln3T/2gTS/HZP9hvYhz1+z/yvzU9jnmWF/xR8Ve5CvV4R/KvrE
fJv2Gvse7VXJH853OU3r/dQH6i/6hr2L+Q3tHelnfwT2adoz6kup7yOr73lE
9nbqF/0T5Uf/BDMehd2eH+uhrr+d65X+fOd6opfn4VR+netxub6V9/xc9o9s
r+L96COMPqI/fl/3ovovX4+J9o36AZfvjaym9xeKH+VJ/449hP4J/SE+6Kfb
V2qyj7i/cz3pcz2tD80qP2DWhxivur/3oJjxJ/1LkV+j7xUeSudp35rskfsU
H1+vgyfF2Jdhvz+2pv4Vpv+A/TzmWvJvr6X7YLFTzIt9PyntLunlnJyrkv1q
TPmJ/czztyb29HB/ez09Py0u32+IPf0rKf0rKT0rKT349y+IvT9cUXpZnyC9
bt+elH2O9MF+39YRxQf2+7aOKD6w37d1pN/tpUcUv5L/FY2ffTw7mM5fvj7d
P3qz5MyHXE55xXnMsNevLtUHPy/5KtmT+R5yvufrRdek+0Gv0vgbud/3eZXs
kaTX7/u8vkOOvznykp/dkhc9Wit5+cxaxR858UdO/UdO/Xf5Nel826vUn9Ee
FXvDaQpfPnO6wru97Zp0P+RVsmch9/sSr5J9ifT6+ZTXJ/k18g/m+Ww/oj0o
4ePe6cLb1P5h76a/KfpTU3+BP5v3J/U0Xoz9d2W8sKR1jdKe3LWqT410H01L
/mz0Z/RHyN1/Cf+d2bReGf4WtD/eHwyq/ae/IP3og+8H3qX+z/0ZdqT74Xdo
fsf76M9h2lvex/yO5xlf+vsOKzzjJR+/HRb7+J3+rib29YqDas8r9lfX+7z9
2KH2npCMz319blpMf0B4xuuefw0x5Uf8GO/BjO9g9AFm/ObPx3oO5xf4emMr
5ed8+l5Lz2OPJjz2aBi5x28h6c9C0q+FFJ9KBX2nPrsfw1b150WNvyo5jBx9
533oO3I/n2Q5jQdqug/L7SmH0nrpwfT8ZAo/meJfU3j0EUb//H3Tio/vb56R
vsHIPf0NPe/7mWekfz6fmk75E3LfjzwjOeHdvxS9bYqRE979QWM/qeffbMq/
uTS/DMYe7fv95vU99BNGH2EfX9X6OS/B0xuM3MuPehbjMR+vb03+31+VHM7j
Nx9vTqb5bjByP5+hJjnjJY9PLdnDptL9WsHop9szg9E/GP10f6hg9M/jH/0b
/rzuj5r7u7k0Po79r+gDjNzn7/Mpfa2U/nmFR388vcHIvfwWUvoXUv4sKDz6
hBx9g5Fnfwq3z1Uqebxdfo5K/xg/o2/IfTx5VPpIeB9PHlV+wuQ3TP7B5C9M
fsHkJ0z+wOQfTH7A5Jd/D7/WJ6fzWhgPbdX4nvQih7O/CXLv12M+4PezbdX8
gPchh33+MKj5Bf2V+0cwDor5Bf4RfI/5BOWJnPdlJnx53c2anxQ9uiXNT4bS
ftzbJCd+fr/JVs1fiA/+GJ6+YMITH95HfJD7uG2tvleei/kMcs+PU5L+x3wJ
OeNhmPzGX4LnMzNfYnzZVr+L8K+oJ/+PevLfmFZ42lPktKcw8SnpPF3fz+zz
sUHN18hv93+4WXLyGzntLfM/txeervVgmPEn4WkPkNMewIw3CU/7gJz2AWZ8
SXjaC+S0FzD9O+FpP5DTfsDYMwhPe+vpC6Y8Sr6dqfzP7PPfQc2PKQ/kvK88
F/4eMHL8Lyg/5sOUH/NhHw/36nslfb3Jvwn70HhaT9md7C27Nf9lPIG8/D/m
z24PZb4c82nqh9trYn7NeNOfj/PtGC9wPoSfz8T6UMSn6Hkw5xnB7MeCOZ/I
0xPpZ/+G+7Nu7ZifML4k/328fKv6Lb+/76Ds77Cfd38w2Td3iJG7v+PBfl9v
5pyV4KJPMX/2c0sOJvvoDo0Xkfv9fjHf9udjfuv5cFDzB09vMOUP+/n8BzVf
gP28/vB39PjMp/yO+ayf539Q4xWPz0KKz0Kazyyk+czWjvE/41n0w+29Ix3r
VT7fi/se8Uf3+dmYGH9q2M9DWtb9j/7+muKPfiBHP2D0wb8fTP8Hs7/B52fT
KX7BzB88P4LRL49PMPoFo18w6xMw+uLvn++Qk//oj+d3K70/GP2B6b+8PGK+
SX/l319K5bW1Y3zP/Ap9K/GN+ySZT9A++H6rYMofdjtD+IOj39Q/n2/Op/nM
fJrPxHyK/PPzpYLJP49vMPnn8VtM8Yn5lJ+f+ZjyM88P6H94n5/vGudTeXlV
NF5lPkB9Z77C+9kvijzPLxjPEx4u5XOdmPEt8wnGCzDyPP9g/1KJ9y16H+P/
PP/I43nO4+F55Ixfiv51p/XK7rRetCal95SU3vC/5vkiv6HjfT4/2CbmfYy/
qS+M5xk/wchZL+F5xovEh/DkN4yc58kvxpPkF8z7SzU8Q+FLuDMVHx8/Xifm
fdlft/z2rD7/Za0D03/SXpTynkv7hYPL92J9xe3ZrCc25P/AeYewjweOrNaD
GcmxB/r4M8Z7rIfAfr5p1+r8YlFy9M3t8V/W/k+4xOc+1X/auZLej8gvBSb/
YNZbCsd4lvyA3d7Pemukn/35MPFjvEj7Rnpoz3P7S3/g94nv0P5o0u/n/dbU
Prr9OfxrWP+6anWehb2uxO7nGk/4+GdC+uL3Gc8ovm4/i/E18SX97m8Z57/5
ekP4s+Bf4uPD0TS+C33x/ZGna/9/+cxpAz5+7kr7cX4p/zPqE+fb+v7a+9P5
GoxnT9N5BzD9E+9j/62fh3tVx3zD19v2JjvZXsnZP5f3CxHe74vfke6H36F6
QfgS7wnJy3+DmR8S3u+D36Hxocd/Oj0/o+d9vrgj3Q+/Q+MNX6+N9SzGE7Dn
54rGz75feCKNd2O/FOzj+bgPHf3hfX4f94zSC/t93DMdv35fxIzmR7l+wbQf
vh4T9cn76yMaT8Lst2Z8g/827Q1MeNJL/XY/qDh/ESY/fP1jOtnL435y8gc5
5Q1T3r7+EPZ58sPXE8Kf2/WhS/0vTP8O0x4xfqS/pH2BCc95LrT3lIv3l2Ff
9/vBjio9MOmBiT/jS8Y3xI/4Iy//H1b8SjkPKzz9CUx7RfrQP0/vVRpfsp7P
96gvJV74q2Z/4avSfd7Xd3CJb9iTGQ96+XQPtNXp2ptWv98tezfjz/LcrXoe
5nnGE4wniZ+PJ7+8qvdhj0ZOfGDeD3NeVsmH2B/I92DC833Go5zfhZzxu+8P
HBL7uGhd2j8VzPvZv8778XvhfcQfpj779xvpfMuwd1Pfs/2b8TDxx35N/mG/
hgmPPy/xx1+c/p32DKa+wdQ3mPoGU99g2g+45P+ymPT4+ZODaf/g9ZKX9Hx7
tTzOkn5jT0afeB728ySv0nmOvN/PdxySPZn8y/v7SjuwXvpNv+/38dQ0vnc7
YjO1++H/yfzDx5/h/1miH/6a7v+3kvx3VmRPcn/P8NfE3gC7f8tK8ldZSfcn
8L7t6n8oD9jn19gn7tH4sIjjfBSY/tLtS0eSffJIskceUXxh4uvPLyf7Tb5f
iX1NXQNebl0Dbt/tUvuC/QL9gdEX1lP9vIsnq32Aac9yeOwThIcJn/dDsV5J
/+Trm8Nav2Q/A+29jzNj/zjtP+0HctoL2Mc73dqvT/vt/kbdOr+D9hamPcQf
m/YNpv2i/UQOI2d8jBxGXuLVTPe/x3mC1GvaF5j2lPj6feaTSX5A/pww7RHr
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
E+enwX5edZf0FWZ85vdBzcgfi/3D+NdwngaMfhK+xK+Zzs9opudj/y76hD+f
n7973Gr4ee3XLeWf7xcJf8aSLxPylyI+xd78uPaj4x9Iefl9R+Fvw3wDpn7y
Pp7nfaW9+Ij2uzMf8P2GN8sfifFcKY+4j5fwJR3bkz/VhJ738wnwi1rQ8yWf
tnbsL/T9jbek87Rukf8T7TfnDxT9qSX/Pfynjsi/CWb/Skn3UZ3f4vfjLCt/
Pb5xHwP+Uu5PxPkmcR8O/kUw78vnH8HYe3y/4VbtJy/Z+tWO84tg0gvzfD6v
CCY8/jIwcvY/Imd/Iv4srC8hJ3+z/w7+LsQfdn3qTuc3nqb4wr7+sk7zwfLc
Ot0XD9N+wPjZwYyHYc6XgIlPsYeeofEFbOOJV+CPEP4byMu44XQfP/xazvkw
fp7pUFr/vU3rxZQHjH0X/wDOe3H/i5nkTxBM+mHSD9M++n2wwfTf/v1gt18R
n2DK19d7d6f9enu03s/5LTBy8ovxld8XG8z4CaZdgqnPMPuBYfShxHu97EOs
1+KvCzN+IbyvF69XfsDI3R+gld4fzPgDZr8+zPgCZv++x28xfT/WnxkfwKS/
jE97ZP+Fyb9SL3uUfzBy1gexJyHn/AQYexHMeQkw9R+m/sPov38/mPao/PbK
Xlfam94Bzv+BCY/9H/2F0cdSzzdIX2HSA5MemPTApAcmPTDpganPMPUZpj57
fGbTetiY1n/QZ5j8gckfmPLEHk95wqQfJv1uvw97P+mHST9M+n1/X6wHkH4Y
/cW+R/uMfZX2G6a9hmmvYdobmPbG7bmzyb4XTPsJ037CtAdu/wumfYBpH2Da
B5j2we2HwbQPMO2Dxyfsj7QPfn/vLbL30T9hv6N/gmmPsWfRHsO0FzDtCYy+
wegbjL7B6Jvb0w7InkD8YL7P/Jjvw3wf5vsw34f5Poy+w+g7XPSD/Sg70v4U
ziWM/QnlfSNi5ld+/mhd49Xy/zw+rYtJH8/DPF/Kr57O76un8xDjeZjni35F
+KJf02n8PJ3un5jW8yWd0+n8qOmO75d0Hyt7iJ+vHfcpMr7080zie6X84/3l
vY2U/oaeh3m+5F+EL/9vpPMQpxVfmPjyvTxf5nnsvcyfYZ7n/EXfnxJM++nn
fzXT+ZKZ5xS+PD8neYlvMPYb4gfzfLGvzKX5/FzH/NzPo53X88zPfT9OPI/9
h+dhty/E8yXcfEpPS8/Dfr57K+VvPI/9iOf9/qmuVftOK+VXK6UnnvfzfNDn
hWTviOeZj/O8z8/Rp4WUXwspPfG8nx+Efsb5kkX/4nnsVzzv+xe7Bl7Y1p/F
lF+LKT3BJb5xnhrMfpWiD9y3doLKG/sOzPyb8ud9lD9MefM87OfNtRSe8ocp
b56HeZ7yJzzlD1PePA/zPOVPeMofprx5HuZ5yp/wlL+nJ56H/Ty9RYWn/GHK
m+f9PqrjVP6eX4spPfG831913ADnmxKe/a3+fN7PFe0//S9M+4d9rXS77De9
oZ/4lvD36XxVmPEj9q3yfNwXXPrPYNpPvleeH+44H5b9dOV9w7pfubwvuOj/
rmQ/3JX2d+9S+FL+u9L7qh3nIft+w6rCl/4tGHuyn/+6O+0Xr6b47haXfi32
BzP+JH/LeDXuo+Q8LJ5nnASzfuXt367Uf+xK7f+u1P6Mar8ajL2N/fLluRNX
+8O7tX+1lPNwsh8+qPyBvXwe7NhPjz0Xe3K2B2d7PfZk7M3FLv0k2ZvhUn4j
yV49Lnuv31fJfXLjig/3q/i5B4f1PMzz7IcnPO23p29c+0n9+yv6HvZg32/7
kOob9mHWn7Av+/nbnLcX5ztz/jbMeIfnffyzovpLeMY/MPGgfvP98p7TtT5W
7A2chxznI7Of1NMb9yOwX/qO1XmZ3+dy32q42L+MPxvzBdZ70XefZ8zq/F3i
7/e5PVntL+sP1FcYOeNbzg/D3sz+VM6vw94MI2f/KPaIkp5u2SMyl++tlT6z
vxJ7Lkx8SjsX+z/bydP5pXskx74DI+d72AeQYx+AS7jbZM/Gvov92fdvrFN+
lHb3dMnRH+zvMO0N+lTKf1jvp72EkXt8Yn8h7SXvR1+cD+h9zKfh8t7tyf59
W9pfd7vkzHth5MQHue9/u0P78ShPGH8Hnqd8+T7lx/coXz9vdY+et/V8xS+4
ujpO8PNOt6f9cbcme/pQss/fqvSRHp6nPhAe/fD9hTv1PHLs5ehPiefZ0h8Y
/eF76AfvRz/cnj+cymNMcuyJMONnlweTf6wHlHy/MdnzbxYj9/1qI5Jzv1Bm
7O34o/h+rmDsH74eUU/xuS6dH3t9x31lfp/39ek8w+2S0765/X487Se7R/Zs
zuvMXPSoV/pf6mOP9v/D5BfPkz9weU8znQ/YyXyP9Xje7/4lPdKX0j71Sp8y
+36HXdrvQfvj+0cO6/miXxPJfn+D7PXoS/nZIH2CXZ82KH+Qkz+Zy3s2Sp98
P0Ew4weex/4Lk57SrGxUejLjD13yfSLtHwjGHu32+E4u5XO+xiPuzx1cvr9f
/u3c3waXfAj/ZcZ9mf38uankrzuV/I3vT/bqBzoY/1PGz/i70p7B6AP2asob
f1j0AUbO++kPkNNfZMZflP0C+Lsy/oJpL7GP017Cl6/OI7BfM1+FyZ92sl59
qfIjM/545A/+e+QPTPrw5yM9mUu8Nvv+sy2blT6Y9LU/c+VmpQ/GntlO1ro+
re9k5jw07JvuzxX+aaX8JuSfxPlizM9K/XtHx304MPN92inOT2L+77xjdZ4X
89FSH4JZD3Z7xE/T/C/Ojyr5OiI5zPyQ+Rrz2xLv4DI/47y2p+q8NOYPMPOX
kk8Tmj+VcW8w7QnzGeZLzE9Kex3nNTH+8/NdRlfzAX+VmJ/CnD9Twkf8y//H
xHyP+Q79Q2X1j/m8339UlRx/NZj5EuGxbyHHXgVj/yE84zPKB72AGb8yny3N
yYTmw/iL+vnwk5oP0576OnZwKYda8t+L+9+pX37/RzDnV+EPxXikvPeIzqEr
8Tiq9CL3+xuOan6MHHs/jL2/2Hl+1c98wO2Jt8me6+elHK/+n/kj5Y//EfNX
/JUof+aH5T3X6DyaIue8/1M13sZfifkF80XGT34e0L2S094yH6R9Zv7HeAE5
4wvklBtyyh85+z+Rw8xX8Z8mfbS3zO98f/g6xZf5DfFlPuPjndMVX5+v1SQn
vi6van5Aebh/0YF0PkucN8P418/7OJT8jWb0PP6IPM/6N8/7/razlH7mD6Sf
8T3+3cyHqK/Ml1jf9fPgp9N84c7k73SH5hfMv5gPMF/z89J3avxPfvr8oZr8
i8bS+Ruj+p6PH89T/eJ54sN8hv6pRHu9xnv48zAeZD7AfKgd7Wt70n3iPcn/
rzfdZ9Or8ZaP54fT94bTeeAP6v1+P3Cv/Dl4H/N/5HCJZ6/2MzC/oB1Gznqy
73eP/dKsTzKep31jfsB8H6Z9ZXyPPiJHH5H7/QJx3jbzG8qb+QbfZ78u7Svz
A9enTdKnfH62x7ee3lfX+9z+c77sQ8wPGH+zf7KE+572S9K+sj+P+SzM/Jf5
BPY8vgfzfux/vB/9Y/6B/sHon/vX3Cf/Idp75ifkL+N9yhemfBnP094xn4CZ
j9D+MT+g/eN9tH8+P6hJDrM/rcSnlvbHzaTzoWc0nyC9F7bL9xLlP0z+l/hf
ovC3t/XnEuVPO/+Pu1TpY/7h55/Efh/mC6SX+QXpZb5Ae0M60C+bN+g+HcZJ
U5KX51tiX0+d0fmXjI/5Puz7E7D/x/mupd28Jd2HHfMRtw8fVXxh/KsYLzHf
8vMi98ieDrOeRf/CeIj4Mz5BTv9Ff07/QHtNe095076S3mzPoT308cFG9S/Z
HoE9gfTn+T7zddJHfUCe56voD+Xj+13ivOySb9jvWbeN9VbYx++70n3Su9J5
pbG+WtJfTfsJYv3Uz+NmPXB3mg/Geinx9fNX90ju5xnjL7VX4WFPz950/mrI
sVf5ecr7ND+AfT36c+m+3W1i3490UOe7Iqd95n2sL+b9L5w/ynnjZRzyVDHz
x5LeQ5LDyP17+F+Ma37h3z9e9YfwnF/r85FDyf/kfu1fKc/fn9Yj71d7w/2p
yGHk2BOp36V/j/OaYfcP2p/uC96v8DDhGS/4/qlRhXf7yZN03oH7bx1UeNj9
vcYVnvwlPJz3f3l5zsheAHt+z6T17pCbvUjn4UZ4mPD4xyGHkdP+8b7STzUV
HvbzekMOI7f9ldLPZjofP8Kznw25nx9+vNpX3sf9lb6/bFbhuZ8XOez6H+/D
/kN42PM75LDnx5zeV/JzTuFhwpf2bi7Zi0Ju+0MnT5A/oZ+XPpfyO+Swx38p
1felVN+XUv7sVf9Ce0v/AtMe0N4ip3+k/XN/tl+Iad/pX6k/jIe8/9+X/J32
pfPcoz2A3b/vQPIfPaDwsN8XEO0F7P6oY3pfSeeYwsPuX3kwpS/aEx+Pdal9
Jzzs6Qk57P6gh/U+8pvwsKfncMrfkJfpQ9xXUco57kOAPT2TCl/iM5n8dSYV
3u1TK7K/oX/Mh9G3Uj8eUP8Cu139QcndH2lGdnDeV9I3rPCw2yND7uMp7I6z
Gt/SHmEPhPN42O9nWEr+qUsaDzNe9fp2T7pv4J40/o/7HWDktH/El/aO+MLE
l/E64x3sU64fN8pODPt8Ju5DZ3yMfpTfWvLfqun9ZZzWeZ49z5f+qZ7u56in
9uFW2e9h5hMlPlel88tvTOdZ3ypGjj0OOfMN5MwnWE+iPP1+hi7dt0D9w97n
7cVEqp93qH6wfkZ7yvyV+RX2F5j6hP8p4fFHIjxMePIP+wz2Whj7Mesr2Gdh
7LnMF9rFo/v19qT9bmPp/rkx2bsYj/t9adeIme/5+XF7ZW+BsaeUdMT9XLDf
z7VL9ggY+wbzAewJ8D+18+9ihWf+D2Mv8PWPPnHJlz6tB1D/WQ+ifrs/7Izm
M97eR39Zwkf/B/t+hOjP3B/0SZqfIId9/D2e9Hk89Q8x/oDz+I32CKY9Irz7
t0Z7WfLvE7pPp/x/We2Xt0f7xNgNae98v1DMV2FfH6slf/baarsb7P7pUwpf
8n9K4WH35w85jJz9XO7PHuFhwpd8qCt8KYe6wsOEpz1FDiPHf8j92SM8THjs
z34+xbTCw55fIYeRs17B+/CHJzzs+xsaaf9DQ+Fhz6+Qw8hpf3kf5zEQHvb9
DTNJXxpJXyI86wPuH72ng9FH/KO9fVhK/f+S1sFh9Bj9p39B3xnfwz4e2ZXG
z9U0fq6m+f6i7B92/suv5zv41/r8mPZpjZj1UuzzyJn/5/Mc/H7ee9J5/MNa
H2J86P5t21N/dav6K+zj5f+9Wo+g/8eezvqGn3/Qm+4b3qD+Hfuj+/NuFLM+
wvoacta3sFf6etwmMesdpK/E93ylByY97i81nOTDOr+S9NHfwvS3pBc56WU9
g/SxfgH7fZzb032P29N9jEOSE3/OCyM+9Ncw/TXxQ078Drf182LFh/PFYNYL
SrnG/Aj2+VbMh+Dcf9I/wtkeQf8I0z+W4Wf0P7C3l9E/wMjLe6L9hpGzXxU5
jLzUn2jPYO+vwv4K036xHou9ttSr/QoPe/i4Hx37E+N12jnas6Iv4T8E+3rI
ven+uXs1X6K9pT30+9Ra2g9C+wwznijP0R7esDo+Cf8b9C3fP8b4xe0F+Mkc
6vd13Qkx8ymY9hVm/Z/8cf+dFfnvlHj+vB97JIy9iud9P+yK/GMIX9Ixl8Z3
D2r8RnsCl/feovlZyb+bxaVdvmm1vE9ZXX/9ymq+rJU9rfx/nbjMJ06TPa3k
22lavy18tvyd4RL/b6+2Z2cnf4bz1P66v/Utab3pVrXPzBf9fNZbO84X9fI+
0LEe6H42LbHvr2Ve0Uz2lknpN/Nz2N97rNoTxt+w2+umFJ72xcfrUwrP+JHw
tDeEhwlPe+37dW/T8/Rvbp+7q0Pu7dldHffJMb6g/jOeYH8E81vyD/8kxiO0
R5QX7ZGfh3K6/GGRM05DzvqB2yOifcPfGcbehD7D6Dv+JPgPle9MyJ5B+tw/
aVJy0od/EOmjfuCfhZz5O3LSh5z0Iac9R056kZNe92+alRz/c98/MSe5+7ec
I/8Wj38rnV/VSudVTSZ/pknVd+oLcuoTcuqH+ytNSU598Pto6pKTv/gPkb+l
21if/Mt6ZF9GTvrc/6iV7sdZkJz2w9+/KDn+pcjZL+f3pyym+2mWU/yXJMc/
j/E06wO0n+QPcvIHOfNB5PivIff90b2qf8jd7tsr/URO/vp9Doc0Xi/pm5Ac
e7yP5/ck/6M96g/sfBXdjzAtuZ2vovsPGsk/YUZy4u/zgWb6flNy6hdy6hdy
6hdy6hdy9NPP9x+TPY788/P3D0leXR0HMT+hP0ZO+TP/oPz9fP9pyck/5H6+
XpzX5Ofzz0ju58+dn87Xi/OakBN/5kPE35/fn85r36/5D/rD/Af9cf+sieTf
NSG57997ptonP79+VvZOyhf/FMoXOeXr563Pp/0p85LTvrg9tSU57Qty2hfk
tC/IaV+Q074gp33x/THLktO+ePpG03nfB+RPhv76edxjkvt5exepfffzqack
p31H7vvt4vwnP497WnL0Fzn66/PfhuTur7hZ6eO8ZdKHnPQhJ/7Yo4k//kfE
HznxR078kdv5R2+M86Hc3t2QnPaQ+RX2JZ9PhX8R9nyY9Pt++1HNH0k/cvw7
fD4a9mHsY8y/qP/M10v8m5rP49+Dv055bkL2Ltj3h0wkf4tg6jfPwzzPfI/w
Jd8mkv9DxJ/5H+mjvvt62ZzSw/iX+Z3Ph1v97P/B3sj99DD+PiV8l/x5YOx1
sN933JXOb+iSvzrzc5+/VgaYr3r8J1P5TCo/YfKT592/ZDL518TzMM9jz3F/
ksnkL1PT8zDPl/arlvxHaql843mY55nvu7/KTPIPaab0zCb/nLn0fKzX4D9L
/aH8qT/UR6+/4S9Cf0d50j7BtEew2z+61B/C2D/RT+Z3vl5/92r70JS9ATn7
38rzE2k/XE3730q866r/3r40lX76U7dvLCV9XdL5E+Qv810f/3bpPBPWv+n/
SS/1n/ym/yN97C8j/eW5Par/vn7AeXvRfnAeSfl/3M+OnRT2/VzbtV5MONaT
2T+GnPk8zPN+/vI22Xv4HvNdwsPIma8id3/gG9L9h6Oyd9BflPYi9ltiv/P2
6Yj6D8LDhGf/hbdPu9Uewb7+OqXwrB8SHnb/ovCHYL2P8LDblxsKz/oU4WFf
L56V/wD2BM5DgbGvlPfEeUfYh3g/7PbwmsKX+AZjL+J52P2Hwj+k6Fsw5zPB
tBfub7wz2Vt3dtjHqG+Mr2Haa+of+Zf3wxZ96Za9ifUqb++61b+X98X5Kr5e
dVvH+RDsR2E+wn6Pov9V7eemvXlZu9wulpz90PQn7Z91fVqvpXxZn/XzExvJ
fttI59vNSN/wd6X9g2kf2e9Cf8P5dyXc8boPgPV9zlcgv0v9Hl59/hdpXf8X
Ou8LOfXN13/raT22ntbTp9P6diOtT4+pPcN/gv3CpM/7z3HZx2m3ac9Y3ynJ
OE3zG9YvaN9L/fiZ9NftlQd0/hCMvJTLsL5H+0z7yXqE3wd/h+yDRd9uTfsH
dyZ7313pfPK7pL+lPG5M929fL3sQ8Sn2y14x9hSed/vJznQ+9c5k37gnnfc8
rP1hvJ/6BPt9eDvT+co3yl5PfrD/CPb7k25X/YNZX+T97EdivMT4gvNH3J48
kvxTRqTfzDfQF8bn9FeMPxnv+P0XcZ8F/l2lHP5jtV0LLu85Rf5YrL9g/2C/
aVm3/u5q/3uWmPUUxgOsb9Pe+f6/CbUXjH8Yb/n+lhPkb8X5dvhTUT/xr6W9
YbwJU1/5Hv6zfI/6m5nxAfMJ2jv6P8ZX+Ht4/57736k0nwnGP7LUmydpPkF8
Ydpf+iuep/1HXp6rJv/eaorP3tSe7039894U391pvWp3Ol9vd7/bXfekdac9
/d4P7VH4kr4hzS+ob/TPjP9gO6+jslb9L+NL9Ks8t079Mes7jI9p/5iP0F7C
pX05I52ncp7sG7R3MP4p2Newj2Nfc/v6fLq/Ie6nxl7D+BZuF8u1cR6S31c5
ovaN+Y2fD9OU/Yz+1PdnVtN65XLyn1hS+8bz5bnNer6dTVs2D7ie9Pn8Vval
XWn+lv0h90p/0E/0x/ePoT8jaX01wvt+shnN53z/1qLsPbTfrB/SfrRfd9Gp
smcwvoPRRz+PZp30A/2DeR/zXfTN/X+Cix6fns6rOk3tI8+TnzwP8zz9VdZv
Hw/sUX2ACU/9zOe/wX5e1jmKL+MJmPD0v9Qf5rHUDz8PLdjPG7he4elfy/fi
/C/GHzD1je/TX2EfYX2D8QbrF35e4fnpPLrzNT9x+/1O2e/5Hv7HhMcfifDs
V8aeyPwE9vbwvrQ/4d50vnv2H2lovIr+kR4Yfy/Sn/fDEx4mPPbFvL+d9grG
H4zxSd6/TvsFk1+MJ2iviC/2dBh/MOJP+0V8CQ8TnvgT3vuzFfVfjMdgyoP+
h/aF8Q3tC/2Lj3fCHon9kfDMPxjvYe+A8d+GsW/AzI+Y/zMeKd8Jdn/aerr/
q67wsPu/1tP+hGmFh92/eVrhmW8SHnZ/5EY63zXC+3lBsR+C9VuY9oD2stSX
jWLqP+2P3++9T+uZpZwnUv2f0Hoh/Rj6Dnv9mJJ+w+xXKOkfVv8Mo/+Mz/y+
1706X4Hw9M8w+xUIX+IfXMYXhGd+8hxx0X/ON6tULlsdh5Vw70j7rd+heTvz
Hz+fYH/yJwt/Qdpv+hvaa/ozmP6M+Uupd2sGSr36oeY3tC8w85VSXmcNlO98
X/MZ5jsw8wXG/7DbO6ZUf/3crBNlL6M+U98Yjxf9jPE/7QHvZ7zP90v+VjvG
/zD2SD/Pendq//ck/8G9aTx/WOMbnz+tVXtKedDewsTHz6ON8Qj6QH/u9Wu9
9qvTX2O/hNEP2MafN27Q+7EPMP7HPlDyb072AcbXfn/QsOxtjC853wQ59jbk
7c9euVnj7Xa8v8P9OVtVP9DXEi700c+vjf6F/gf286E2KL+wp1DvaN+8PDam
83IjPfSnyGk/kDO+p37T7sG0B/gDU78pD9j9Uc5QecLUJ99PUEvnJxxI/vD7
xXyP8RrnZdFe0z/D6AfjN85H9PN+5tJ8a07jm5LuevJXmEr3z09p/oUe0H4z
n4PRJz8fZ5/aa8LDhGf93+1Lz9F8EEY/2//+RZ/yk/6N9d2cf/RvrLfm/PLz
jTrzx/u3ekd+0H8xvs/pp3+y82z/P+mlf6J/IH3Pef4zJxYvv1rzw1++4OHu
uQu/r/MT0fcf3vHNl3z6V59Sv9X/dyd8ctfG2/v/+Es/PGnlhlGFx/7wph/f
8e/H/cXN/QsfeGjpA7vG9P6vP3XzB77XqCk8+nDMf/2ff/PQRs5nrPd/9Lun
bD/6rh392Av+9ac/bpx19LP9+N+8+S8v+vpfHf/9fvxtXvDBR770jXN/1H/M
rnO/tfWMq9WfvvqxykcX/v5m8S9/UH3VuZ+7XUx8+z704tccc/lUP/5b9fc9
9voXfmW6/ym33P3R4Z2HFZ74XfDb//x733wR/dR0/9oXP/KRaw7UtV/1RT95
wx9+6rWNfvx9/u2hH/3xXX89pfn11W/6+eUrV9T7P19d/Mvff/bVsqdd9Mk/
rL78ru+I939z0/Dc+28Sl1yb6G888NQrLptf0Xj6E3/x+y/q/u5DGi+P1Ht3
PfyWnyvfv/XSv/nkujUP9+Mf9bp3f+6EE36xIv+Inu9PD0/+zUPK76/9+Mjv
DM49pPweuuq0sade/nPl95V/8ccv/9AdP1f6XrbvPY9/5oKH+9f/7sHnHPON
q+Wf/JkffvH7E7PfES+eO9f610tvSvcxDfX/5m033nDx+yoD//GOx3/wmh/9
SHLmf6/9xp4/fObbKwN/Mjzy5N/89E7J0Z83vvXQKzf8/RGVz791f/cfvn/0
iMrnj974qRve/Le/Uvl0/+PGq782/av+daeO3POGz38p9uM9tuWt+75+k/i1
8+dccnT5R+Lzdrzr3VuP3Jn8q2f6tzd7LvnuXJfak4df+qH5r51yjPzRdvT+
6oJdv3mM2svG4CMHv/WGY2QPe/XHHn3T/f9wjPzLPn/6N6674uvHyJ/sv7z5
j172v+4+Rv5jf3D1702+qnnMwIt2X/S0h5a+nO4THuofv2n+li+87viBvjd/
7J8f+PZOyY9/4wsP/+x1cR8K+tGY++zYZ884XvnZPHzTV/efdLz8oTbPf7zv
whOPl//ThXe95urHTz5e/k4ve2Gz/tHTjld6Thv/avfM249Xev7qFa/aeOPW
45Wet3z/58f8x2ePV3o+f9z6V+342vEDb97zpWvmhv5f2Zf+/GVv+PYZNw6L
979t6NPb/3mH7PUvOmHv0HWP3COmvXpnz5b/+7fuffrApz75w6dsuqcq+S+O
vnJm++Zvy750xtPf/eHX/sZN4uWzDt/8iq4hMev7r/nBH/3tI08/RfaPF3/o
zLOuPeOUgS0/+t7bT2jcn8JX+9//B28aP3mse+DbCx/84PJzRySn/p7/yR1D
Wz94ysD5P/7M31ywqyY55Xdl89iPvab/VO1X/x+vecfR0192qvq3P//W0Pdf
8oZT1b+f8875A1996bqBf7vyd+Yf3zkm+xfl+5X/Pfqree1Pn+rf9uZjX3LK
53+d3tvOf8tJL4v9Ile85Pef/YrL7tf8gvTsumfTe//t/NMH/ufJl73nP35z
RHLaz3Mfa5zznu+cJv/XH79vz7s+8/zTB3rfdnjnS+6sKTz6/+4XXPSJZ33y
NOnL907++DNX/vM06cuzlv/ysdbsadKXx5d6vvBnp56u/Li29dgp7+s/c+Bt
dy/f/rnjq7KXkT8fflPtvX/y1DOVP+P333jmmp1nDqz8yyffe/KrDik8+fNX
73ne9SfOnKH8+fN/2PmFR/6vM6X/wy+59rnPu/JM6f8Xn37s0tfuOFP6v+95
nxx86ElnDWx++ev+c/Lxlt5/7sBVMx97/Rdlv/v08AlXfu2z14tvqe+4vO89
O8SNqYtf+/rd94nJ/8/8ovGWD3/r7LgvZd/bd73ynWdLn47+6msPXnHobI3f
/mzNd/pOGDhn4PD80r988rnTeh/5WfvGGac/9uKzVf+efs6Hnvu8t5wtf7r/
dc7b733fP/L+5f5Pv/v6783++9kDN9409o0vXvFl2ROpH0/7ztP/pP/QuQPr
+0am/vqCn0hOeX3mSRu+/rxTzhto/Ld31c7bWJWc8rn0pred976u8+Tf+e53
/fV/3f2F8wbu3P2GHeOPH1Z48v/vX/3Oy750w7nK/51/euHrL5k/V+3xi6t/
13vFeeeFvf/0Hx+z8w/Oi/tdX/LshcEPnid9/MRxr/vwh687b+ATu+7/vfd+
+V/SesJP+l+/bu+HH/1inOd65+ceeMGl164fmH/PU0a+Pr1P4SmPL7ztuct/
9+v4Uh4/+ukDv3z0uvWav37vjNteedPweunfS697xuBbH1mv9cWHNq05+f27
ewY+3P+Mj//uc2+UfYb8vPfjv3HhJRf3Kv9+9suh9Vf8qEf599/+dv4Nnzmm
d+AVg69pDU5P6HnS3/j7r/xt1809Sv8fbDzx8GU/7VF9vGR5xwdOP9Sj+viP
j77n2FsWe6Q/jbsP7/itx3ukPxML7/2tW07ulf7cPb3yw5ef0yv9+en/Xnvw
yc/qVf796fvXPr/62xuUP99+/9XXH9rTq/yZ+shTfnnFr3qVP9P//syxx3o2
qH6+eOfPGue8ZIPq5523XPTxV75xw8BFb/jm/X/3u/OyV/3s61e+9Hm1/9T4
/fjKV+b/+9PvF5N/L3z3y7/2gZduVP4d+OYtV7/qExuVH5ce+fLr/qyyUflx
zFuff+WdazYqP5720EdnT+7dqPx49eFP9fzx5o3Kj2t2/Zf/58b+jcqPY3/n
rH95/u9vHPj8dcc+7V9P+6bmD7T/6/4PWV8eTtX3/e+auiIyz/M8jyGptTWa
UgmljA1UplAylISkkDGpRDJToVKKkCHzlHkeL645Mk+/+30+H+f9e96fvzzr
2ce5Z7/2OvustfZar9WcHvH5syi23iz6L0VkL4oiEfcDjf0Vv/9VjzwA7USf
75vGohh+mVz1C9z3RDH84va9irn4RhTDz7Az00GnWBRRpuiYxo2++1f98m8Y
WXoUMm8mhp1/GF68rB/zUwx5p/aYygV2Ytfv6M+bCMIDyWtiGF4Saxx+xp5i
GF4vX2ccPhkkhuH1R1bIU+6VGIbXaH+3LHOGGIbXrdx0TaY8MQwvMW7BNigX
w+oVv3oXroYNiiPn91qlJoxVWLx8Z/14/OwetyaKY9+niqq3ZpZ94tj+KX0i
vyqZUQIdvCLn/DjyE+Z/7XzfvfeLzgisSGB4TbQPOfg1S2D61jHzcJTzjwS2
H+1O45sVoJPE9iNJsyCYEJHE9qPYLsEH3w9IYvbJ7+9PevdJSCGP+u6JfZb5
mH+38/2a3HPRed8ZaUw/U5Y7jk69kEb2l3WXGL73Ytdj/kp6qV71cRls//FT
jQu0vS2D6QfVDee4rjgZTD82S2zxf0tlkKWEgPzzK2NYffnO84q5EtNK7GWx
/TP54C6/aF9ZbP9IWkHiddGy2PonxWs3RqTLYutP8FuI35Mvi61/So52okWN
LLb+z59qJr3tksXWn/M2d8v8uCy2/iOUayZXl2SRYMRfP8W/lVj9+c763CDc
OjhJpYDh6V0dLGT9SgHDz1lY3bdPVhHDr1Pv6HrXGUVU3lkc/2O7F/OXd/Ab
Yqe6rJmqiOF3tX2z9VqhIoZf70PVZPJmRQy/iC/h5c4ERQyfr54PlLqPKGH4
OIQFbc2dVMLw+dNGd8fgnBKGz+yYwDtqKyUMH62408JS15QwfGIq76EKJyUM
H75VoVcTbkoYPjnxzEfj7ylh70fbiemtGT8llPbThHCIvwu6uj+gYr8BcGu3
00tMGgJJy6f31B37IJybaWw4exjqPvyJMjYdhEFT9k9rQhOQFSHr92mrB4aS
CFmXRSeBKbnU/Pa3fnih70PbIjYFZFwilFlig9BzJkH3ivg02GcT+AUtSXal
Xb6wG38M0K5HGh1amIOL5UMfwf8L6OxRUh3Nn4cPvhe7GmVK4PaTNEKd8h/A
ldGJ3xzuhgwPwrU2tj+gGCd2hXypF+TObipo756HkSyXQB47Ahzc3/rhzuM5
CDClCTVyGAWZmwaPDqn+ga5Ci1hzxzHAb2gkyrf/gXQ601ETRxL+sTG8fg7z
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
+9WVEyUhkgwqehzYED0tgfVg2+F/oT0aQQ==
   "], {{{}, 
     {RGBColor[0.3345486806271918, 0.12892302311320625`, 0.5872289585656891], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgmQldWVxz/6fd1Nd0NHemXpvenlPTEumTJTNVNu4EQBF8xi4pJEUJOg
dBONIgQxosimoRtwVGgWNahR3Ai4JFERNWqNcYmlIsqiqDERERN3Eeb/4/xf
YdW79Z1777nbuWe/r3l89yldBUmS/CGTJPolA3JJckZJknQ0JcmHrUmyWY0t
I5LkvwYlybQDkuTFJL7TVT4RfKZwbypLkivSJJkivKqBSXJvfZLsqkqS/xRc
qPGz1P4twdvV3q76aJXjVda2xTxjGrWe6mPcd0hZ4L+pjVVWR3unSo3gI9Q+
VvAo7edK7+Hbgi8UfI/giVr3exp3qMqDwv9U7d9R+wXCeUnwcMGfdibJecL7
t76PCKdefRPV/mftZ5Zwxmk/s9Q/pSDmYu6LfPbVbQEfK5xJ+nZ7XfbC2CH9
kmRVW7QfJZxanf2x2iSp1ndza9DkXdFhkOj2TcEPa/431J7lfMJ5R/DW8iR5
uzXOCjxB9Pin6pOFM70lSfbobiaq7TLBO9W+WO2XC36IuVS2uaTcqUqr5n1O
e2geEWs+Vx40poDPHl5pDZp3aZ531X+c4Ac09oqWmJ91ZrTEHtjLyvYk6TdA
9WaNhaiCV6jtxf5JUqax5Zrz2dLgh8MEFwjvYq13peZYpvY/iT4bhLuzLkne
V7mzLs7ZnYn7hQ+6VCap3K2+N2tjvePddr75pdt4b9ckyYjKJDlQ5f2qODtn
G627ne97+bAt1t2l7wuab5bWS8S3Lwv3C5XPVV7y9zOVq9R/nO6pn3BeG5Yk
FUNjj7vV16S2RpWvBDenUee+6Gf/m4VfMzTuifnq1V+XxjoNadS/zMQc1OGR
DSpjhP9KJvrAfTUTa7Bmi/D+R+XYNNbkO0pluMpxKt9RafUXvPdEt74h0X9r
XfRx3r2ZgJlvd0XUX1fZ6HVY+7VMtO9xafGam1xnT/Ay+y00vTjfMJWB0iEr
1V7RkCQnCucD8dNvVf9UfJNTf1Z8+KLO+l553MEXaj9V7QeqfYn5EV5GRoCX
qmwV/ofCv0H4hw0K2btGx/lIYzMa266xi3SvP1b7IY0h02ccEHLN98fG36h5
3tc8czXPBvHtXPHg+uHB7/9Q+0y19w6JfSD/CwUXlcQe/k94Nwv/aX0P0Blv
FG6lzvh0degg9AC8drXKf/cLfdPfOqdZeysVvFf4T6phseZ5Ynj0l1pHoav+
w/Bpwj9ccG1jtB3us8xrifNy7jktoZ/R06l1JHoUGcippMUhN1uKVFcZqPox
+t6axpd6b6H4SHC54EWFocdnC56p75zigG9JQ2aR16d0rkxxjFkn/ImlQZOZ
ah9XGuf6ieBjSoO20OGpb8T4taoXeA9rNbanMNa/UvMff5DkR3t+oSP28Zlw
Fuo7qijgp9JYk7Wf9v6Zi7OMLAo8cFa5/jt95xbHGRZ6PubNzwNM+zPa21qf
jT0xL/ua6f2u0v6/fVDokQuk31o7w/Z0CV4u3viV5huncrDkK9X+LxJcJtkv
FXyJ4JPTwLlQ5QSVX6pMVjlR5QLXT3I/9aXiqVPFb9MFl2ie/ppniuDrVP6k
8kfkS+0D1D5V8BLh/0D4vxZcrPYitV8seHNtyMo0wder/NnjodNc0wTaAK/y
nc8x3NgZ9n58+348eACegpdEkuSTjuDvUuFUdoZMni74BuE95PUGd4Zc/ETt
S1R/2H3FnSGfo9X+WUfwfWd77IX9sYd15kvWLze/ce/vZEUvnbdONrCmPs4O
rSjQ7VLT9oSSoOuiirBH2KVO6YiMznCT1pwzIvTXryRDL2dDz1c1xfgfCp6h
77wRodOnCee5irCd6KTGsviiE3LCGag5b9Wcf5dOKBN8i+C3BZcIXiV4WUvI
31DJ+zUtoevQeexrdXnYSfQo8ltom40c4yvdojtdNiT2Vzgs9Ch81KPviT4j
PAZN4MMFZXF2aPAPnetkwQ1NgQc+uLdqnhVDoq8N2bP9qBI9R6utU3CbzrVX
Z16p/X8jF35eVvP8Rn2nC75c30Kdr/+w4Hvq+I3oDQr46BJ0AHoBnfB4W+iF
r3TXT1pOkcfn2wKnQGv1lsVZ2Cd6FHx0CDLKHb7XL2R5lHmDOZgLeV+m8qjK
emQnF/ts055vVP0JlcdVLlM5rSTOwR3/qCTainLR3ir8V7NBh1rBN6nvLx6/
0nM8ptLndR5RuTmNPYC31G3w+grjblBZ7i/7O0tlVhp67/d1Qf92lUR0HJMG
/cc1hc+6XLQ6uTF0DrpnXEPw9M9Fqy9bwybu1vfj1rBrn8BXwlkoOr6rc5Q2
BE3fFnyA4OXYa87aGDoN3fa07doMtf11eOi9BYKLhD9f+K9pbFVD+PmDNHZ0
Y+gH9AT8DZ/vFE6RfLwrhNMj3jmxIXTri5qvpDnm6R0RthaemKA5+phXtnM5
9G4IO/Gs+g+2/UZPIEvI1C7h/LQh5HBOR8gbcvcvtY9qDD0z2H49MQA+J7YZ
G12eC18En6RM8CDBKwT3F5yozNAe+uXC39tcFz7JbXUB4/t9qTWmCWd3NvwB
/INLNP8nql9MjJEN/wp/C1+Le8OnxSeep7m21IW/QdtOt1fXh7ylKne5HR/4
9rrA70ijfZvx0fNb60KnF9uvWih6/qs1/Kh/61vQEH7MArXvqg/dhQ4j3kDX
ofOObAxdjc4ubA5f/wON/bXO8IHodr/osLou1sKm4KNg0ydp3PP1oft+0xFx
AvECsd3xLeHnE//daX9ew/bFV9zHx/rWNIaeR99j07CR2MfR1nPou/HEAHUR
dxQLp9T2DLuGnvluur8OPHRo4A8ZGrYS/O+lUWcufNhSr/V9jwUPe4q/fVZd
+NybhgUfEmsC0551fNFhv2pnVcQVxKTo42/at4b3B9hO44NtcwyGTsQnOCUN
XXtIXfgLB9XF2II0xpR4z/id43128BiLL9HnMejpPRUBM7bDdiLv96W2HVN0
F0/oTINHRLxC3ELMRiyyRXD10KDb1mGxVv78nL1S7a8bv8LwIH1rPZY4EHvF
XWOzoC2+CH7IJumrNsVg1+Zirc3Gh/YDTP8Bxv+B4Ax2QyUruF9lwOi/Kt8B
9E991xfb5ynPj1V7keCCytAN5fa39jSET4Jvgq0EJ2f6Y/O4C8bQhw3lHrGv
BW7PeD+J4bFp2NtCz8NdvGedwHeH4dsMowNO8BjsLzIKzFhklfrVLeGn9JWF
r4H/gs+H/0JM26OyIBM+yLKysFGludBX6C36yNWsyYR9Q6ddbjuGbseWFecC
Rt9j0xiLvUMe4DNiPXQ0ujrTEHoO3cdZtlgHoa8WCu8+lXWZkCliv/szgX+b
9SR7IV4lhl7rGJI6eoi1HvCaV3hddBN9s1ti3lc9Zo3neMnxfa9pQWy/0HV4
caFjfmSM/AXyiF8GTKw4Jhs6Cl2FrCAzyM7LtXEm7Cw6GfuOjiUOP1rlKPwZ
6+PRacSytB2ZRmxPnD0yjXid7zFpyBCyRF5jmHGPSCNeZA/4hw3GPdr+F7Y4
769ho/HZ/p6Ndmw1vhu+3UnmowXmpV7fAzSudF5hUSb09GrbBfwv7B3+F+3Y
DHQ4eoU74P7/mY118RG4202+gx7PzX2iI+hj/lqfj3s/3v4K9GHNO+oivoBf
aIe20Ph2w0X1AUPnGR1Bl5caYzx0xte5sjniPuI//DfmXO51Cn0Xf9WY2dK9
ldr7jsawU9irkvrYB2fEft5lW3m34YbC4JOHnFOgjT7ySLM7woff2hgx8t3G
B2+Jcw7IKjL7WWvwO/JN/oTcya229XfZbjOWvNq3zIvcx2rTJ+9PMHaHZaef
dSB6Bz1zVVXkHL9fEOM4G7Qoro84Z7p1BTDn7a9vbf3+/lq341f2OKZGjsiX
YWNfyYaMpw3hh+GP4d9B42rzPbKPbHBfyAc4+KKbstFeKPxtgs+Sjn5D36HS
+WcKfj0bvgzzMJa99Pd+OAMwd9ok/C7hv5eNthLjNKu9W+071F4j+FTBG7Mx
hvPhRzN3oedP7Tt1eq0a04E9VxkH3CLD8CAwPDUeWptO2NhDbKORmzMdv0xQ
mW088r8TfS+HGSa3DA/utD+w2PkPYpz33V5on2GXYXwJbOxYf6sMY3+pY8Pn
OndCvJNzLpO48QjD5HMe7Yg853p975ZfNULz39UZ8REwMRKxQl9l5KTx8W+s
jLwUtvG8ysg5Md8Izz/Vthle3Zcrcjs+xfveP2vTTuyP3w0+tnj94KgT00IL
8JE55Bx53677/KgzaLcwFzlFco7Iwik691cVYRceHhww+SzigMaKyBkN7Igc
01PDw9Zj5/EliBWJGR8bHv4mPjc+J3Ps9pwbq+P85H6JJU8aFPHk1PaAL2mP
OOa6ynjT2OD4khzXZdZX6C3kEvnE54cPZvmNYYph2qvEr3MEP9sYuHPcjk80
2/wz2/MA13ZEjumZ4XFn5MtZm7wJ+RryKPg1ZaYzvnKpcz7EOr+tjHcJfOqu
ysgREjPNqIx8Zz4XPNx2rM62bpNtOvr8OPfncwB80dvkjls8Pp9rbvma/Wuy
rRvmebFvDe4b5f5m27x69zF+j3PK+L8H2X9mDdrgh1dsf7BD+J7YubzN77Ld
f9V2kDMUWScg19trQ4/Dt4dKv70leLn09yODw/bjB+xwjIbuJlZGp2GvGPuW
3xeYY7vhA3PBV8TinIecN2fgnOTIyZV/5T1BV+IwdCz6HrqQE//cY+jP59T5
5nmedwj49UHhX6vyv2nEZ/MqI8fdvzlyP9VNEaOTj0TX/NG4+bzgdeYbaJ/f
F3TnDSG/143ea/6dA3+L9dkHcofsALMfaAbtyDWTBwKGhuQVkXnkndhrvOOv
L+33sQZ3zhpfuLzsPvLr+IH4IugM5kGPdDeH3eYdidwQMjqlPWIMdC2y0dgU
+SpyWl+oTJVsf67vfbnQOy+3hhzznogs1zeFj0W+8JyasC/EjB9kQ3+8o3HD
msIne1NtL+Qi5uAt7sNsyNy7ufChLqoO2/txNuCPsuGjnV0d4/O57Nvg4dp4
Y4CvyAeRPyI/RE6I3BB5I3JDS1x/0v3kr8hpjXT+k/cMaH++bO7fauO9BL7a
Zt8G/uSOXvFa65zPvsV7oI/xe3yXyPVD1ius/VY29r89G7aCt0vsBXzH2yW8
19kUPiVvwrmmsI/kAvdqzKUauycbeoj3UHTRvpimOmKXVHiXC87kIo4BJkZh
HfQyOrmlKdoKhNPeFPEMebvhTRG3kJOD7+F/crTYD+zIva2x5jPV8SaLj/zT
6vCd8VnOqA7fYHBT+ATk87ZmA2eLvhNqwm8h1iP2gpeIydCdvBOd4Xdd3nV4
04Gnnq+Ot2beanhX5o0G3Mer412J9xneknmj6XUMg85a7zvHt83nAfFniHmJ
M9knfnBiP5CcKnEvPgkxMXjskzP1Mz7xb4HbiXGpE2MuywYPw8vkDlK/BTAv
+MSmnDvjsWv9noNOwR+psU+Cj1boPRC7l9jm5nMQ7dYJwMTOa1ojJ0AeCN9t
r9vRGcDwIfso8lsGuR1g5JG5yYOQA6Gvv99NyOUUu53cT6HxkeNiw4+artAU
Hwcbj59D/oYcAr7Vubrrn9XEPGfXhC74rul8tmHmO9c423MBv5kLPYh+xDYh
g8DoSXLBN1q238jFPNtykRte6T5w/2aZfcx3Th+2+nC/823VmPEau8Vf+JJ7
IX/zmN+C8f1428Zfo86Z8BU5IzjcNz5dqd8a0eHPeZ/Nfvdvwh7mgg7lzcFH
470W+hg/DHuEvkPvdTeEfuTOuxoiNjzfPI3/e559GOxzlWPROcJdrXJHGjZi
i9+f+G41fJl1HXQ7V2Weytw0fE7sLjEUb8XIM7HvOe5n7gHNof+xAxPT8FHw
cc7zF1/mfH/xZSb5S/yIHzXQOSL4qsR5xcmWDeQCX5/YAN+f+KbH7yjYKM6D
nSJPjC5Dv5EP7vNbHTngpX6HIx+/xPEfe7/TdDnb5yCugCbMiQ1lXuBpXhu/
6qivnec87+sI9+XPDA3wzX6h8nPPz7ijjcuYs7zeBPfPcht9xCz41fgSRxqH
9m7ro7Gm8USvcZTnmOD6se5n7VGu837PmSY3xP3iF450P3g/c8m3jXT9XO/7
HK9xjNuod6ksVOl1/Wj3oxszzhl2+Z7ZN2+o5Ev25U9U1qjc63b8JXysBSp/
cB9z36eyLo032OuMt1jlAZX7Xcffwkfr71gTnbPI/YzvUVnreX/pdRabfuzj
GtON79Vp5P7QE+iEST4fc0z2uEW+/x7vd7pxV/j+F3he8oM3ea5en2Ot6c06
89PI/eFf3Gx60zbPe3zQ5ySuQJf2eY/Q7J405OJ2ld+nYQvKnOue5TZ8Ht63
yWmRy+pyvoF4l9j6YOe90eHFfiu8MN3/bsk+7kpDTma2hC7h/03w7R1eG3qe
4Hsl17nK58H+E7/hA7CH631/l/gc+FfkHzgX8oVNvMF4s/3WTbyPbVrivqt9
7rvT+C9Ar327+W5jr9h8fHTs/hSvs8RnmOsz8R8XbPKkhnjnxZfFj0WHkY+G
VuTUya+Rb4NWtOffC5Yb56qWyL/x/yl8EGJ7/JD7nBclR1fhOKnbsRV5bezv
OudNwYM+zAkNiLEWfC3n12O8ja4zLq3f75tc7zu+yLw52XfSZ1pPNb92u2++
+QweRL663IevUuic1zKPm2b6TfFc3N+FXm+J74Y+ZPAC98F3s8yb13ov9OEn
cnZya+TweKcjj3eJYeL1bvMmfg7xC/nbBxyfEccQm9EGTIxM7vx0vxdzV4Od
D6UMNQ48y5sHd1Hj+wTe4v+A8Q6CncReTnbsWu2xK523ha+r/dZC+2DDjO2z
zUFnjDWNoSexOzE0ftmiIfE2yVmJt9Y4lu51+1K/W/WZPrwPnOa3b/oX+X9O
2Lcf+f8Pg7znRY7HK7x//uNWYX6DtwYZB74/13ePHJzj+g3mnYvT/XoQvXi/
+Savaxf7Pq827/zCMjffbfeZnxiD70p+CP91R1vYMnJF6L9e493r9dCT+/6j
VBq+7j2ejz50ZY/HoLsXuL7G46hjt8/2efb9T6g0cjXoEP7jQMx1qP/vSHyC
voA/0Y23m0/z+my25yO/xX8ROQN6iPtHF6GjuRP4jTz9yf5fBzp+hvvQQfNM
l98Zl/GrPTe0xx5c6jHdphk0wYZMd99oy2beV+KLzdnZFrQiR9XjtryNmuQx
Yzxvl+nEfWKXSpz7Re8ucBvji53Dxn79P1MKu3s=
         "]], PolygonBox[CompressedData["
1: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
rbYUc8X+f1Yhw9M=
         "]]}]}, 
     {RGBColor[0.41681404188157545`, 0.2719602693396187, 0.7028628756970676], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
2xfYi0vQ7ep7T43pOVTliD2tb9AzwNgeyOQ3a6yXofWSmt2yHBg9Cq0Lgx9O
CnpBK+qKor6jyk7gr3V0rfa3+e1dx7dZ7T0neGD7QE/G2Rs5FuMsUJt3q4w/
duzGYr8Dsx5g7EL6zqkx/beq33d6+iR9lrB10SOU2wOepH5nCm4VvKnU9djF
G0rdf6zq1wveInidys3Vhk9T/TmFbsP4G+Ib9ROqvF/sY77PmKRtAewM9Ndr
7I3gme19nkqCVqyVNXPOnos2M9pb9y2tdh1jLI1xBhQa//06u+2H0T7fDn36
eqnrmXNkoW2DX6n9FVXmN/YQnC+qdR00+6bU67o7aXrgI6CToRF6GZ6CtwqD
bhuj/pseru+StN5GlkHnE+t9ju+v8/cPos3s2Js5Ife+jfbsw6aAS8vN0+wp
fA28b+wL9D016T3h/bTg/7XRHl4EPkVlbbnXRZsxsWfs7zex39Qjw24utRzb
KVzHil4v5EzvJUF/2nAeOAtvyDabge8j22y5dFiJ2n+ms/5HnfOekj2XC+6s
74PL7Gtjf2OH/yh6XCmBVKuz27+XZfO20COXqO9h6nui7KjFat+gNotUVuRs
K0+VThid9NpZR16XoEfQG5vDD5pXar6BH5YF7vAbMhXcscdYF23gJXjk9Wh/
lvCbq/I90WBMlXlnXrRZFrzUO+l93Ct00JaY9/fCfZno8wett6bc+8IeDRd/
DUNuV9k2RrZwJvATwQl88PuJFyAzORfoJM4GcuPdGsuBW9R2qp5/J31e3ot6
bCXq/y/p9tQja24QPU8QTt9nZCtxXmqt4yjPChh5hPxlja1txn9o6JSLQiZv
kMz5sNLrA/d+tZaNd1caZk3gyrjoRGQsOgsZj7xEZyEzwfG2wB89ib7sFTEJ
YOISrP39GuPG/JzPFbF3fUMnHlLovQHnsWozpnY3bW4JOtDvyirrDuiPvEPW
Ta4y/LuQgbwjQ9hXxmTv+cZeHZ903dio75C0nOiYdPzjdvSrcJ5WZRiblnJ6
wCuS/oatTf20aD9F5a16Li/0Gi8M+UPdlKAP69rVLul1sB7mZ2+7hl64J2ef
ZU7O/iI8B7+Nht9UTtUzQvDFSY8znPlUTmGP9IzUMypp2g+IGM6MqOOc3Zb0
OMNZR5QjWEuU9J8ZbTmPf/4vH/dbvVeprAx/d5dtH3Yl9i+25YWCbxVOp4iW
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
         "]], PolygonBox[CompressedData["
1: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
yGuT9l3cxx7+Aj4o5beLdfw7mHQNpFrokGoq7Dk37bOVjefAnx13L643Fr21
/My/u+v6TUJvE6NSPiv17Ordu4GnmTsWeauR90Xaa6mnUW+jNxi9xczn3xxo
E9O2ZRIdxiN7dtq0FPaeiP/eq36htt9Y9NbyacJ3Vz1kg8g2k+1UYy0Bvzrh
/FbJGvO4Pwsi20o6S3fZRLZRTv135JpGtY1s9i7waOzxaX3fsV7svVPCuVo9
5bvIK064/zjKnK4Zv8HoLWYtOm9A91YJx/Jc+J+Evj5tmnqmBRXuqdRbyUbL
0aU3602s7x69E+u1Tji/Nmb+TOa3Szi/pcDfyLhGUK2gmnRIyj4iX1HOOAD9
O8b8AscQxZIPSx27VKOpVuuO/91X6Bp0BP4/tcy5WTGmCvyFyG8lXdD3VNJ3
UndTb0h6S3qz3L2ydJ4FPA3+WMxnNAW4UaXfrlRz352yDMnqzPi8wm80eqsZ
of4d/K3IvXwP6NVK3MOrl3+Uf3Wgn0K/o4XOecvYW3aF3x5VY+eoXkuaVzFY
sVhvNHqrGQder8I5XrleNnkAWzZPmqaaQ7WH3uD0Fqc9TNXem9sXlZOUm4aB
L6zvmPkAcAyeMQ1c461K2Eflq+pJjmCP4wn3/j2x2bPwflbhvetNSm9TkyO/
XalnVe+qnKrcKp9qmHDMVOxUjf4SvFnQTxW6plrN/mdFfktRja9aX3dad1tv
Upey93TStlWOVa5VjlKu6g2+h7mrI/c26hnz4P0kcu+onjEX/JYy+5pqaNXS
erPS25VqxCs4/29Yr2Ndv4HqLXSb6qcGvjOj0HVl5N5TPWOdpGt81frqcU+j
yweRe0nlnFrQe5bZ11Wjq1ZfWuraTnvW3ruV+S6pZlftXlXmu60aWrW0cphy
mXS4OvKbkt6WdGY6u7vLXEvLh+RLcyLXSuo5ZwPPi5zrVUPNjdxTqrdUzXAM
uGnStlPOVu5WDahaUG94F8Vdo6pW1RvdxeAdyhwbVNOptjvUzL2y3uR2pB1j
FWtlw8PIjmf8NqA7+TJzDzaz7+jNc1vaNalqU+Wg+QnHVMVW+aB8UW8UeqtQ
zzyv3HdId0k94QbO//8i1qJ/
         "]]}]}, 
     {RGBColor[0.49907940313595905`, 0.4149975155660312, 0.8184967928284461], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3eclNXVxx92LMDisrvULbM7O7Mz6yyLqCBYsQBqLKjYBVTsggU0MclH
0RTBGo3Gkjd536hgYhJbLFhQUxRBQJSmYkWU0FmQIhaE9/fd39mP/vF87pn7
nOeWc+895XfuNJx35YgrSpIk2b5LkqRUru6TJK+UJ8kf6pPkt72T5E49o/Xi
gE7+DX1gyvUHqLyyNkkmip6hRkZVJ8lXVUlyln4PKHG5n8pJKq/TswoelSPj
PW3Q5ii1k+6RJL8RPTDl9q7Xc3hpktzR2/Vnpsx7V/BTx7uLxbOXvr1b9Hkp
l7/Tc3WpS35PSnls9FuhfvfuliTlovfWPDeXaYx6pop/rOrG6dneMUkmqLyU
cZe45Pe1JX4/NujpvZLkJdFbRL9faXqJyo015jlD9ZlSf0s7yOqKWsuCuqui
nSF7JMk8tXWIZFzXYnpcXZIs17je6uX3D2ZVp3LfFssGGa3Ut9lOli+ypd8N
NR4vc0XWyzq6v0nBTzk56ArJ5VbR5Spfz0teksdotf9iY5L8Wt+N0h74j+rv
VP32QpKML2pM3TV2lc/smST9RE9qTpLPxfeG6BGqXyt6jeifiB4v+gF9e4h4
jxR9jejH1V4iulR0VvQvRY+sSJL9+2pO6uMU0dervKJB/Yj+P9H7iOcc8d8j
/t6iB4keKfoptbuX+npa5WktXtO02jlcPOPF8xfxfKC69/Vkd02SGzSmreL/
hcovxbMbe070m5Jzf61To57WTJJ0k0w/0/uZTZK39sqsJsvpNj39Uy5v/wHN
uwGiB3Tyb+hn1PezXZPkScnyKT3XSJ7Hqc16tdWoPZJRuU2/d9cY7tAYvhbd
SfRvRd+i+XTWOG9VeUROZ6JzktynceU1t5O1j09V+ZX4O4r/TvHXp5Pkr5LV
bMlqmvq6Tn2N0PsdOos79azS9x30XaLnzBLX8W6g6HPU7rsad1PB42Wc28R6
mdZ1bgfJXP2/oz5OVF8V4j2+zOOhj/7iaVT5tfbqLyS7k5iL5v5TyX6e6MWJ
13+56BvV1gniH6PyYrX5qdp5U3v7UO3pXtqz0zSeJ3d3+ZyenNbrbJ2Vzhrz
VI2zVus7V/yXqq8Teng8v1Ffx2re74veX2P6uc7IIWpvudp/tspt0Q57ZNee
alc8R6v8kZ66lNsZHmN+U3McKro043mcEPWX6jlS9CUqj+ph+nbRw1QO0XNb
yiXf3ip6qdb2GLVfL/od0UNFb9L4j1A5RM8Xol9rNs+rKv/T7DH9W+Wb6vtt
jfE2rcW/9HuzeM/TfF9qdjvTVX5caX7Gv6jS7dLmi82mX1B5dcFy+XHBe/+/
ksPVu7tcEfTunSzbKehkyXlX0deLfl1PJ9EzVS6u8b45q8Tvd9EzUXRKZUnU
7+jsd9TTXqdoMwke6tv3H3vvunhH/fbYh9QvEM93VbYX36j8tur7uu1RT3v0
TZ8LavyOPYzO2x7tTOniebKXHizxmB8KW/RNtPMT8V9bZd3YJDncL7pW8uxd
Y33Bt3vWuj6t+uc7265VRDvQlSXmY58dqSmluvhb9MxpNZY7ckYPXxvf8t3X
8S065l7Rb4gu1JqeXeI+74vxrNXve0SvK7E8volv4b0nvj00Zf7DVO7Uma/W
PnxIe7mX9E9KZ6+3yoye2znb0g0/izNSo/OU0/74Qjx9pE9+ovoDVd9d9WXi
S4v/E5UN4tkgnpz0VV70ZtEt4q8XvR4drvor9e0AfbtE5+4tzf1l1U+TzH6n
3ynV76/3z6vu4Y7WAx9IXw2QvjhB41ysutYOls8uDdYjw9DhWcv9VZ2JwzkD
Gs90jWes6vupzRPEMz76PVH0LLWZF30DdkDz3Sn+CpXz9c0c0QtUfqjxLJHe
+UjlnzSeeztaHy1XH6+r/nXVrxI9F90k+nK1v6/aXCx6dLVtOr7Bt+I5V+Mc
qn6b9e5AfAidu7Ua5wDROdUV9RwgeoTKUo1ju8bQReWX4tkiehfRX4neJnp3
0WtztvfrVK4M/bhKZSX2UmPtpnKSft+l+hrJ/DD0lOgBmu/orM/EhxnPk/nW
imeRZNJH4/9Vi/cQdr6rngkF6/Eham+YnuGih+asQ6lHt5dpH3UR72p994Hq
DlA7x2vOQzqb/9aO9kcYA3t+jfjKxL8H+jLnesb4ueh9VfeFxjJE39do37eW
eK1miqdSdTNy9oMWpL3nGSNtbVdfr4jnW5Ubu3juN4qeHHJAHudp7kW1tbvW
4pWcddIpqtvZx9++rLpWtXuy+rlV+22d6JNE3yj6m1jHP4per/oRom8SPU7f
7602O6rND9PeAzdKhitFDxPPj8VzuORzaOj8XbQ+izSv5o6uGxz12E5s6FKN
5Z2M9eBwtT0vY902JGub9HCZz8vmjP251nqvJWt6unim5aznjhX915x1wGFZ
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
bw==
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.5767049843734292, 0.5482666273522153, 0.909792459503669], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmweUVdX1xi9jYxiYgWGGgWHmvWHee3e4jyGJvRtFsfwjmhDBApZYY0ts
RE00KipYUtSYWGLBkCjYY6MoCgo2EAtVTLHRxMRKB/P/fvPtWa41d539zt3n
3HP22Wfvb+9zZsDJPx/+s4okSZ7bNkm2UVmbT5L9uybJ+GKSnNWQJMOakuRM
lRf2TZKL9BSqkqRCjP9So3/ruVR1l+iZK/oKlVfqeaPCJb/ni26u9G/oLmr7
zwq3n1nnfq8Sfa7Kc2gjuqo9SZ7RN3+SS5K79P0/67la9fPLSXJUnyQ5XfVL
1XYfjaVvpcdFP38Vz0MxjgdVTq5zn6MrXPKNXmrzQZ3HPKnCJXPYTfWv9/d8
J3dJks16t0TPUoSjMf+jwuP+n573Kvz7Gz3L4vfmJtNbqVf/i1Vu1FNR7342
6Rmqea3XvJa1JslTKp/W8119d1C12oj+uEeSHFxleSGrI9pdP0zlOvW5UHXr
9XwpeoHKdXoOE/87Ktfq2U3tW9T2bdGHqD4n+k2+Lf5FKjfoOVT1edW/Jfod
fXeK+t+xh9tObXD7Hu2mT5Gc05J+90ySosrbNcfb9OyhtqMqTCPbuWpTkM7s
LVEt7GY+eC6WDg1WfRfp1Iom1++p+gs1/931vX8UkmS6ZP+kvjW3VmORrDbU
JMk89feFnr/o3RD1+XajxqrncbV9sdb0LJUv6VnQaLnMCfrvol8RvUj0E6GH
V4VOdvAGz+xa0/SxVePaoudePfMkqz0lo3p9/78ay8sqWzSHRzXGx/T0rXLJ
7+voX88dTdZh5vFUrCkyRYfrKs3/eLRdJd479ZyAfkn+0xos+9WS1b/0vZUq
KyX/p/X+xJz7o19+7yH+V9XfAI1nvug9qvyt11TXqrq9JKu3NP69VNdHdQtF
7y26odLypR/0eU03j+H4Cpd3BD2qt/Vz6w5J8jO1nVzrcY6q8r77jvp5SfWz
9PxN9W+pn8+1V3qLPkBr2l3z2GZwkhwuuo/oH4heLBm/XOu1oN3MaPtqrdeJ
+mfrzMO6dK4l+sqen613Y6OcE23flT5Vaiz7Ztp7oruJ3l/0rhrnK+K5v8Jt
+NZVUfJt7AN9zA6eV6LP+6P+5ej/MPX1lMqny9aR2TE2xjgn6JvFO030tRW2
I1NFT65w3dSonyq9e0j0SaLnNfrdOHjqrMePxTgfrPVc4YU+UfT0On8XnUff
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
7aaXqP7vwuF7S1aPqTxb3+yvtk8kXkPWAkx+UtH1n2kM53d1//A0iGdlrNel
7Y7ZnlSfQ1Pr+YUaQ734n6p0TvKmNvvcF8v2u1n4976Z7fOrart9D+8f9Jmc
09PYgsS5K35D/77N2GBm2e2hycttN9hjOkK68yPN6Yd9vsUC4ADsBv2S72Df
9OhhmrzHj/s49gRHzCobf6zT+Jc2OT58OPwOtgl9wYbRNzYJfAGGAD/Q17TY
+1drXuvJXWSORcHlb2vtknb7UWIa2pQDh4BriXeIa94L24fdu43cnfq8SuO5
uc38s8lpSOcPq/Y7+iaWBrOd32457i053NLm8b0s/ivbzfNas+Ml4ibWF19J
e9oWC5b5cH1rUtm2/rI2ywG8Cm5d0uT1wrcuCQyMb61p9z4hL/hS2RhrvfqZ
U7Z8NoiubrPNzYnnhLJ922iVnzR7b10uOXVtN1Yjjjwic87ncJUHaK5faWxD
NNZfSRGGa95/UZ9rmp1DHSueA6UDR+lbX7d4DVbG+i6OfB0YG5uGruLLDknd
50XiX9vTeouvx0azx8FR2Ht8Jva/Sf0PFd5oHmys9FFgp8NS2/kxLV4f5s6a
PlU2ViY+Zi3xT9ik9zTvMdW2WeQm8+pfVckc0TnWMjEOAjPhG7CvYAts7C9l
n5fq92GJ/S06ywYjtj4q4mvs4PCwjdsOtq4f2Oo9h26zbzbVO57p8D2p87Vv
pMZZ+EL84BNl41riePIg2KmPpcOFksdwcov3HzJnD3b6V3wr+ZhnAydsX3J+
eW7qHCc0eWbmxzgYwwTZmeP0bqe8cQP44UqVd2gMbZrX7dgo8Vyr+R+k/j6t
s60/NPYq8/qd+NvLthOrxLtj2bb0S2HRcyPncn5mfwJ+woeCs8BeYK1JRdvB
IRrDfgXbvXEt1iP0CVv3fNn+5WT1OVPj+J30ZuBA2YWi7eMhees9OvB7fWsX
8fQTzx4lrxV2Bvuxcx/nrcYF5t856AfKpu9XeaeegaL/qf4eEr276AfLzsGB
30flLBt4OuOvtqDBKB24RcKYIf6hqn9O5d81jks0nsfIddTbVmLLXi/bZp6a
829obGc38RzZxzZ0L7VpVtv9SpY7cuAc4rWyeV4te5+z329iz5btK/YteK8j
c3AAeJbf4OcR0stm6efhg+0/2JsPiv9u6eZ2PYxvjhdPUfSwwbZf2LF+mX0e
vm+46L1azX9euzEVMSexxqjAtWCbx2LuP0ntO/Gh38+cl50VuVziS2JOYpjO
2K8jrm+0PiN33j8XNH4UfzoEey8cO1H2bUu7v39f+Jo1dZY/5zngLMYDxgaf
nxvYZmWcHbyU+rvL6xw7r6gz/UbUrYicITgRO9KB+dssS/Ka4C0w1Snq54dl
Y9IzJc9xBectyP28HvEE+wBbyf79rcY/urflhaxYownBh52gLfzECvAQgwyr
cRv4i3HG1F3f/bDZmOeczFgHbHNmyBkdJgf7iMa2p+iHVX7R4jOzMZnHsl29
7cnaGBt2fXmL1x0/trrFMgfL/Dd0ABy0MW9/h9+bKfns2NP2vajyOf3eNzH+
Q2fJz6zL236BKTbkbbvxsfNbjJPBy8RAY7s7Ll7cYv0E7/yjxZicOOMJrd0z
ksUzYPC87Sx457RW58SP0Ni20Zy2rfd54nTxXtPV9nla2XNHBlfF2Stnhz8P
e4Xd+kVgcs6GlmsuH/c0pp+ssX1eYxq/AXYENy6LGAkcQc4aDLoi73l36GCF
zxX5LvmqMXFGhg/CF+GH8EE3tHksU8vftoH/xjbT08vG0GBr5Lq82bnnnzF2
jfGDnu63LnWfx7RYx8GFYELOG/E7+/Ct1P7gBtnS32SW1dd5n3turvOZKXnq
TXGGSh0056HkU76J81HK/0X91mgLTS6Gc1x4WYuK0LHr9S0m/mXevFviW69o
PPdrPDuVfYZEbuaEnPP45HuOzzm3A34mT/JYYOlHw07vEXo+LnOfn+et75y7
dJ5d7hn0tKJ1YnrRY2cO6Ak0Y2P8zHldnBlfkRnzgH3AEcMj9sFncq7MO0p+
g6vAoetiXuytbWLu3euNffFLXer9vY3xnfXRD/ZmZdicimgLz8bgoc81eesD
evFJ3jqD7jxQ7X0EJl4QYyL2WhV2DJt2Yeb+V+WdH1keeYaZcWbIWV5HjjPy
nJyfLg/9f77avoNYhVwweJY48lXZulf17jWVbxZ8zvqWykat6Uq17Zcau4Bh
RmnPpqlxX3+t6QsF54xmqmxNHaP3U30xNR5sFL2g4HP3hQXjxnU9jUun1vt3
R86tu+3iBTsYV64NHrA1GLu15LwBuRjwJXt8RU/H3cT8xP4/FM/5QZMPyFLj
vpLqr8o7T8k524ze9gf0c5HGdXQv68PVqe0/fiCt9dyxgexD9uMm6dsf2r1P
+2heVamxExiK2B57srHoeJu4+0jNtzzY9qchZ7vxUU/nFjhn/zD2O2vzcdQ3
qcPVovuH7FfFGFqIaVX2zRlXgb9YO876yH+Bt44Nv4Z/e6TaZ9PEbPTXBras
cZ/MDVw4OnDCHI3zb+Iv1Nr/gvHok9wasQ96xvnF3RFzEjMNaTVOBi8Tl8OD
Hg5rdVxJfEnejnfk7jifnBg89H1rjJlcxMheljvfb639Nk8DJgBzPqK5X0PO
VXhhjcb/qZ7vJ/Y1vwl/M7DW76hnvp+AuxLPe3XQudQ8zSpLIRPqy6KzWsu3
XXS51no8IMYDLhrZ6jifnM3Anv4e31oT9Pga577AKOjZBa2O74jzTg2/Nk9y
vjL1fP/aYiwyIuZ+U5y3sKbvhV9YVLAvpC19LIhc0BsFx77UE//m1McO1T5f
bCJXpd9z9J0jWy37Z9h/OctqF/V3RqvPAeYXfBfmmbgPg13APqBf4Evoo1qd
wwDng01fqLYcsB0nthr3vVJwvpA+iGleafb59suqP6bVOd3nC9Z98mstEWMQ
a+xU9J2JjrsT4l2dt727SHZuarV1ifFckjmGuVTlaZnvQp2ucmTm+ytH4/cz
Y8eLVV6Veo+PTW0nsIPYCvKmZ9f43tH1nT4UvcjZz24t+G4S78GcjfhurWn/
Ntsn8Cg26qfkwtX2m9S8bwb/Tc3OOR7X5pxBMWQFFodmz00p+Px1asGxNJjr
6JJjVdaSdSRfRkz9o5JzGeQt7i85viLOIs9EzghbObzkHBbr9EjJOU1ymbeW
bNtGhH3j7IN9ROzdo8H7B5w2scU+kTwBOdixwcMeRfbs0ynVXiNiO3LctH04
NXYmjiMneVecy2EryFXu28vvOcseFXn/STWeC7ErsdIxkXMiX8idIPDRgpJt
9L4DfVdoatwX2m+g7zF8X+UV6n+o+t+Q2C8fF2cJxGjHxvnWmanH9bj6Oym1
/hJj3Rbn3di201KP81SVPfLe24eXvKeh2dfYBmzEdaJHZb5vNDqzbRgQ9uqN
yAnsUPK5K2cs5Kg4h2WPIhPwG/EgsTx2fWONbXtSch65i8qD85Yn8THn9ZPj
rgh1xGLMB30Bq5Mn75u3vnC/gDwTuSlyTcRq5DHJrdbnzfvbos9/OPMBK4DB
L48+H4jzKM5JD8gZa58hXd6U8zi7amzPFY3Dn1X5H8lsWo3z25vFs0l0pXg2
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
Ovb/D7OZWg==
         "]], PolygonBox[CompressedData["
1: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

         "]]}]}, 
     {RGBColor[0.6371890604327328, 0.6454477077063443, 0.9111713101443207], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmwl4lNXVx18CKBCYLIYQEpJJJjOTzEyCC4qoCIiKdRfFKihoARUVoeIj
2FY/l9ZqrRWsFbe6i7aKFRABETeoBW1xR6wVldalIggKtlpb+/1//I/P9z1P
8tw7973vXc49y/+cc9+WidOPn1aWJMk33ZKkq8qLO5Jk1/Ik+X1jkqyrSZI3
9P94mUt+L1f9pjLX56psySTJVV2S5JLWJHlVba9E/+GpJPl7zyQZ0sNtPFum
9pv1/+caj3F6wX3f1VxnFDz2e6ov0fPH9H+tfp9d5vqUMrcv1f/PVV9W49/0
Oajg9rfSSTKsKklyvZJkRg+/tyT6398vSebpP90nSbqUuzxQ7W/VeD1PqH6o
3tvQO0kmaT8Pa6x9WHN7kpxS8Nrf0dru0L6+UZ+X1OdnlUlylOa7RHPN0bO1
artRdHhDv3/RP0nq9M6VGvMz9f+pnv1Kv5/XmDdE+QLrU31tyX3aRcu3a7ym
J2JtfwmaQ2voeKPKczT2or5JUqt57q5Lko9E531Vn71bkuyv9TRqzikFv/u+
9jExmyT99HxLU5Kcr/W9o7l2afO+34rxL0u5nb3vz3mIFy7NiQ6i2Xz950Wv
RSoX6r9D9U16f576f6Ly4wbRZ4DOW+Xdmv9+tetvJ10Gai1fqb405/qc5iTp
1BjrNcbd6rRB878T+52nZ2PU59J8ktxS5mfwS1ftsazO851QMN1OUnl/tfin
XufPu6ovV/2+av/TPlntZeo3S/27Fty2PPqzxvtinXO05tn6f0g/3ov1rFCf
L3QuN2it21UuEH0qtOZa+EA07SOa/1h7H6ZxH1X/N9W2qMb1a9RncY1/w3sL
o0475cJoX6z9/lT7PbWo8yk3jc8oM6/T5yyVm/S8Tu39VL9d5/KZzucuneH/
VJrPZ4nGGzR3b63nCq3nNbWl1P9z9Xtb7eVqv1ztA8t9br/UOEO05t9p/KEF
88sLfc0zt2mvt/bzfANjbM7uAM17psordYYzKkwnFTvPAT5eqjFP6mX5gX+2
aszjRec5WuPz4onTNOZ0PTtKZ3iK2o9U+VudsZqS+kbz8ES176ffo+v97oAu
Xsdfe3jvR6jP4fpfppd6qH2Fyh1dPOY49X+xi59Tp8/v9d4/JCfb1T5R7f01
xlD9j69zO+9S/jPqO+ms5wfof0d/r5MxWR/rPE568RjRfYL44FiVi2L97GOl
aDxC/Rs05+GSg9Xa8zjt+Q/x7AvJ35464yWi814qrxZ9Dlb/wXq/V53rN/f2
2Pfq2TM9Pc4p/axb2f+KWN+SrOVqDDwoPh+rPjfp99mS/TuqrBOm1ibJnaqL
TMkp+p3Su7NVP7mX14Uu4vldVeb/N8WH76vfco25Tm0zKv3Ocp33ZaovU/lU
yXM1SUeN7+e1Md6irPnkaL37em/zwHCNv0h72az6m718/qcHD8wWbefof4T2
8ke9c5n4p5f48E+qX656uepvNPvcl6rtXtbRy+c4rc7v8+7vRNuJWvu+Op9r
293nDtU3NVgPHSeabqsyL6Kjv1swn25otHxvCBmHN9DV8AfldVFfq+cvBm9T
rg37BZ1Yw/Ay62La0esl0eUhrfFq8caKCs9/ZQ/r/wna+4NdTIcJcaY837+X
+6zRXlbpzL8ULT9t0XmKjn9TfUaHeX2Yxj5O454mmo5WObtkHlqo9xZonEf0
P7faex8dsvN0hc+D8d9Xv5N1jj/XOQ7R/ieJbplOyyf9We9P1GesxhwuWh6B
jNa736qSzy6jNczV+w+o7z1a25GV7jdc4z8Dn2ud76jP1p5u593edV4nfM4a
4QVs7ibtsZ/GvFpjX1dm3fULlQdr/IzGbQnbgs5HRy/OWz8XOq1voDfnUpay
/MxVnwM1fhfVpeZ22knsJdgC3oSH0WNrw35yjil17F/usXYVndu0/tMzxhs7
9M45ZdaXlT2tM4/Xuw9U23ZgV7A96GrW2DXmXVHvPiPVfrj2kodGKg/Vf6vq
YzqNm8A+2Nwbtf888qvyJxXWg9jx8jrTDrqhG3pFfXOFn1GvqXT9CrWlVPah
vYfpzbs8x8YdU2EaoifRu9iP5aEfkSnkC1sBnnlBcz2v/yXVxgbYXuzyuIJl
4GSVZ+xmG4/uOFD7SmueYSpv0f9E1W/OeT0V2Gz1Gaqz66Nyrmj8YU+vc4jW
/77O+AitbZB4aXOb1zlY9V0Lpv8ayf5wjdWsMUeo/IH6PKZ1Vej5WvH5n/R/
vmg3ROP3BPPp+f6ql6ueV32wdOA++q/VwZyt3+s05mbR+cxWYwywxn/V1lfP
JwGAe7ovZ3uR+j+qufporqeylqEJWs+tFZajs4K3y4PO48Q3GfHKSo19u+YY
qHXdofJEPR9T57lX5ixv4zXOHjm/1031H2qupZqrSnOdWWYcAF+xJnAM64Gn
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
b8E8/wvvREuc
         "]], PolygonBox[CompressedData["
1:eJwtmQeYldURhg8guo0tuMXdZfcue8vuf+8u0qW3KCoGFBUFUVCUpiYUI2ii
EWMETIxgSKQYUWMhioh0EESFJJZEBBTsIDbUgBQxihrN+/HxPHuenflnzpw5
c86ZdluPmnD+z5uGELY0CeEE/o9NhPCbghBKCkNoHgthfyaE/BYhzCoL4QDw
4qoQduSE8Fh+CA/FQ7ixIYSRp4TwQVYIO2tC+Jb5+5n/PvOHgvdNhVBcFEJv
6EXIe5hvFzJ/KvOnQdvOWAt9Y0kIp6VZOxnCPOa3axlCfV0I46H3hf5r5K0S
jfkDwX/KuB5aFfo8BDwCeYPQZxA8B7JD6MV6Bax3IePmLM+ZAv+Q6hAWsJd7
Gd+yn6Pou4/1diH/YmS/gbw7MchU9nQbeytgTjnzn0FmIfAXGdtiKes9xnqj
Gb2beE9jgI/WhzChOISDzPkF+veIQngS/HfI7A78LPK7A1+F/F8h/yL06Qe+
iP1+j+wk8+87OYT+6DsE3dsy5yHmn8D6DcDz4FmQF0IKHeYDX4+MIcjawXpb
0P+MWnTmvJ5Cv0PQB2CPFHvrAX06ey1HxmzkjWLNl9ClivWbwfsW8q9k/kb2
8Bx4DTKGIutrRlPws7FRe+Y3Yb1Hy8wj3jPT1vUod6c/8DJsNBO8mDXbsnYn
1lvEes2R3w64J3MGMPdlzrsv/CWsPwv+2YxVzF3KnNns/0bmLwPuxYgBd0P/
bsB3omMfeM9BRh9k/YC9rkP+IejfAu/H5o9in3bo+AD7b2ROIfP7VoRQ0RjC
EuYsZ24R+3uC/beH/gm6ncb8k7B377hl72GNs6E3Q+epyD8M/Ufkj8YGFVnW
eSX6RoyjyO/HnE7MXc/YAFyJ/NXM74L8SuhdmdMRuANjL+t1Ac9ivZng82Vb
zj9C98PYozPzV2OfdtjnZuhzobeFXgc9hcy3s31mOjudic5GczQ3hb73om9T
eGqBh/JND3wF8/+a9p3U3XwE+wTOMgPeGVp/vqWBy+DvCmkU9kpjr7kZ37Ur
+XYP8F2st4D1hrGnRvS/M2l4O/b4GFt82DqEW7F/K/Al4Bdrz9ArwH/B2R2A
Pi/Pd2QW8k6HXgu9O+tfg+y75XM4/6noNBR92iXti+Qj5Ct6y/8APy4fga79
ocePz7+d+a/B859sy3xd75Vve+Btwhs5n/2WYZO7iv0GtrNWe+73q7zfr8rh
afSb1tvWGzod2i7GJuAjjOeRl2C9a9EvH/kp4BfgfwH+Ougj4T2RO/JVvuc0
B86w3v2s1Qyd6oDPjdtXvcv8IdijPfv5JttnUMd+ekCfha3fZ48HWe9LbDCa
9R4APwR8IGXaTezpcvY2iT0NZG+H2MN9Vb6zurvLoHdD3uec+ScnhfCzUuwC
vD9teANr7kvbx8rXjmHNW3UWjT7rczj/eKPvpO7mWL7NgN4Gm/XP9x5/RNce
7PkIa3+N/ZrCfyJ7PDEXvTmPF2L2MfI1E9FxGrpmQz8J+hHoL0FviNv3sEzI
AE+CP7DeFOSPA28G4b08fzsBuBz6avgXssdN2GI1POvgLcfe59b6DuouSscu
cb8ZvZ3RiLgJ/UuxSRfgB9BnDvpMZAwAXov/7sb88+Bp5GxORsZEzuceZCzM
9x3RXVnB+qVNHfMU+y5B3kTwNazRDHwY+ATwVeAPY9+/o8+DRT7Dw+jSmv3P
5T40YQ9VkX2efN9I1jiPtcYj/yj4s5xfP2RdwhnfAHwjYzjwYJ0B+pXCMxn9
zgc/FfwU8Otq/Ib1liew3nfABYx8dJmJ/JuQv1kDuBZ7/YO1nuUNDud9X8ao
YX9H0eeA/DEyNyH78bhjifasvffhW81xf3ybYj06lgGvZT+fg39b57Xlo+Sr
9vJtPPhu9P8M+OJq+x7FEMWSVthgDvYI8N/M3K7I/zTb/jI75hivWC+dpFs9
/Avhr+QO/Rv5O3ljg8H7oN8b7P+JuH17Bfhi4LPgfwZ6ATJvl23AN4Dng/8W
/GXWuKXYd3KX/BPfBhU4hnwB/Cn+ajZwJfr+DluNYw+3FTjHOcJeZrLGYu7G
BOjboJ/InpaU2SfIN1wKzxNl/ibamOP5lXKOL6FNZ41CdFkGPQv60pTPehQm
eTJlnaV7b97sSu7TyGrzLmdkN9hmsp3WaA6+Cp4+8G5kT2ez17+iQ1YLv9EH
gR+D3rnUNq9UPpLwXbsde28EXooNJvAWLkfeZvbTJe3crCn234Y+c5FxP3v7
AZvcjf3/wnilid+Q3tLN0GeAX6ocgfm9OZ9hzJ2L/F7Ae9F3QIFjwCfAG3Wf
c5yjXcBZdK/1W5RPk28riPyWFMPygQNjivIhzuv5KuegykW1x/ur7OPl63vi
v/azn/9wfhXochD6fmT/wB6eKXDONg7+iNERsaXwzEDffa191uWMO8D7sN5q
1lvLeAf9eoIvB17JeAt8cNxv9z3exEXYbjz0d6GtR9898lXsuUOxc2blzofQ
6eMC5xDKJVZB35llnjXAk2K21TDW38j6sVrbUm9Ub/UK5G+Hdx3yLwcew9gJ
/jT4aOB8bNqipd+83v5Szi+DrXpw5suAG5B3HbImM15H3vvYaza++yPWfBP9
L0bGy9IFeRcB74Z+V7l13Ab9Ur5tkT2gDwf+rLVtV8KYnvGd1N18BZtske9I
e229uTPgv4z72xO8F2NF2m9Qb1HfloO/FHcsvQP5Lyq3jmzr34PvxH5b+dao
3Ar81bhlSJbe+Jnwjqj2W9Eb0FsYEPkt6I3prX2PzX9b4BjwHfA/uA+TwfkL
rZBfXWvbH7NhnXM2+aIKzrcz8HNx58ZXsP6zwEOQcR2TOzC/mvmb4vatignP
A3dKeu463kAG+tq4Y5VqgDXirfVbG8nYhP36Rb5rqkFUizwddy6pGmEdcAX0
Es7zR3R6nbsylJi7phW+iTUGsd/D6FMJba/8E/A81h9V6BxDuUZf8Nbg69Gn
EfxheIZnmWd+0jmYcinx9APvzqgGfhr+BvgnYZNHWtrnrmf9p1J+W3PlL7kL
53L+P5Y559qX8J3Q3ShjfA69R5VziaHI/Ei5muTl2efuA/4SngfBj3B/OjK/
IWZe5ZzKPa9hzjTwnci4GrhUORr80+BfwVrD4Omt+oL9DgUeIh+CP+jMnrYq
tiWc+6im+4K7MhD5U7Psg9aw1wvgb3aKdVoB/8mM3YX22fLdl8UcGzeAr0+4
ZlTtqBrpG3S5nj0saemYothyUcxno5pOtd1U6Mug3wr939Cm6I2CTwP/F/jk
OteC54NviNmnyLfojl2YcM6o3FF39oKEY65i75t8y0fXX7KHq4Jrhl8lXYOr
FtceiqHfknQupBp7GvB57JetHzuzwQ2ucVXrvgN/S8WfpHND1SjTgdtzB/uo
fuI+TED26qRrc9lwObo8zrgWeDLfHoP2SMK5uu6Y7toJMdeGsqd6Da9mnJsc
wt4R9puPzG45vtO62+lax9afM7aqPk4691bNpdpLNZ9qv8nY63vg5RnfBeWM
Jcx9iDUWFTinbst5b4Pnp/DuY42VVa7pVNsppjThbX1Xb1nNeGPPQb+Wb+/r
LHh/H4D/BDyCloeN3mMvRZFzP+V8hcBbmf9hltfYDnw639Lwt4B/F/wtItdi
P4M/D/jPqieCdbxH+VaVc3nV9KrtV2GPmTn22TvY2x+O11+qqUqQ9/uEz0Y5
YDF4fdx3XzVcHfDfkj4L1UyqnWYkfDeU47aE/2ru21z06YS+S2KOeYp9ipmK
nU8lXYurB6NezId1fuuK4R8Bp5P2faqxM0nX2Kq1+zEawBcnXIvoTuhufJpw
LriMnKIh7ZpeuaR8TA/gLxP2XerpqLdzR8J3VTnvyejXsda5h3LyDdhmbMq+
oBf844BbN7p2OQf+KcjbCk95U8cwxbIZ2OSPzJ2u84cW5060YG4+oyfz36j3
20sQP96CvofRBriR8QD6/gudKnKdw9dwfsOZ36nUOZVyq9uP+0/J7JFyjqpc
VTV5UnepyrH6HfBx4J+wp93AuxhXR86xlGvJZ8l3fRQz79uMsZFzCuUWmnMN
eCU44o/5LPmuw5zfnDKfqc52X8a9IfXw1MtTTFZsVgwdiy0XSp8c53TK7V5V
DMx1z6Yj8j9I2Berpt8D/GKVY98s6KdE1km6Kef5GF23xUxTja1a+6Y6xyrZ
6G9p9yTUm1ggGwNXM+4BLmfNl6tsA9lCb24vsraoR5XrHtipkXtY6mUVYKNe
qserDRfqfoPHI8vWGemsXmG0ynUNno7cc1Pv7QAy3lW9kPZb1htdAvxk2m9V
OZNyJ90J3Q310M6W/0u7N7MZnhegrYs5d9qPDXdwd+alLVuHMj/tHEu5lmqE
jHLber813UndTcVUxVb1iE5D/kD0G8zZtGHOoAbnDModFNPacj6LmDM0xzFv
Utw1rGpZ1SQl6HND0ndfMWBq0jFesV49tJ5J9zzV+1TNrNr5/ox7ZapRVavK
J8o3qkemXtnEOvd21TM9mnFPVL3RXPb/Gbr8iW+1Ze5JzgH+JmHbtGLOIdU3
8HQpcs+vF/K+gr4p2znKAej/wyb/zbYPTIGPiLkWUQzYjL4jE+6tiWcE8H3K
Z0sdMxU7d6vmBY8Yf4F2JOPaT2/gK+W3snGp5yyEfmHk3FE57hDgf8bcq2jO
eTVXrybtt64YrVg9Bzxe6pxHuc+IyLmvcvCRwPW1jl3yKVtYb2HGZ3csh8F/
3pu2bsoJlBtcwrihpWum2dh6WORcWzn1JZF9jnyP1vxT2j0C9Qr0RmLAV0bO
/ZXzXwX8WsaxUTXb9oxrYNXCyumV2z+e9lkpZi1O+43orSiGt+M8ns+49ted
Ona36tx7k47DgHNifm/qqZ2ZdE9QvUHl0GUpx0jFSvU81fvMiZzL6Ex0Nur5
qPfzAzI+VizLOBdUTa3aunPKvVDV/KfprcXcu98PPpD1Dlb7LunOfM3558lH
F7oHp15cnmoy6PugnwN+mXpcJe4hqpdYGPNvD/pN4FzofZjfssi/SUxSbGh0
rSgfKl+6OeXeknoW6l1cX+NeZqX6wSn3uNTr+jsye3L2Y1KOPepJqzetHF65
vGrg1rWuUVWrqkf9P97+pirfNfWUm2KrK5jfrcg9b/W+lVMqt1SNugG4KOVc
TDXjQfCzUtZFOYByAfUA1QvUG9Nb6we9pMgxXrFePVf1XssZZ0I7nVFW5Jiq
2HpvzHtRDLiz3j0k9ZLEcwa8uZFzVb0hvaXX6u3rlOOsVS8wZdnKQZSLvFdj
36ffQBZwFpemHWt1JiOAO6bca1cPvFPKNZ1quzXw92Wt7nzLK3JP9wzs8XbM
NNXgqsXbMx4tdkxQbHg07bulmmgRcFvGihL3pE5N+zcH/fagOR0i92DVi1UP
KYqcgykXU4x/EP6zkr5LuvO5rH13xr0Y+bg/ZpzzKvdVT069uRdj7mWq55mF
rK6Ra1f95tMtckxTbFPPTb23N+FfUewegnoJO6r825C+9QJvVM+m2DFLsUu/
+ei3H31rE7lHrV61csIOte4BqheoM/9Jyj1UtYRWYoM27OeCGsOySWPaPWT1
ktUTPqjebsq1kX4D6QB8Hjzvlrhnc1vKv9Hotxrd0cuVX/Ees4FzGF1TzuGU
y+lN5oLfmjjeu4PeJeUeqnqpenN6e5WNzg3Vc1HvRT1e9XrV81Tvsxb5uUW+
A7oL6jEqP9S3buoFJu0b9OZbYMvxcf+WKJ2lu3SSbupR9oZ3XdK/TalmfBr4
/5HII+8=
         "]]}]}, 
     {RGBColor[0.6976731364920365, 0.7426287880604733, 0.9125501607849725], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3eYlNXZxl9Q2GVhy+wuLIHdmdnZabuzSxNbTIJRI7E3QDCRiIotNmKJ
LTaMvaHEgGLBaGIvUTSCGlFTRFFQLNh7QQHF2FG/+8f9cPn9Mdc5c97znvrU
+3ne9n2P2P3w3kmSfNYnSTZQeUElSdItSXK+ykUbJsmxA5KkU+3XNCbJvUOS
pKTOV0V9e9X3aEiS6pokGV+dJLuqXqX6ONWnDE2SbdVnkt7dSe191b6H2rsL
SdKo/0N6kmR4V5LMG5gkI1ReXEySWzXXt+0e+x8x19WNrjPnYXr/XvW5S2Nu
1ZQkc2qT5Eb937TV5XtVSfJOOUn2bk6Sd1Xe2S9Jboj2zRu8no01xvFqu0U/
TZuM0l4PH+R+/2n1Goap/UrNd4/6z1H5n0ySnKgx++ogvtFYf1Ofd6o83tjY
4zmpJNlR9R01T0eP6zmVe2qdo1W/m/6acKn2O1ZlarDOW2eyq9ZT0ngF/cb2
1dhq31Dtu1W7raifriL5i8a4Tr9veiXJGVrTtapPV/nHRj9L66wW1rhOnwva
/e6MtM5P699J639GZ7IynyRv1SfJ7t06C/XdRL95OsdGzbvdEK/rr1H/k/pN
0H76adwJ3Kn2OEdj9tH/w/p6faztx9rPw9rXFiofzCbJd6ofrvrUVs9xd63n
oT6vyuXoqP9S40/XOInGnzvE+/pa609rjoVqf16P7tb6t9H6/1v2fdylPgXt
9/Ko/zLqd6qe7+22u6PPvCG+x2LQ7byo71DvvdyrNVzR6P6MMSf6bKc+K3NJ
con6fKiz/GW963eq/0yVl0Z9tvr/Xf1nqXykI0mm6b1Fbfo/1DQHvR2Yd7mh
9rGnznaCfkPV7w3R54wYZ4He3VptD+ndZ3ReT9eaPt/s5/now/7+HntcGn3g
zxMG+B36v6h1XhH7KrWYLtnnmRXP9UG73ztugN/9o55/Wus7mBVnOFbjf9tt
Ov9K/RtE92fo/FMqX9IdTFD9ZZV7dfuOxmvNd2lvW6v9P2rfQnf3rNp/rnuc
3O36IerzOu+ozxsqT9F5LFZ7m/rUadzpaq9X+ZjGOVn1fqoPrhPfqc+2orWx
4qO/1fr/ORXfxUft5uMTgpcH6J3T9W5tp/sdH++yz9+HHFvVz3s9TudznvZ+
qn5Xx/kxDudyaF+/y5g766520W+B9nRmo3kQntu90etnHwdorBv0fn2V52Wd
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

         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.7581572125513403, 0.8398098684146023, 0.9139290114256242], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHec1dW19n8gAjPSZoaZYdo5c860wzkzoCkWStRYkKJUW7CAVBURAaUI
KIoi1YoFBdEoYgVLbLkarwWwxHKjYheNyVWTa0u5N4r6Pl+exSfvH+ez9+zf
7nvtVZ619mROO3vU9PZJklzdMUn2UnpmfZL8sShJxjQo35Ik73VOkmX5JBnQ
mCTZTknyYTZJ2qvB+ypvp3RSU5L8okeSNLb4b+onSqeo/GCVT1U6oFuSDO+e
JPd1SZL900kyUeU3qnw835Q/Tem0rkkyQnW2qE5/jdVTYz3WnCTfaS7H6Vtf
zS+vtseo/jzVLyg/UvlFyo+qSZJPVefoxOln+v2+Q5J8HvmJ6qusk79Rfm2J
1qu/T+dXqjnq92A79aU1L1d6cV2StGkOh2s+72eS5ECNNVljrWtyn5RPUtsd
hSRZo7UtU7tW1Z+gsudTSdJPbd7WGEe1JclTOf3dM0meVLpU/ewo03yV71/q
Pjeor4HKn6H8rcoPYD7K36J8v1Lv1c3UUf8/ai/Or/e6abdU663q5T2hzsv6
/V6/V7XGTzTGWI37sdLbVWeOxr28u8+J85qstdygsxyv9axVeqr+7q/ycUpX
av6NOodajXm21rdD+QHFSXKE8hn1Uay/y/Vtvtb7utb7rdZ6pL6ntXe/1XgH
aNzHlC5TP1nVHam6/dJe183qP02/Os9r1PZc9TFbv8a9kySl8ukqv1LlfVp8
7te1auy09+cWta3s5DU27+2z5Tw4i2tFA2v066S1vqz2U1Q2WP29ovxU5Yco
/2WF9lBryHcxnT2gtmfp23atv6D+FjFutc5ev/X61rsqSXL63aj8A7VJcr9+
ffXtv1W2VmWjEn9vib9p97rGX6f84ynfF+7NT9RuP/02qN7nldobfX9C3xZo
Pq/so/PTnVmiesOVNmmtFzW6rEH5gZrvVtUfo7EWqXyYytMqL9NaX1T5sYm/
k9/RwfltUb+txWPtyPr71qjP9+1dvebtUZ+2RZp7Z/0GaYwPNP/HNMdDoDul
D6vOw0qn6qw7a04Xq5+fqM6VSg+tM00UqXyJ/m7X4HzS4DE7dvO4f9E8Fqje
a0o/0+9f6m+Y6HmV7vmd2odS0UuvXs5fqvqJ5r9L47VT+rnqf6v6G5XmNd7D
Kn9F7X7Mej4/KN2V9VjfKd2ifmeIJhtj7S/FGieLdh6JtTzZyedQGukd+zif
0rqGMbzG+Vbt91af/1K6RnP/pqv3o6LN/byh8o80j5c0n+NFq1tqXZ/9f6/Z
fbZy53SXp4mGf63xP9TdOEF35H2lN6rNI6pTmzG9/7Obed1+GdNGIh6zr/Iv
Kf9P8eHLxANOVr0zNIfDVbeb+tuhb0v07Qp4isbqIP77gs5w7/bm1duV36u9
/35R+Y5KN+ScvyXtb893drtx6ruD+pzWyfdj7+6+I3209r2Un6O53VnketT5
H5Wv1jxma69P6G4eDi8/Rb9E+Vmq36o67ZSfrfypKm+v/HnKzyo4X6/11TV6
7SXKj9Matmo+52lNVfr7Ia2vOuN7y/2dqbaV+vsB7o7avVMwHx+pdm+JB21T
2x1KR4qWRvRyX+1113aJB76n8kN0rt2Zr/Z+g+7szfotVvu52pP39X22xr1W
+/K42s1S2WR9667zekPfNqndP9TPY/q2Pu2+me+vNa+n9W2zfoP1G6vfFNUv
6em2byp/l8q+Vdt3lE80n++Uf1f5ldWe/0PKb9R4v1eft6d9Ti8p30npr3PO
/1rly4q8v+ztwoLpYaZo9qZWl89WfnmR95p9Zg+QcezJ5TnPZ5XSDa0+x7mq
X6T5dK7w2Otbo63KN+oO71K7e7VnS/X9D/uYT5Xp+4Na88da0/BGyxHkCbwe
nr88Y3rbGXTFOXFeFRnzEu4hdxD+NqW7+cTHWd/TlMa8VbzylirziwrVaxKv
GqFtG6WykVXmBR9lzb86NZi/w+dfTZnvw/9/r/wpkhn9dO9Suq/vaM1jtPa3
lN6jPblE+3+bxv6y0nQOvd+m8lkqX93d9+KDzr5DrOHDuEfPZC0T3suaP8In
b8taNiGXRmqeJd18H7gLz2UtT55XOq3FutOKvGkVOnq7nekMeluT9t/koZP7
9btD+QeUtu9qOoPGbtSaP1DZn3T+ico3qHyjylc2mI7eVfn/au+uV/kVKl+h
8s0qv0rnuFn53lrHI8rf0GC63lBn2Q7fhpdznsx9cxfzGHgsfOZdraFK68yo
3Wc6h0+rfD9naT0XisZOabGuBw9E3+NsO4YMYy2Pai1blPZp9h7P0/6dqrl+
JtoaB69rtp4yX+Vn6O9vVH6m0ikFy++pBetA6EIHa8xP9PdFGvdUjTtf5/2m
ePzQBu8/82cdsyvMP4/W2M+Vuy1y9MJGl2W05werbUrzmqB9OFJ9XajyI5TW
aL1TVX5eg+8NvIC73DnGGKE+3hS9TCn1GZFOjvwc0dVr+vZ37cN81X1L6WEq
H5T1/fk/zX15tdugf6Ifof8tS6wboiNelpifdKdf1RkGrSp/osq+0vrP0dq+
UPpdifWwX7bz946lzpdqDSXKlyjtUeo8/SxMef6sg757RPkW0f9I5b9LLD/5
Bh8ranGfnZWOr3R9vg+usRw9RvUb4bel1gNrlD9c+d8kpld4I/foI3Qs5IXu
5dmtpukDsqb5p4p9J8pCNiOLq9XPohLrAxMKzm8SjXwtPrJO+/ln7f/t+nue
ys9T2e3az2Uat1VjZfR9YYltiP6a93SdaT+ld+i8W3SWm3LWjdCR3spax0QX
X55YViOzVyj/U7VZqbSP5j5T/R9Rar2nv/5+SOkQ0cyd6rO3+rxLfd6lfF75
u5V/PWs9AX2BtudUe19+oT5naT4DW7zn/Sq9d5vUNqe2d+Z8nt+Fbo3+zd/s
7a4o53zfLzHdQDPrtadTlD9Iffyq2bxtvfbnVpWfydrSphtokLM+qcbrZI0V
msMpms/Zied4svJXsUbRx7fav3m6c/vo3EqLXe8Y9d+gsfu2Waehf/btgxLv
I/kNGvd06Fjjzi2zDdJH/PFR7Vce3pozD4IXvZ2zjvD4PtYTODvODV3oHJ17
m/6+WufbQ/UuVT/dcraXTo+1D0JHK/K8r9Z4X6vOdN2LgvjTg6KjkernMY1V
0Fh/VNt1rR4rrT6HaS0ZzbuP1nJ+N8tu7txktZ1UZf5+lvq6XWVPYB8Hz90/
a321QXN7tJPvPDx4D5+jPrzupynv3V7ayw6lvp+cHbYdNh52HOfCN85mXp3t
UOzRAVFO/cfUTy+N84ZopqXEbbH74O+b4u5cobVM1LdeGetrT+xjnW12meVa
297WGyepzkUad0qJ8/D26a3WUdbUWf6QRwYNqfE9P7jM62aNyAzuDfotuvNs
7emdKr+mzjKNPHd6Rs760tlKf9tsm/s1reMR5VfpvF7QHo7qbJ5wibq/T2ur
VP3NSu/Rr6fy9yotanYd+AeyBxn0L63xAu19G/q//p7YzTYqtsnLXWy7sn9X
p2xvYnei90Er0MlFVd4L9uEPGuNQjfW60jnqd772ZKPGTGusTZrnq8h6reF6
tZsp+qrV7zzVb5cz3Q2KuzNB9/i0Stf7roexj9EqH9/Nug52wVncO/3mqU4d
2IHO5ALNcZFoq1njXt5s2YMMOkHj/EHfhqI3quwZtXuj3LwipW/zVd5Bczi1
wfLrDO3/WOVP11i/CjtsUthlyPCJsT/zQ4aCK4xWvQe0f++lLDuRoVvD7hkf
cx7WYPupRun5Kecp66HfUvWzWnt2sua9v+Z/itKnRBcnd7OtAA0e2806KXdu
TDfrsD9Tm0slvzrpPh2nPbuEc9H57NTZXdTNd2JWg/MzGyw/uZ/czR0hU7kv
Of09VflmpSc2OH+C0p+r/2Xqv0j9P93Fe9K72PbW6G62pY5rMA8/Vvs2TfM+
TPM/q9l7c1g36wlT6n2+1drvP2nteyn/ZtZ21TPF1gnnNHj+c5XeLf55uc6n
r8rX6myqxc9vVHqHyleovC3srWeLrVemZTMuLTVvmiSaebfEPAGZ9k6Jzwv9
jDu3Wv38SWd2n+b3idI71ecqte3T3utH3r6l31Vaw2S1PVB7MLfEfdHPHPGx
36nec/XGwMDCwNqgd+qh+3GH5kZ9cKypkSc9PXgFPGNy8JBc2m0O0NrXaH6V
Wu+1Sq9pdv3+GdPe1GiLjHqvxLrNmwXrR21Zr/XtGOtI9bGz2Dr38T0tL7CD
Rve0vMA22qn+26nOdMmZD5VPlJ+m/AfK/6D9OUP595Xfrj731/4dlDG/u1pl
g9TPR8W2T8B9wEIqGoyBbVOdXUXGyWj7fZFtSvYNGwq7p7SrbR/kHjIPebe8
2GtZoTpHqP8Pi20//FHjtVd+huazf4Pp6tgG46WbQy9CDyKPTv94s8/lUdql
zUPaVH9JnXV4dPm9Ahvq02AZiB6AHPxfne+5ovm/oRvqDP4p/jBT6XrRyTr9
LhCt3KT0Rv0Wltr2ZVzm8qj4SxfN/5EW6zIr9b1Y5eN7mm6hsR/RN9HVVa+H
+i7R7zV4gcZ7U3xpSN686hJ9X9IleE8X858htcYJkIlHqd6+yl8lOryr2mPt
095yfrx+xaLJ1aWmbcr5viLms6za9ix6+Cbll0f5imrLQs5oKdiB5nmZ0i3o
91rDszmvmz34UXXOLnisl0QXz6rO6arzjeoUunh9RZ1MA5z/0M7eP3AC8O2t
xbbHocOGrHXiZwvmB8+HnfiB9nGE9uLDFttizO2hsOdWFVtfOKPV3/qqj+eK
jclgN5/e6jqX1nnPVoZe8ZX28Mta40zYV9hnyJc3etnW4e9Fmu/DsedHqP2F
Sv+lffhWv3nak/9T+lHIzu80zg7N70jN8y3wk4LtlreVHq62F6jtl6r/NBi4
9ufLnPf3itA3RoTdDJ4KP3sh7P0fu1gHYs6bA28dHboy/Ba++6uC5/mD5nJk
re8Pd6d7mWkLugJDhyd81mx8C77aRf2vLzP9YKdcFfg+2D5nBk4ERvTbJte5
UjTWv9I6Nvz/riLv0bxO1mU4B3jrAuwLtf1Q8/kksEowS3T51UGHV6WMUYNV
78waJ18ZODd59MyrNd4uzeskrXF6wfjXFRnLIMZ/K3SAXOTR7waEXv5yYO3o
+eBn0CI4D/eBftCNv4n7x7deWcvLhwqWj4Ojn6ZetsewHcDYuFdgQasrzJPh
xfeWW9d6G5u51vfzC/19X7X3umt721jgsei3d7f4vo+od7uKaIsdX1pmjBd9
rQxa6mA7vlz54yivcTm6DvgitAd+eE+521B/Sk+f777trXcj4xiXdqVRhzHL
Y9zjAh8CGwKD5I5wVypqXA9dt5/op5Zx611WG+X4afDXTFb5C5HHh3NPtc8a
GgNjhR7QWZF3hwcG8l7GPqV3SXuaRyHrj2sz3d6pfbq63HQMHtStzHno+ZAy
69HIXLBHsAt4PjwF3gIfhleDpYBF8n1x5MGfwZ6xZzaqzmUqL0KXaLENsr3F
ZegSndtbB3888KWBYW8epXt8bdY4IXghOu8hMR94w9zwSbyYswx+CTwyZ3n5
stJpdaazcWr786ztAewh+oa+oeeJdabjQRrzTe3tQvV9ccF0vSMwEHxTS8NO
v7bO8g884C7tcVFXYwFL68wb4ZHgzJztqna23S+LNWL3YG/Ai/4Wsu8fefvl
kMXwFOTDstgr9hX+Dw78veotxCek9O+VgUl2NZ4CrvJN3vcZnBI79Ika7/07
HcxD2a9dSp/Snk7QnP6q/Tmlp8dCx1uTMW7+11bjDuAPh6XtX6UfdO6BPS2H
kUertEd1mseKgrHhRaXGh+elrE/fon6ez1m3eAFbJGv8Fhy3vJPpChwGnPvC
WCOyflHk56Ssi9/caoxheezJqa0+lzO13+0K3hP25tl649vg3KubzQvAXcDI
sDWwObij68L+3UPr4J+3g3niL8kY+9keOOo/tL7P1f8N+rat2Hgzet0NoY/8
wJxrTD/wQO70HSFHBgSmiBwB70TGwL/B2+Df8PHu6n9wD+sf2DPs8UqtKV1p
382a0Ev4Dv9forlcHLj2/2iux6vv/Zp9RtTlnD4MXzA+4YN6mUeih3Hn1sfa
oRHWBJ38Zy/vA/cd3+/5sS7wmOFlxlvAMMCfO2htY2osfy8t8lktjHOn3fft
bIOv1f4siPL70AnV73/m3O6IMvtAZ6Vs2+BTYp7Q/sp2xpvAcrAN0L1mhy6B
/5S2yM2Ta6yrVOnbK+W2oZBP2P7whycCdwB/eDTluTA/5oY9D4/s0+g+WCN3
/rg684SD1e5JzXmc5vyZ5jxKc9u/p/0K59f5bk/WnM9N2T4Em7kuax8Evgh8
JgtirIqc8bcD1edLKa97f9UZq3luljz4lX4n6Te2ynbaSc1e05J6Y+HwC3SX
8hrjIcgm7PeZZbbx0JfvDJ7yQ4vLv2/x/Jhnc9ZrxXYanhjTmhvyCDxgdsgX
ZOKskFn4d1aEzooNyTi71OdeWss81alL224Gi2OumZyxgWPSxlm7B9Z6qMpn
Kp1f5xSMgfMtj/nAw7eHLFiRMXYAhjBUd/mn+MXLjCvNjzmDxR0lmT9IvzGV
xn3Rq9CpBuedPz5tewC7YG7G7ebFepHvcyL/ZbljG8CxR1R6LHBjbKat4Y9D
nwUr555ekva9PkZrGldlHQ463FRnvnB7zjjcZu6L6m2ss358M3Z0nfXvW3PW
j+l3ZM684vUy98v4r8R6Sfkb3TJRvXOVr0n7rM6NM2IvWAv3f1XePBZeu1/O
c9g35/WdHlg9suW16HNEzuMOz/nMZ0efr8UcqHO0vr2q/MVpl70acyvJmQf8
OeUUngDWDK+4JO4R8RTcF3gBvAGZAT/5j5zL7qvz9wP23KlS8x2+YfdQH/ny
jOr/QvnNmsNDafuh8Ec9mHbcDvE+72sPf9nT+gjtfhFjwW/6Rf7mtO3h8S3G
Wb8sM195VXT0Sq11efgVPJ25MDfuLvMBG4N/Qre0+yLaXpO2vTBWfQ7Q/m8V
Pf0i7+9fBr+lD/pCn5mmtXyl8qvSxlm/jn6o+1XU36o6h6r+/Wmv6ZBYF+mh
sScb0rZZblLdrhWWi8jE4grrGegYt6Ztl+Ezvy0dftic9W4wKrB0MN0O4Zfh
3C6Ns9uYtozDr8vezAye3D1rmYvsRd/ZFjrMxLTpvW/OOj1jVGXNM58KTLWk
wjYJ9shE3Z0JVZYd6DWHxLq6V9iGxy4Gj3kmZPB69Vurv9flbK+RZ/3I6Iqe
rgNe9WzYsdfkXH51zn1U9XT5DTnnr1c6VPSX1rcBLcaOwY3Pzdkmuyp8Q2AI
p/W0XoTfHRz2onrjsOCmyCd0KOqBM/wQMQdg19j946MtPmrwoE7/Hx7UMdIx
gQ0RW0Ed8LR3c8aO8Dn8Jec5/E57fFeLdXV0dvgMew6/wv7ADkGf/yjwJ+xZ
9AVwanSGL9TPJORv2vr/pJgz9vHEaAuWQD/YMuh/rOWajOc4OvCsr9XPVM4m
bRtiYvRDu6nRD/5B8A50nMFBa+jPO3NeHz4NcKb3Q79C9sI7oL3aXvbDgQvi
Qx+svXylg/XQdGCFOwOjAq/4THU/7WWsHH0A/xD9LdmjKyXWCZrDbsX+OrbK
fndiuJBDL3cw7sJ9g5d8UGzegl2D/D8lzvFTMGvln0i7jDy2wJ9yTh+vsx59
SpRjK4yNMwV72xk4ybcZ+5+JE+HMT4i9rc55jdBm99g7zhe7BfulR9Z+LPxZ
0N5hLZZ/h7cYk+gS+El5rA1Zjw4Onk08DNgfdAe9sWezY+0naj9OqLLPYHyV
ZdsVnYx/0A7dFbvy9Oiza9Y2+rp6fz8z6tDfuVHnWJ3DaPUzosr62mcR8/a7
et81/DZHV9s3iuwnjiYbuujcvGM75isdrvbHVNnWxX7EV8q+gqHdEX7TQr1t
19K89dlM9FNfa5yaPcZXj1+Vb8Re0i/2cCEwM/AK1oF9T4wcdHdGrIVYFWxq
/sbWvjvw6+cK9p1sV/ob/UYq/yj4UL3lO3jYvIxjDok97NnoM9qDWRbHef1S
5z1Dab8G4xj3BhZfmfNZH1ZnfB+cP5szzn1ExDzMSlunws9DTBs+3nLl947Y
FWKORgfvgcaI+Tsz1ohvFvsWP92Mjj47YhrBNu8M3B+dFd31oBavDz0JvoMv
qHdgWR9HLFn/vPkjfLK91rKuxnYRvh/odLf/R2PdkLa9NyfnOFTs3uUNlgMX
BFZJvOIfdXbVnWzHZyrM2/BLc8bYLtsKXjt7sFX5iZpbk2izp+ZxjcYsU7qg
1v2w3qzWlKm2/UPZJ9E/65sZPm78yOTZxyfrLafxo6IHw9PQo0iXR353nEq1
MdLJUQeMF/rN1Jr340MCxxra0X/XB03uGY+7TNnu+lr7FRqvXvVGEx/VaF/1
6ibRb8yZNbEX1IHXvxy235n1xt/B4f9DaV6/b6Wftyp9K+U7PbzecYjYibQB
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
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.8129320406504317, 0.8637720567382269, 0.8914961788650103], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHd8lFXa/iciAQIkmkAgmWSSySSZcWZclaLYdV0Fu6urvnZFECtV6b3a
EOmCHXvBFVl7owgK2HFdy+6qqLiW/b2vrq519Xd9uW4+7h/P59xznnPOc+pd
rvs+k+4/5PjBOyQSib7tEok2SufunEhcoucB0ROSicR4Pf07JBId6hKJc5Xu
1jaRKK1Q2imRWN0xkZim91P1nKd3bVVmRz0DRG/tmkh8omd+SSIxWe8n6Rmo
/GSd35H/qdLP9CwQvbR9IvGx6Hmi/9HVZcjr25hI3KR6y7P6fqXrUP5R5V9T
lkgcn0skTss7/1SlJd0SicEay7s7JhKvq3/7qL//EH2kyt+ndiamNR6V+z+V
P0fpRZWmnylx+mXQH9QoVf0xpcqvTiQeE32Z6A4aew+N/Xn9bid6d9FrRR+k
tl5Q3QOVtlf+Hspfp/yWKs2l8g9QP3pqDnromad2Usqv1zNXdL9yzaXKnKXx
lqluT9XdoLoDOrvNKo3zO/XhSeWNVvmj9I2/KP9IpTdXme6hMod1TyQO1fOk
2jlf74ZpbCdq3s7WHC1X3pUNicRTJaafVnqhyoxQmZNUpm/O831pg+f+45j/
oepPQc/n6stravvV7p6XF5Vu6u4+Pa65ekzPU6LXdPS++LvmfEwqkfiz0qMz
icQ/tS5f6HlW70Yp/w3lH5Hxfqit8/f+WtAcqz8nqz9Pqn/3t3d/f6P13LST
1lljf0dlRqudw9TGW+pTUu8Waq/uXOb5my/6Oe3f4/VugehlWvMNO3l/DtUY
v9Z8DVY6V+3eo/LXKt1P49hXz936fUbO371c8/CE3t3X3n15XM+97Z23QX0Y
qH4eq34ep/Kb1eYxSo/Luo2zNK+XqX+bNcbDNcYhmr8T9XygPnXRu6TK/0ll
z9ReWKF5O0PPWXrO1NNW9adrP3ygPXC6xtTaJZFo1vOxvnuXvtEi+o4Gj5t9
vijh9+R/pDLXNXl9MtrnR6j+TLV3mPKP0twNUfkRKt9b83eP5nux9uQBKnOo
3jfpqVDdfvp9k85KTvOxXP38XYnrDY66a5X/iNofqd/DK/1tvnu7+tYk+jb1
rafaSCvvZ5X/g8qcoKdRv7vnzQN6qf37NfbrOf87en2WdvUaXae1W6F5elDP
s/r+BSXu/71q9zWNZSDzpvavFn2R8l+IOdo2PyrzsvL7sw6iXxF9ruh7RL8q
eoDoA7XXjlKdC1V+mvpTUN371fcN6tMm5d8n+krN/cR25oGMe0jwkxdUZqPK
3KsyA1T3K/X5XKVDNL6vRa9Sm4P0+xvRTzY675vIf0n1uugMv65+nJf3u4FK
v9UzSvn/VvqDnrGiv1c6Pe/yx2kfva5+L9F8rNH6/J/yhyv/f5Wu6GT6Ja3H
Q51c91XRHSvc5suir1L+Be09nufVpw3qxz3q/yWV7v+z6tuByp+iuX9K33ko
aX43SuXr2nmdWXfSUUF/Wkwkyvme9lg/1b1Zdf+YdXv/ijaX6ztt1M7T+vZ/
tI47VjvvAvV7td731bguEr1GdD/Rq+DPej9SfVvN/hA9SvT6Rq/x3aJH5N3m
USr/jdKv9TyuMe6tsfTRc7fo9lrfe5UubGfez3zA/9d3ND9+X/QpOl/PiX5P
9GmiXxD9geiNHc13t4i+vNTle6iNOaXO79XWZZ+P8qeWu13avFZ9maPnHf2u
0Py/3dF7+wPlte1kWdRJ+a9FfyYqf2Un/7661G32VPszNP9vRd3Ty90n+jOy
2mv8cvBX5O/ubS1bWAvky3niS/9UuQFKD9UZ/103n3/GgTxiLMgqZNYebb1P
aO8TtX9f0fmLNLeNqr9U7aQKlu0vRZlrRW9ivlV3YGfTW5W/uFXnSed2Yavr
LdHzvt7dW3Q/F6rN+4vuw2LR3dXufJXporRezyLRNQXzangA30pr/YaKHq39
1k9jGCZ6jOiHs6Ynq53DlT9c9Fjlz1LfRqkPHTpZzo5V/p7q53ydmXGi99U+
auQsix6VsN4yoYPHgt5Cmb0or/zpel4XT2pEvmp+U0pf1Vxlyl3/F73/Wc8F
NR73UM3F3zTeuU3+7j6N1pVGhL70fbnXn3XforG2Ux/fpHyr17pP2nLugTLL
mp0L3k8VStvr+bPK7Kkyd6svDVXWHX4odxufqs3OFS4DfVvRczIl5bPHOUJ2
cf7axBl8pr1TZNm+6t8bUbdtwXTPtPcjeg57cnnR9HVq83yl58X+ub1e64zM
0dm8TfR7oueLXqX2H1L7n+r3VM3di6I3ak6eVf4K0f9Q/mrRK0V/JvoGpQ/q
+STk7FN691iJeT08f0refWU8vGeOnglZTB3apU0evs13P41v0D4898XozwL1
r6t4/jyld6jPHyjvxpzlBnwGOTICnqv56CfZfYnm5EvN2wVKn5fsW9/duiDn
7Itqy0J0iSXtrbtOKfX55GyOzrtNeNjpWetlQ/KWS/DhrSo/Pm8a3sxYN8X8
TM6bRi4huzbG/EzMm0YWnZH1XA1T3hKNobvGtVjpTXqSom/I+RuMjXHt3c36
/Sqt3xPwTsbQ0fyjc/CQh5S3Qs+nnF+l9+jZ2tGyFpl7sdI91O4D2oO7KX1a
7weHzYCeRjunag6mlnqfoAe+rH7urfIvKX2gaP12Sco8FRq+OkF7bpLqd2sW
H1Cbt+r5sKPPDfwTXs5eLe3kc8Te5xyRx7wwp1tjDzBf5G1fe9Yd2U/+pLx/
vxZ7Bl2B+RmXt65AOxNE/0+5dVn6j6xYG/JiEXxT392f/d9qeqT63i1vu6eH
1mVm0nxov7Z+2nfy+Zpe6nY4Ox9qfJ3LXY6xMA7KrBXfWdzVNtdLohehP+xk
PYU9zHjmllkX5SzMqNV3JfseFT1L9Ngyn515ZdZdOSOX11pfXcj5LLN+yxnC
9rmw0rbAJ1X+DT2z1rYWdhb1BgSNbQFN+y9W+R3519S6LnYTe5A2OVfo1KdW
WsdeUGa7Az63v/L/pfoPl5gfrIq1GCQ+3EdtndDZOsN2XrW41jyC9V0o+tJK
72d4xrOx1jWq21/5j5SY96yOdX+k0Tr5TOmAizXf/9Z8z9H70Unr4Wd1sC4O
vZL9ib2kvK5az/uzfl8l+tlGn9/Famd+rXVf9N6HVe+0Sp+L8bWmLxFdFL+4
T2vcT3sj3cW68YfKz3Txb+oOrTRN/rxa65Hoit2YK9U9r73fD41vPVDt/PsT
Ppu0f5/ou5TeGfQdQXN2OLf3RDuk90aZ+4PmPe09EDQ64cWxjtiOQ6M/C2r9
G73tH1UuRxl4DOW3lHi/MP/Y9Zuq/Bv62yrnsz+vrXVd9MNPqzxe6EW1tkPR
BbH/Lg06pfYHV3p+KDs4ylN2ePSHfUB59sZ1ta6/tsR2yfDYJ3NrPRbaWaY9
UNLZsrav9mGXLiG3tB8OqbROsFfW9J5KR9KmniP0++2E03eUHqX0yMg7SOnB
ldY7W7vb3sH+uZRx6elbabpfpe3TM8Q3zteaHKC9tE/aumK59stnyn8YXqH0
cz1d1cfrW/x92nhUdQ+vdDuPiN47bf0BPWK0yoyq9bfp85FR5p+t3k83q502
4v8f7Wyb8Wvl3630mHo/0IuUd4p0ieGan2F6/p9+d1fdW1X3YM3FWPX5IPT8
pHXu8Qm392G02Tvreegl3r4g6XmZofn8Qu1Uq50bW1x2S5Q/tta/h7S3PUs+
tjz6FHoVfbqu1brV/hprL+X1DmzqCeUvFv240t131ZhF75myrIA+V22uFt9c
CBYgvnt8hctjV06qsa44SH07sdI2KvYpcnFutD8qbd4Oj4efoefAG2fXes/D
3+bUek+y/zn3pwYfYC1o8z8J653olr+0GONZt7NxCtL1eoapzF9bTb/b6jEi
S5HLezRapiBbhoc8QNc9VuUmKt0l5bK9os89G21fY2cjQzbvZDlytMpP0Ptc
ynb264GHgJOsiz7sVevf0H8MngCfoa/kg6XwrcHRt3f1e2aNz8LSVuefqDk7
SnkL1PZHkmV57em71c5hafOku4MvMcfoDbSHboW9mZX866PyT4o+Hp4p/vBR
tTGKUwumR6e9bshO5GYvlfkcO6LMtintgNGBlX0feNml2Brqz87S5UaI/lH5
89VOQmfhB9E5ZHHUAVv7IeqST3tfBvZH3o/R5rkFf/cqtbMyaV2Q/j+p+W1W
P35U/o6yBTaoj3eGLXaYnr7aG3XK36L80RnLIrAscCjsNOw1sI5BBeuVSbXT
t5vr8/5gybiD6lyO9+if2OX0Abud36MK7stApf+u9jgZCzgG2CjnjnYOjf5s
LFgvOFR9f6raeiHrOyTqX6s+zKvyOsN/Zmh9p9f4zMJjtvPFlHTB+SqXzNkO
Rk9CR5pVY74BFnRhuedkjzLrSNi6nMFMle2su1Tmhq7Ghe5MOOX3Dqpfm3fe
UeJVP7UYD/xG+y6dNy54VcoyG9ldbPR6fRfryD7lLDIGeGff4I1gCP+OMg8n
/RsaTAFsYUup8/+U9O8LY26Z42+rXZ6y02o8N5yREr2bxLwXrMPCwwe2t64N
L4Xvo1/DkweJbq7y+Nnn8Fx4H/rzktjXA0J2wz+R4/CZk7tZx3iyYPqJOB/g
erQDBsEaMP+k2JLMXdeC5/hozWFjlW1wylYWnO6X9rrNifKtyr9N9CFpyyfk
1L5p27NTq62b907b9sROxSadXW19tnPBdCelvdK2K7Eve1bZ3oen71hwO22U
1uq5B95W77GixzBvPZS/UvTRamNP0Y+BiYl+pNo0dsqj1f69XPV3V5kHRR8Z
POeO0HmY+8ejzJ+qbedQ9+GoC00ZfrMuvF8ZPHBFlIeGLz4Y+hJ1VkR51nNF
lKG9h+NbrUmvJWNrVt9uEX1w2vuC/XGv8t/X/inrZpuTtGPQEwqm31P5GaKr
RE9X+nvNYWU3Y3udurnOhE6WjTt3M37JWd8hzntluevO6WTZvovo3bXHPqtx
ObBN6nfoZsyP/oDzdog22kQ7O8ZveNzUgr81Bf5W4X5MCLvyyRg741sWYyS9
LejbIx9ZwHNrrPVN1Z4fsCN4EOvFebmx2u/I52E+ORekS2NuHw/exXfB2TiD
YGvspXtiD9DGjdGHG6Iu7d0c7ZPPutwY7V+ftiyrzJi/wGf+04IgtU8K39Tk
KuNg/VV+sObtEj3ntDcvwAeBPoNdc16dZSz64FnxfrjKDquxrgJOdLbSv2ot
Fjb7+70brJ+z1zj7d8ScDYw5oe+UW9zsvL1Ufkmzy+4t+uOk7Smw4+ubvU/3
Vf7bnW1jDUd2F/3d3in3kXf0G3/PF3rGqczH8Rt8NR++IPKnqPwnov+gZ2tn
0+R/Eb+hu0o3u0X0hqZfy/Vu6zK0Q9sbO9s3MrbUPp23o29bks7fGH6etyKf
/r0Vc4sPjTY+1LwdJXlwo/o3r9l92Rp9g9fAV9nz+FrwuYCH76k93lvPNSX2
S+GfalD+61XOB/NIorfXGEtcp7wXulsuIA/QG6DJ29DdsgAdYqPoo5UuCAwd
zJyzAU3/P0x6bHzvoegP2MfOYK3dXf8gjeNCsHs9T2uen9LzXdI27Jhu1h3w
qZ7b2RjsDSn7FdPNliPDY7yPhS6PTOFhHu4OHXtYlCnf1eVvb7Kfqn+sxY3N
Pn/7N/g7A+Jb55b7NzrosqLLL23yOQAXxl/J/J8Ye+DWoNHDaWNgtMNcs7Yj
VaaL+nCz6PVNHuuyzsa9n1f7l+BrRr7ru4MDk5yNP6uTcfjn9a7YDgar864y
wwJTuriT64LPb1A7Q/HV4neIeQUPf0G/d0U3arbfiXVijbqUuxxl+ObF8d0r
Sk3T5rqi1+jZlNuDfi94eIfgh/RxaPQTOfmnwIWuaLQOVSresiiw0xsztkux
T8FnZqqNGd38++mQ9ch87KZjam0vDYtvMN5Z9cZUrlE761TuC+W3aD7ntfq7
ffV+edI2JnJ+XL33/pSM99To2FcjylwXHxlYCXlgnB+IH+6iek0Zy5Q54YM4
Ueelb4V/Y1+tiHPKmq+NPdB9V9PvqT+7lXtfsh/3Lto3vFfRPOnBqNuvynKF
tsC8bw++cVUH7xOwfPbIbbFPeL8symDz3Rr77RiN/Sa1M1/r27/CvIi6m4qu
uy5lWY0shz/2CvuGfd8zZXv9kHr7SR4KHLK0YN/NYfWWMSsDh2Tf45PDp/C+
bOFrRL+TMs/BB/dHtTW7k/P/pj5PLvVvaHDTmYGdIt+R7VfGc1X4IzcE/8Gv
jPyfFeWY99mxFpuLbueNlPUB6mMb4kvGp4yvl32TDN8x9gx+fPgWfmP8+8Q8
DKmxPEOWoSOgKyD3L4n8j9WHq5P+3aet6xEfgL//vu7Op8y6OtdFx4BXwjMv
TXgc8EvyPip4nx+d8l6HBve7TmO5R+UWF403QIM5oI9/F/y3ROU+r7G/b2KN
fTI7hCxmDLd08FlEn8FWgpcfXmN5sVPS/YCvHxH58BF8if2izMvdzZOJV7i8
xvYMti+xDsQ8pNpZfiPH2Rv17TwmxliZ9LwwJ8zB5zGHlEX24+d6G74k+u1m
77FhkU/bxFVw3sCsZgYf2Kz2Xo82z4zYAfYVvnp89uBO7LUzQsb9rWA87PCU
3+/S3T5+4gzOjLr0kzZfibEyZsZHHt9DNtL3L6L/2PhH1phvYqMx5/grwZ+w
tbD12M/4A/ApgEmBi4GxbIxvMG/0ozX6TCzEmSEHX4kxIh/YW+wnZA0YzoOh
u3CmyWePsSaXh525Fv9vd+MdtJ2N76IXkA8uMbXKc35rB+91vndMqW1K+ox8
ZJ6YL+If0KHQ3cBGwEKg0UFmxn5gvMh7xnRZwn1nzug/sgB9mj2IbxB9Al2C
+KItEWN0boV5EfyL93W13ocHV1h+IW/Yj8nI57y+GHvytxWWL8gA9h37j1iP
A5U/KHx1j0Z8DnvpnaJ9k7s3ug+PRj44KHgo+Dzre3TgOIyJMowLvydnDJud
dFLQ0wITeExl9il67M1p6znw9nxb6z7J0H/QrdC9kDPYzdOiLvrPphgX8o02
0fHoy1Gx3zij/eKc0t9+3S0zR8SZ4iwujDbRsWljRrR/ZLTDHthc4TqUB9fH
t4FfA/8GNHg1/GF98FswIGjwJR54BvNcX+t28R1Dp2rdz5fiDDF/7Lsj47v0
H14DJkV7z0f76IDogsSowavYM9iA0M9FzM34WF94C+Nm/OgN4It8mz7wnfro
A/vrg1hf2qAt2gSnxDczp8T2XEnYdD+lzU+3pLzm1OV8MK/MFf55fCnUvTb8
O/tFOwd0t18H/QPfDjT+0GNLLW/xuXPGOBPoe8SyYJe8pfS4Uvv78fWfUGE9
Ad2BNmgXHYQ1OSzW5f1ulgfYI3cEZg52flK9sahTpZ/sID5QUmf7bEXMK/wQ
W+ehDraz1oUuzzpyPkeGvv5ti3nDq5LhS1uMw9zdapsL+xA7sWOd5fhdKndT
i+1McO47AqvB3ryhxeXB8vevcpwTc/hM1v05stFzuyxiHk7X2XlVbZZpTrJJ
YwfgJc93tV6BfoF/b2749PGnLSwzLn1R0fTVmoOLRX+PPtDkFN8ZMgCf4bzw
+w8MfZ42wR+JpWRN8Q3iq4MPvNPJsVLghOiC0NhEw+vNF3eXHXxmzj7FK5V3
Ts51r6q373F+xDMMzzsOYXWjx0fMGfFm6CLQYJ4XZdwmbYOVji/3d8dkjHU9
JTk2KuN4sLH1xlCJk0OvIV4NWbKTxvtIwfkjM/7WsHJ/4yPRs0SfU+Z4ROTn
aO3zjcq/qNwxa6+gq5e7b2dnLDcuqndsJdgluOVdBdOnZyy3esZYmKsJ5Z6j
qnLHSeDnpX3KICMGhz6CzEIutYYsPqfo+lVN7usRMSd8l2+CXc4otY2BfbE8
8EOwJuI/e0SZtUXz/Kc1rmUtxrPw4YB70g5nY3aj9Zf6nPVeyoCZ3NLiNvEX
EVNwX/iRh+ZNr1K9+WFfDMmZH8BD2bsjqh1LRJzQSRXeV9iHbeospz+OeKpZ
pbab0BeuD1yX2KerSm0f4R+HFzDGhgrjjPj7xxHPk3Tcz6RS8xF05jezPn+H
NzruAl6Dv35ctTEgYr8aK4xL4oPH5zsq6biiH5K2p4nt2iNp/QD+jN2LjUFb
J6teVs/V+j2u1Cn9Ozz4N/rh9DpjQYwN/kIc3QOBmcCfKENcHflPZ63/IBPQ
F9gLA2I/rFE7q/Uk6uw3w5eI7+ykcts79Il4bPIebeuY6vEdrB/Bz/oHTyur
85wg4/HBTUzaD/R4wWdmu/+Bc8NZ4lxwJjhjnH9obD3OOfKZcz8j7MRjc35/
WZRhr58ZPGFA0W3VN9kXe0PEq8wLG5LyZ+fNZx5t9P6mD/AA4krOKrPv7Nyi
6Uvrvf/GBq/7306m8VUMKvp3tsl66Weh/08o9bwyD6wVMuW40O+QO+ybNjnH
KxK3yJwim46N2FjkAHYK74ktY1+ytsSfsb79VHek+jCh3vE+0IxvPVi31mkS
Pp0Wr+srWetenEf25JqibdKN6vPMOn+D9m8r2O/4S9p2+DUx3+xX9i0xIWUF
x3j1CH8v8YXo2wtaTe8VvsqmCmP+gyu872kD3J26tHNJhc8VZ4qYFuLXiUfp
0uy6l6UdC5SpsP5O7CHx6MTpcJY4U8TecM4578gs4iGJiSdejFhIYt+JNySO
B13+Lyn7bsHg6grGjuAR8If9Gmxzg03iC9+G9Tbbz7kqfJ0/Jn1W+f1Di2Xo
9y22RVh79BX8Fvgvuqn9c1psIx6puRnUYjsA/+eBzdZD+zQbe8DPDf61Z4Mx
VDDXfRqMnYKh9mkwpgq2Wp+3H6om77O2NvyqxQrjoeAb2OBgINjhyC74OfLr
4pCVyDdkCzIJeXFa0fJmYP2vsof8AfWWO8ifrYHBwkuwbZAlyBF8ivjR2jSZ
r6wKGx/fCVh4g94/XLC9X9tkfw9+n4a8/Wf4dnYqWCbQDnIBnAW8BcyKuKpO
wXsbm31H4fqU8WRssBMCrwUrhF+yr9Hb0Nn6bJ9njW+3Zrf5m2bbA9gFLdgF
KfP+r7PGr7BhsF/Ag7lrAN9EfmLDcIbANME2b0xZNyzGnIPLYSNhH9U3u+6V
aeN24KfIy29avF5fK/2qxTEBv2n0voIGIyLuFZmNvCZGFewP3I+YRzBHcD/i
1MAWwdnqMpYLyYz90J1DvhAbSowosqJtxvl9Usb4wPp+mzd2hj6+QP28QH3M
lZtPnS96p6hLzCz4GnjOhJTnk/0LT8tGeTAecDTwom4Zf7c6Yz83sukvaeOh
2EnXNhnfxCaYJzqVNvbSoLQ+bdvm4oL9zdgZdWljkdgWxHXi/8AWfEv5UzPm
wfiN52SsV4IxYKcSD418xx4lrhqZjl1LHDMYHbgk+gN6BHrp0nLLCXj5teXm
79yXwB66NOX7IdiCI1OOxcR2GZ7ymRsafojzam1fbZPfsa/qNM/Tq6yfYN/1
ajCO1SFnnBB7G1sbLJC43u3rxhow/8wxa8M8b201j/lE6eVqc/dy4yvIZPBE
5Adn5ZLgq6z54OC9n6SNs3yifg2qNV6BPkRcIXeoiBPlngYYwBZiHtK2GZvS
3gsnh+4BrkzMOnoR8oTYRGQKuDv6wVURcwy+cJfWd9+M7xTtk3Ff6TM4D/IG
uQZf3THjfu+VCtnW3vHVjAG9Cz6/Z8a4C/EmO+Rct77Bd21oHz/WL1nXTTb4
3IKdfRjY1FmB5xDbslel8ZMJaqeki9rN2UbG5meNNwW9Me4YgUkht9HZ0TfQ
O37OO27+F6VjGy1LTszYDsMeQyf8MW/976e888oi/6mU9SJ0xt/WewyniEfN
b7T+fETeMSTY9vhrOjSZJ8OnR+ccjzgm5/iy6yIGkTggYoCI/yFGkXzOw+vR
f2wM9Bj0md453zvi/tHwnPvVMXQ17GXiF4ldxF7FbsU/Qoodiy3KvTr06Y8D
v9qh7teyiShPmx1ivGvC/t1elxh38IEB8Zt2OsT8oCuyL2kfeYmOzTt8kmAU
4CDbfV/QnM+auLdFjB+6Kvcu0E2J9auJfO50UYbxcacsGfe8mDviOInx430y
yhMbeG3EV60PXJb1WNRkHgWveq/KdiX2JTGTcyMGixjF+RHnRzzhwojRfLfK
Ni+2L7rhxNAPRzU4hvWInNugLWIduTtBPM/5BbfLO+IGZ4edwtnBxsbW7p8z
DyMOFT52uNpcoDbrlN+2i+NQiW2FP8GnmFv2PjGvxK0i24iTRu6wdxbHvhqT
tF3EecSWxqY+K2c7DKwKvZh5mhNzRfwtcWnEqS1uMqbfqLmapTod9L3Lc453
J+59Uc76HfIDHQ98bFrgbGASUwInOSTv2LwvW/0dvkfsJbEz4GrgdsSaE+97
fc5zzfwTk0m6IGgwa7B8cIC+gdWBLYA3glsQVwc2gM25DdMoc5w/GMXQmH/W
ZVis8dCIS+UbxMQSFzov9kC7Ou9DbIH1df4N/VzcS2X/s0fJx4aaGjYj2NTY
oMGmxoSNCeZJzAt31dC3sVmh8Z09kLQvbfv75ZHPfdkJsccOyDpO9EClh2Ud
a9g36z14dLS/b9YxnftlbX+MDxsEfjeu1nYZ53BilB8ddcEAiQUi5hg876tW
x2L+q9XvJ0QZYsKIDdseHwdNDBPnlNhx8LTLAgOD74Evjo/f+CLwSeDXABdH
1wAb36aLh+1Mii6FHoX/FzwJ/xeYyiuBfeAj2zfu4eILQIcFO1nW6ni+21rt
G90vYuDRy34MnZ99zf4m3pg5fiD8l+C0xLtzFvCj40/fHkcAjc4E9vxh+Nln
xJ0d8Oovlf6UNA4PFvFzrG+PyAcPmKGz/Ged5d/nPPesAWvK/K2MOYRPrIy4
uxMLvut1En7agu/5/I/SRWrne7VzGfIz7djrXZV/QtrxdnsHn5kT52tq8I5p
OWOwY2LdL4pzzhnnXtHZETNyRNrxmrsVzIMWhwxij5fGPh8Xd7Ph/awt+ewx
eOSi4MPDgycTL31M2jFSPQuOtV4UvPTYtGOtehfMp/gWtv6r4TuirxsjdoBz
1D9wC37Tj/GxJ5nvX5K/+hF+ibtUQwJn4TyelDPvPjnnczA+zgIxdw9HPB4P
vkD8gKTkb4/nHB3fIkYC+Uhc7O/Sjj3KFqxfbcd1NkXMBXUGxLngXsOBaccJ
pVX+oLTjhDIFv58ZZQ5NO/5+l4Jj3snnbIHbYvMSX/Fd9JO+fRf2LOcF3swd
KO4qoBuiI26LqejsGAhiV1irdbFe4BzrgqeRrg+aNimPjg0PmxLzTwzy6IgJ
58E/x9lD75wSWBn1no5vHaq5Xq9+H5azLtkz7qqj+/dKGh/7qGjsYJe099j6
2GfIBeLUiascl/L8tsv4TPWKdsBiZgS+R37POIOcuR5Btw++DZ/+Pum+MT74
93OhAz2vuR6oM/0CNkvgWeBbIxt89+DwnPn35MAJ0WUmBY1NNTnm57J6Y1Zg
V/3rbV//Ftym3nY6eHwicDn2z+B62/XgtcRP1iRtVyPf14Z8oX9rQ49aG30m
/+8p4w5/KVovWxN6G7yb/Q32xvqwXmC5rWnbCR8W/f01ocuxPuBO4E8T4lyx
z+sztiVTGd/DJH5+Sav393FxpvgvAOToeTnftyQOM1nwPUNiRKuU5tPGcT7W
d3NprzVrXkwb69la9L1NYkerlf4mbZzok6IxHfBI9vAzcVfwuaLv86M3X6jv
jik4jnBZwVgh8z82YywPO3Ca6OdSxgU2Fn/1YVyr/FURu7O+6P8sgDedrzbX
pIwFvFC0HQj/Hh/n6A8RE4L/BNwK2bR/+JTA7ojH424GcR794p4Gexm9tCZ0
V2JH0I/Pb/Fe7hFnAYyA/YzfijmeHvNM/Bn96N9ifjAjeAL3sGbFfS3s3bnh
zyG+Bh8MGCl43PQ4I2Cl+NvYG9haI6Kfc5O+i8tdFe4lEqN+UcH9pgz6WY+Q
Y/RzTOB63NvGZz0q9lgm9jAxw+wz9ls27Tgh4oU6qM3TWx0Tc6bSnXO2gStz
tu/w2RNngK+WmCQwjlt0BuvF127OmS+Mjz36dsTs4TefVWcMFD13ZNK+AeYQ
DAg9G4wF3fPYiHHi3hv39bjPRb/eCl2B+5Hc6ePuGHcouceHPEJXIVaT2IMV
0U/sUOLxBocfmjuU3PUDo+ZuPvfquC/IuQZLBEft2WA5S4zktEbbjG20D+9o
crxcecQ2Dgkc+ZW07XP8MK+lbbcTI7Y5bXyEWLb3m4xhEQ81p8m+zF2Lvs+M
f6Mk57u73PfYMWcMiz3GXtsef4ZdAMZ6efhTuI+DToPtvanJmAvxTZxhznIh
bYyMurTx57QxGmLisP2viHbubrStCgbPnWdi8puUfpS2vUBsEfdrwFTQCVcG
voxuB+4JX4W/1gRemsQGr/b/M3APljsdtUnP8RMp44bg4utTxmVeLPpOwci4
bzU2ZR2CGMPngq/CX5Gt+EbBOiubfEdiufbqxHrzEPwDswNjwhf6QpPXiVjU
PULv55wir0aGzOIuSTb5a9vQ+H05H7VxRh5Fb9O3HitYzk4NGXpEyD5soueb
jA0Rzzg76Rgp/DTEKrdGm7cXfBf3joLnflasaZ9Grzt3uBeljQNyh/66tHFJ
7tA/1mjbE3/v4rSxS+7ug9mC3bAWS9PGK7lru1uj7XviPsAqwaU4O0vSxje5
2w0Owt5mj3Mf6Lm4owSvQ/Yju4nPQ5/et2jZOin0UuQBcmHXtPX1OWEjEyv3
atgOvSJek3x8CZRBV8GeJn9bDGdH27zQyHxkP7x7cthiyGvypoSugm6D7xM+
hu+FeMUR4ZtaEryUeyvcScHfiYw9J3zcg4MXjIhYFOJ98btgv8BXieUu6Ozd
qfx8zrFVD8R/oZDyG78VftV50T7YIhhjQnxyWpUxGtrhjMLjWOMF0R9iUc5q
8J2eXXL29/ItfuMDoH3sI/oyN/pzbIN9ANc0Wmcg5gJ/2c9xF4Y7MZwvzha8
i/8IIG4S2ccehtejq8AXoeGNvau879FR2ePpuIeCbG+M8k1VzqdNfERNQc+L
vk2I+zvN0SY6BWeIs1kX8wy/TTUYPwRHfDDmkznkf2ia47v4I5hT1pS8lmjz
yazpJ7Lub8/oM/4WsD94T12DcUjwSLAx5h996bFYI84mMcnsH/wU7zQbH363
2f/3MD/GcgB8WfQOrf7NGqAzsIb4elnHbN7/xZBTun+jx7BL3r5CynBnmPuj
tMldu2Ob/R9AxzVb7iH/uKfE3e7V4euCrzAv+GxubfUdRu41IiOpw1nBZzgz
6uLHnlH3a79mxHfRAYeG75M+zItxEbNGfP/xEVvzfdgg/PcNd8uX5xxLSkwp
mHEtuJjofg3mydDwyZ1yLlOR83kBgwR7pL9g7siG/fOOWTkg73WYHGehLOe0
Tat1WP5fCh0MvevqKus26JHok7ulHXc3KO5NTEl6XeCl3XIuf0jcZWBc+KT4
j4E+VfZ/kDco8okz6hPxe/hZ8Zfl844pmBV6CPyevbWNPzf4nvYd+s7ABvun
e+QsG7nvfXGcPfgGvm/u4/FfRfi0SVdV2bdOuvq/aN7hT18TZaAPzrnM8Abz
sDWR/zvlr2OMOWOm6KHMFfgxNFgxKb/xqfAfVPQHvgAPpC588LKG+B81tXNa
xv4+7ibyv2vgn9iw/E8bdtP8GNPm4IdvphyL/F7WWMjmaB+99Z0qY6qzGqy7
/j5rnPXvVcZmuW+P7sp/Yp2Yc/k/5OzLrA++RJoKetesfQTFrNeQd/gRwDvA
GMEJuXs8NnghcZczIxb3igbHLfHfXchG/ssAbPGqBsdI8f9np+bct1Ny/o83
7rGDKb2bcvz6FrU9KGfMkv8o4n+MuKMOJnNBzhgJ/1e0KWt/6FLVW5hzv/gf
FLDe9l1sy7P/+kT/iQMgHuCtZuexR6nPOX8weGAvtbMSvpbz3azewd/G63dC
bY7LOc6CMuzF+tjn2/tB2hj8jDgzYnLwreILwydGPB8+LHxZYPXQ4Abg1rQP
Fr0+cAZ09sciLpQ4lRLVuUZnY3/xos1ZnyX+j4r/6SJGH7/xMs1zo9pZhu6q
Z0fRk3PGuaHBwG/V7wbRtzb4Xj80fhPqpeI/EMDBUpGPDZEMemnO9635vxbw
bvL5DZ7dpcuvd7Oht2PLXeNe/8yc12WG0kv1fKc+L2zw/ziApfO/LNc1GH/m
/1SWNBh/PjPr/y74Ls7asJzTBerDhqzXaGPWdt23UQacEfyLWBMwP/LBV6eE
PgPf5T9Q2AOXFczTiOMBW9iG9yfN57ED4E3ohPwvBXFL8HRsRexH/K/b3keZ
UWFHjQ59ZkTE5EwP2wy7jBgRYkXmtzqu4OOwi9G5t+neTT778DXOOLFs7Dli
fOaETYb+Rn+nBB8Gg4FfwbeITSHOpF3B/aHPyKOhIatGBxZHfTCCq8MWof/E
NRGnBOYDJkI5ZErbVsvP0ta429zOMZoVzY5j2anZmMOkaJM7B+Bo0GAHYAhv
pj1nl//XvBFPhgxFZo6KfhJzTXw1uNeMwEzoM/JhbJQnjop+EvsBbj0rMMzr
M47RvyFje5U5x59C39EtuGtPzDL2GRgXedMiH1yau9Do5GAlYCavpo2Rzghc
mrLTQ46PCZtqbN66JXYh/QQTARt5Pe12+d8u4nMY4/TQE/ZtdvzGG9qDnXLW
UzvnjDdgF2ETnZazj+30nPGSqaH/ENuEnj1Z6c2NjnG5OON9cPV/zT80ejBj
Yn6wOWbFGJkreMns2D/gNeA2b6QdN03cMlj1wMBKwEmuzvjO2+yM+zIt+vNT
2LxgHOABM2IO0a/nhY59dXyL/oAfjwtfyekRX4lcJl4a/A6M7oq0YwvqiHlJ
+473UO3neWn/L8Bw0Q81+v9JT8l7LyyIfYucwlcBX/oy75jIr5R+nfd/t32T
Nw/4LvQu9O2asIWfbDU/farVcc1fhS3PuaM8thK2OHo2+jt+KHxNdyYcK0gf
2JucVf7fkLijKWGLYzdx1587/+gpvD8oyuwRcwhWxjvynw09hXLoIeQdHOXx
v+Drwuc1u8Ey9Fztk5fTxvTA9tCziBNC72IMXwauy74jH/lB3lfx3YVpxzwQ
+wA2Ckb6pnjRzs2OYatsdgwvNhKxsdv8a0ljStc0WEYPyPlM8g4fDXFs2Cp3
tto2R/fHrsBvRJwcczcx2qFeu1bPX/tW3/kgJhf76+JYU/QEsNbx8d1J4Q/C
/mV+Dox5w27bHteMDwrfE36o/w8WqaC6
         "]], PolygonBox[CompressedData["
1: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
hGqkqpWqhqBagmoyc9H36zK/XcrpKrf7Pz1MG+Y=
         "]]}]}, 
     {RGBColor[0.8672508460704893, 0.8818859309699904, 0.8671614027136784], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHeYVFW2xW8bGgaa2NJQNF3dt0N12dWIIioqiAQVzAED5pzGUWfUGRMK
6qigIgagSSYwkDGOgiAImFAMIwgCijmNPlHE9Ebf+rE2n++P+91Tp04+++yw
9j43Pf2iIy/cJkmS05slybZ6N+aT5KbmSXJqZZIcsX2STOmQJL9ulyQVDUly
j9JdGpw3Vc9LxUlSp98PKb17VZIsr06SO/+UJPspPSPj9LEqs76N656r31Uq
f5/SlXqvTJPkDuUNqHJ7tPuaxjAt4/xjVPfVtknygPLP1+9nSlz3PKWP0n93
6flqO9d9KMbzYIyNdqbo97mdk2Sg5rFTY5J80DFJuun9UOTfrzIX6P1nPQ8r
b0M2Sb7TOmyqS5L5GsM8PY8Ue1y0zTpUtUiSGpV5RnX/tyxJOrdOkt00rqc1
95taJcmTav9ZpW9X+hmlFyk9TukFSj9Y7H6+VzsPq+3RmsfR+j2zjfP5/7fS
JOnbSWMrSpK80nPU99Ea/2daq1vVz9tqZ5bqTlbdM1X+sXqn99caLmWtlHef
xnYibz0b1VeT2ljW1v93qEmS49XOi2rv/mKv0Xcqc4D6mKr0ksTpByL/pGLn
k35Cc7lWc3lUYzivs9eQ+jPa+E177M0YPT+r/NPbe48mJJ5TPz0TW3isjPkC
jaG/ynynZ7HKDNB7o57/Ud0HNcfbVWaw6u+h8hcoPVdzrRfdXKH0U0r31H5O
19zGq04ftb2vnglat3+nXtv+qtc32lyk9pv0/lbPN2p/30g/l3hcjG+p6o5X
ey9qnV7Qc3MX0wr7xW/S0MzX2v//6NmgdDe939f7WT2Xal2LdXZ2UV699i5X
6rF9X54k6xLTzBit3+Hbm5bm6fd7etZDSxrzdNX/TWvbR/9/rf8XKn9+4vYp
x3j3jfEPVTuHKP2T0ndonLM1toP0+5/KP3R7r/9tSh+m9C9KLy7zef5fpceq
r0u1Pn8SLTRo3gU9B2lfTtU4T9FzFONWmX+oTInK7Kl1bFL/u+l8PFrqOnVF
rkd6oNK3qv1b9ExVuTV6D1Zfv6uvl5U+Uun/Kv2m0kcp/Rvp1PvbT23Pbu79
m1jkveobNPCs+stpLXeuMi39R3kL1P6XyvuimdfvUtVNW3ht1zc6fbPKv6n9
+ktnny1o9fw476zltupnmyKfe87/A8ortHD+huAJf4l8aPy8qDtDa3yh0gdu
b5o/L+i/dWvzBcbwelv3NSPONH0MUvnpkaZNxnRB8BzOFueN8zVK+zir2O1z
Jjgb3yr/4mbmc9DY3SozR2UO1n+3KD2z2O1z1vfb3ucduoVvwfegG+ZapOfQ
9qIZPb8HzZGX6LlD5/pY0UrLrjqvSh+ndInSs9jnZqbBvjqPl2u/Jiu9oq15
CvzkJ/HKl/Quzok/qN/H9Uwq8nyn6dmk8XzXxf+doHa7d3aaMnObu/xkpReJ
7go6z5fpDLykvpbp2V19T1P+I3qGiXZ2Vd0nu7gN5rxbM5/NGv3eV/V6NHPb
T0ZfDwVPpcz7+t2g9s/TPv3Y2vOd0TJJRnTxelGG9bw11nRBxv+RT95tkc+8
KEf/jJH/NsWaj4h1p19+s/4bu3j+jIf5MYYrNd8jNKf9Vb+/nsPLvb77ZDzO
jVGetdkY69Ne+7JGc5xZcD8jo68h2s+BavMwlZlTcHq23sNVf2Gx+UOj1qeg
5yXt3R3KX1psnnCn1rStaHFtS6/dScHn12sce+r36cWWA/dvzVf53Tuap03Q
/92bmX/ewzhC1kxV39+ovcGpy+4R5cnjNzzhnFLrBOv0rFZfK/X0VFsztA7T
y81HXlY7Z6v8fuIBdRr7fiXe7zdU9jU9eyi9QGWOU5ln9b6xtdMfqdw3Ja47
SfR1u/LP6eg8zhU0xX7d38FyCnk1QmuyuNg884J2SdJO43pP463nrJe4zni1
c5Xa+Um/F2VMH1voT/T/vOi/ec60cEvQwxOx7+zh7XpGx9mGhqHfK4o8D/77
QeVPbOX/yL+zi3n65u28Rpx5zvuKjNuh3o4qe1iJ12HnZpZD8AfKsZbU/Yva
bKsxX93MvOX2GMMK7c2Zqnu51m2V2rqri/fgtcj/XnMZ08X9/qh2npOs3VF7
tpt4wpSC9/RBvV9V/u7KzzeY98CDntcY3mhrOYrMhC7uDdrYRjT8ktr/vdHz
Y58ZJ/O9K2QYefyHLGNMd8Y6kHdnlIFOkDezW7oca8AaLsz4XLA374dshp9D
p8hk5Cn9v6+6b8LHNI5L9Hu15n2o2txD9XroWa38N6HNWp8bzs9glTtMZXpx
NvQM0fwfVBs9RZ9HKz1F6UvUzqntvb/wt/fUzwY9v2icLaVXv6U216jNYwuW
k5eq/OCCy5yfui/6Yf+Q7ZxB1n9IidMvJ96XsSEDkA8T9b5H+T+1Nt+e2dKy
YuegB2TphGLL0/cyrsv5hkdCb/AZ9nlMtPlCxrxuWdDmqKBP+C9pztCa1LrO
trVua0zQyTdBi8hoaKTnVl6RWna0ki4xLGO+hw63V6wlOnCD2tpRdRdrPbuV
2wbYLPkzrthlJqnNHVUmD89RmRUa9/5tvK8F5TfovSTrstShzXYl1pnPUHqn
cuvc36vNW1T3JNUdqfeYap+9FXrvhszJuI+eGdMD6T1rLZfeTU0f5E/UeHap
siz8vc78Ar4BX921ymdgb52X0yssb0/S3D9QmfZtrPsNyFgGwP8/0rhfUfm1
jZYDyAPmgy6ITvir+t251vP9JHX/jO/vWsNdlD9WZd/NmjZ7Z6y3YScw93ey
tuduVf4hosnRmuvJamcUcy/2fJjLpfrdTfk9gs7ZG/ZjdOwT64nul1Mbg4qc
t3eUKdP+d0D+6ffO5bb9fu7kvegVe9cQOiZ640Xqq159dVJf61rarkNnba93
XRvvW++oS/s7qW696h2o50Sdr/F6/x37SHOvh940x2Fq83jVvUbvfZT/PWdD
e3q9fp+g/Ov0vkvPKUrfqffNek5U+sZW1qubwhb4UePfrOcT9fmdno16LtMa
rJJc+L6ZdU94xW5BG+iwpLFTkN/ji223IiuhffhMk/o4VX2N1buj5pZTuoPe
F2sOt6jOX/WuLZg29tH+ttFZ/kFll7A+oq2HRRvr9X5Hz1SlV+v9pdatQxvr
0tgclMUm6al2nlP6KNHdByo3XeU/1PtrlS9rY/nbRuszS793UF9ftXR59PVP
Ncc/65mn361UZoXm8ZTWdkS587Aldlb7O6idA1R3ldqdovZzovPPWjofPR8Z
eaXO/uMa19ua37+hdeUtUJ3T1ObtavPNjGU5MmxNxnoAvG+52hyrNl+psx2y
U8b0fU6l6qm9l5XfoDGUqq9+am8gPFr/L8t6H3rEXnTXe9eM9+6MFm6T+u1q
LTc6qO7HLd0ONtH+cR5pa/eC1/bg1PvJvqL3gkn0yXh/0ZnQndCvoFPODLTa
TDS3nfbz5BqPB1phTM3U742qNzbrNvbN+IzvFXU5Ky1UZrTKjFeZ5kqPVHpc
1vygT5T/k/JHKb8paz5A+9Bhn9AfGdvOnHXld9O7ROU3YReq/Ica87MltgMn
5EwPR2iO7yt/font0lzBZQ4X/XRXeqHSRyrdqPQC6ir9SUunseu6R1+cw05d
zGcOLbK9jqyF/pH3pIu0Np+3dJvYgX2C1zHuptT8rKXW7TLR/s4a2+4q93ds
BqX3pr/W1mluULmvRBs/Yvu3cDl00HvV1yniDxuUf3mR3x9E+ugG/x6s9wTV
+Unpx0QPX4jeK3TGP9f7QI3zKs1jpdbq/AaXGaj0wcr/r+j5M41/YZnLs6bY
UtlO5u/wDMYFH3lP9d7X8w/1e2yDdbr+amea5MJZ6rul9KajGlzuSL2/VRt3
B07SX7+XK79fg+1K0tiWJ7V3edpcrbnvoTqXKN2zk9NjlT5ObUwuts34qPr6
h+oNkt7xWKSPU5sfqeyHncwfqUf9K/Tfrx09R+Tq69qLUZpLX9Xr3cJzxE6E
L+/VzHjUfK3FrSr7tNbmX0rfoPQTSp/c3rY8OAz6AnoD+gN23PAy8x10Es4V
Z+o51b1bdZ9tNC1xXlmHXiHHkB1gVWBWcxtN89AJMus/WoefO3g/x6Wu26LG
Z4D2wUmY1y8dva/gZdAlNFmlMaadPD/+/zXmTh7/1RR53pWxv1NLnc86HFzq
OthAzIk5ov+hA08OOsS2OD9wsIEa988qf0CjMSzG8Gi9eTz5i1tZl5sUe1eb
8Tq/pXb20rx3Ef33LDEuhMxm7vsHRkD5o7THazSmY/OWld06WUYfp9/rlX9i
3jrw+LDXwJBIgzFdIho7RGvQt4XrUR85O097P055Z6rulXp+VzvX5C2HKYMe
cK1+b7uDZKze55baRuA83dbcbdHO/VXWP04T/74a2dzG+uyj4HWa+zGil3+l
lgNzRQvPpZYDjymd0zrU6dlB9R9T/sHKf0rv/1HdbzoZw3pev49R/gt6z0st
ZxbqPSe17TZb7TygdD+lH0qNQT9dYv26j967ajy99X44tY05U+WnK30AdVPr
i2NjzadkfC7Anrsrfxc9FxZ5rjvHmr8qmu/dxev5otajVxfrXcyV/IOLXI/6
p6rM41qfy/U+UGu4pNT/HVTksvtEO+BD9wauCw4GrwALQ86NiTTle0X7fTu6
Ln1Ck/eE/cW+oxtzpuCbm3V2HtXa9lPfS9X3/nmXaYqzg/7dFOWhPdYBmrlB
5Zpp32/We67O9Zxy88U7tffHdLZOkO/qdH1X6ztlJdZ5eqOfqOze2JH1xum2
kyw6t8HjOSBrXXNc9DUJzFlrvo/W6Rk9YzXuM9TveaKn0Rr7a3Ven12beY7L
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
1f0/Io9kUg==
         "]], PolygonBox[CompressedData["
1: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
x/q3Y/PZ6c5xlevOyPbZ6cx0dsc5n46sVYbzuQB9JvsZhW0vMDoh752YfUs2
lq3fjjlWyaayrWwm29Xn/Iez9xjrnS7uO5MFvFc5Nva4A3t8zNwK/HequHWq
DLwben3oCegfKVdQDlfcOswCLo++OaWcI/6Ntf7DuAZ8F2cyH32fyfRZnWb0
xV77lN8i72XO9x/QE9i0LrTx4PnAj7GnMdh/H/+1SfgN1ls8A5kbY86ZlTs/
D74e/Cvs0wLePPTbAn4Se6/A3m/ir0dznbMqd50G/2ro+VXte/JR+WqLmGuN
J/ivRlXnoMpFn4F/Xcxvot7GyeCrwA8hc2gx55gjM10zqHZQTr4ozz4oX1QO
Wx34CvyXijgHvgpcE5/YBTwbf8oosI7SVT5yHPgMY3UZ58jKlevmuxb5nP/q
Ad+cZ1g1RrGE3yC9RT3R77W4c2blzn/gLx0Uv9GvCvrtRcZGvV8J1wLK2boD
X4yb9zdGW/ibR861lDPmcf5XoN8o6ZxoC/By6M2gbecMf4T/HGM58FP4cwJa
C+XU+M4BRj/wzVnOfb7Xe8d+/wT9GLQTjBGRczjlcsqxlGt1BP8K+AhjiPIP
+SDwHkYv8F0x3129aXrb7ob+MbSdjJ7Qv2I8gi81g/4p9C7g/2I/29G5Prw7
YvZ15bjKdQ/E7XuKCYoNHeH/Hv5t8NeEvzT2y8F+O7HfKsVS/htXwjXqfOBW
2HBnmn22JfAXkWsv3RndnfXgrVWrgP8Efo3xJfC9/LcFWhtkHEL3Q8jvjz8+
AT72NteETwJ3g+dH9EnHn+Zy9m+D74b3ADIuI6sM+uWh3y7+W4N+zZK21UHw
fshrB/4F+JeMwcw9HDlXVQ2iWuQ98A7ocgj8CviymHOJ2qyXi/+uR2Y78ARr
pLBWa+QdTLfO/ZnbKumzvoKOfcA/YX5BEd9x3fXuSddaqrG7JZ3jK9fXHbiW
6xxDuUY29huGvofzXQsp5l6HPjbTsWAvozX2HY+MoegzhHEwco6pXHMZow6+
dhUbnU9xjqlcswc8P6HbXnRorlwB/Rqk+c3S27WC9S+yfhHu2zR4m8dcSw8k
XndHdiPmTMJe25nfOGmby/ay2TuR96y9H4beFvqzMed+ytmUuw2ITJPNZDud
ic5mP3jLpHN45fLKEZUrXmX/I9Dve/Zwjb08hbz0Es75lPudUf6i/gf//a61
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
xcAlSe9Re5XPDdK3x7i/dekbpb5V/g/RbLIY
         "]]}]}, 
     {RGBColor[0.9215696514905469, 0.8999998052017539, 0.8428266265623464], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHd8lWWWx+9F3nsJJAFCSyDccG8IcUhwxkLvNsAOiCKIYgMso7PO7Nql
6YxT3d3Z2R27KCBFEWwzCgoWLBQLjqI0FUXsgAg20P19c3754B/v5zn3yfM+
9Tzn/E55kz/3slGXNkmlUv0zqdRBKt9UOUXPl6ILFanUsE6p1Ev6vSRJpf6o
p086lfpF11Tq+9JUqonKbIegF7dIpYrV/hi1b6FyfjaVOkvPH/TOHJWn6fmt
6Pbqa6XKf9czT3Vn6vk99XrnWL3bTuUD+v07PUdorHLXr9R7C9R2Yjbm8X9F
qdQQ1T+k+kEqB5tu3izo09XmKJVH6jkoiXKoadoPMX1/EvM6XGOVev7PqJ+F
GudcPX/S3x5Kouybjr4Huf+5+vvYbMx1cRJr7a027fT+PaJbit4m+l7Tj4ou
1vzG63drjVUmerLofxb0W/RuldmKoC9Q/SP63Ur0lyrL9HuWnhL100b93G36
H6JL1GaCfi/Sc5Oenqr/tiSVGl4c430n+sTiaHeb/j7Qa79Pcx+XjXceTOIc
eundY9W2V8uY7/Gi+7SMcfapn9P1u6X6eVy/S1WerXe+V/2o4vi9NBN/P0f1
+8tj/ud5zEEelzlwFtvFYysq42zOUF0nvbtK5VQ9taIfVvkXPR1Fv6TyOj1f
ix6o58+iK1WuVjmd/Ye/stF+cpX4o1UqtaYmlbpQ9K2iXxFdrvYv6O9X6akQ
/aLKa3jymrPmf63Kvaof4v6v07sP691P9e6hPse2SYzfQmOVp6NtcTbmOtR0
f9U/kAs+Okp35Oq6VCqje/Lz+pjnzWp7ltpcpf4fUP/b1P81oheL/kh0Tu+t
UZuZesr1/h54VP1ViN7LOYkuiF6sdnfl4i4c5b3t4jtbpbKD/v686q7Q01S/
j1b9ctU1MZ1WeWQ27nup2nyu32+LbsXdUf2FnKXvDv0/zHq0Tz3FD4+IHqF1
VYg+U/v2je5/x5bR/nvRnVpGPzVd4705mucPqq9U/X6V1apfwj1RfdeucXfv
Fd0mibtTqv05tS76maT+d+qdDqJ3qNzTIsZlzkepTbno09XmyxZBl6j+5LqY
zzmqb5uJu0Ofywpx775S+U1JrKeFfldqfZ3ZE7Xbm43f0B9aRrCHu9XPv/Rc
K/otldPgTT13q4+t3A29t1TvbRZ9RPMot+jZKj7fqPYz4PEkZOz18KCenaLX
6bla9HcqZ3usGZVxZz7Uuz1V3qq6baI76YzaaL4X+k5xl2jTIhNtoF/UPF7Q
c7yeVXpe0nOinjV6Vus5Wc/LetbqGamnOBP9cB9/VZ1KnaJ9+o/OsYZNmn+i
378rjrUg56nb7HVt1rs3cBe5d5pPTs8TSZSdTXd2PXw8TbxaZbpaZd77fHVJ
yBFkCO2rXM/fu/zkXKDZh2mV8bfTVL9Pd6u7dND7ev/KkpB9yL2LWkYdc19b
Emf0GvczG2tg/j01/yvVR5nW+KrqX9EzWs/pWv97+vsw3dldhdAr81ReVRLy
FFnK+AXP4YqS4Cd4aafaFam8V2WzstjvU9X/CfWek+rP0jt36WmRjj5oTz+3
54Omj/6dYlx0TbXm+apldDfRr1snHZYJnYpsmpiEXihOh+zvrbEe09+66nnN
+umufPTJmsoyMQfa18CHSejW/Z1iHcjkKZ3iXNuqv2l6t5nq93bTnNX+Feub
P2h9H5l3j8iE3IH+o+o/5e4n8f7kn/AGNH0tV1+3tpZ87RHy82bL/Eu5T5r/
ZJVDu4bcmif5cKToFehn0SsKcRf2qMyr7uUkdHGt2jyp3/epTYnK21X3kc7y
a5V3mG6ZCfpj0U9VRhv4/xuVd7q+i9qsTQIfbNT8b9JY9enQgQM1t2X6+xjR
A1qG3kMH9hf9hOjH2qRSh6jtSD1Haz7Pqu7BXOgD9ML9oo8V/Tx6TnTrTIz7
icY9pmvgncWqr5cOPVn3sIf6OUX992sZuhd93lf0P0U/oT06VfQY7fewroHX
HtG7n8Mz5m/012Hmk+2Z+I0uQ2YgO8aqXGoaGbJQdDYT9/pCnfs+3fvRdSEn
kBfjVC4zzb4NZ2w9RZrnMyqPNU2/0M3SIf/os0M6MN72JLDKApWZTMjGvp1C
9jGH5Sq/qozz6af6mZXx9xvV32Y9E/TubreBV9FJu00PdD/cnfM1/281/xPr
oi/aNE3izOGPM1U+aRremJIPHXZKXWCEj4wTwLX7ksBmN2v8H9W+neawWuVF
Segd9O6qTMhn+A2slySBfQYaNy4ohLzo1jX0fEp99UsHhoC+MYk17fban7ce
Qi8s8nzAaWs0zsVJ6MFfJqFvd6uLb5PAZdkk8A77DOZB33+fBB77LgmM1iwJ
ngc/ZpLQdYwF9q4QD5fruVS/T7IO+Xk6MPoLmcCua1VekoTeP8844DjjnaRD
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
A50DuUw=
         "]], PolygonBox[CompressedData["
1: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
OeXe/0eV/AM=
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1FlQ1lUcxvGjTcsktqGONtOiKDilVhdqKpoIgghWorlnipbrqFdlapNi
+7R4YTdJCbiwCi+roghZtqddWbnQZiratLm13NTnXDx8/8/z+/3Oe855/7z9
C1cXrOoWQjjkz4U7Q/i0fwgdQ0Jo8dxzYAgr+C5+JWbfHUJDWgj1lKCRfOo9
IXQbEMJ/errjMn3T7g1hOU7Hp7AAl+KjuASn4oI7QngYF/NT8El8BBdiPi7C
yViIefiE/kmRfE6cx1ycF/eF8zELH8eJ0eufgHP4DJyLmTgTx+NsHIez8KE4
p3+gswx3phQcgYOid65DztWOze4kx5004UH+ffmVWKMDfIM8W70R2/gO+e0p
enE/Xy+fqJ7AVr5NfjnWaC9fK89Sr8N9/AF5P/Ot2MLvkWeq12Azv09+Kdao
ka+ST1CvxiZ+r7yv+WZs4CvlGeoVWM83yS/GWarjd8vT1MsxwX/ibnqb38J/
5Plf2cf4AR2mf/gPcZ67q7dG8lCfgx2yQ/R3vCN8K94X/sW3435qo6vxjDjX
fJ2528wn4l3IWulKPCO+Gc+Ll+N7iQ3URJf4Rpxjfo+5W83XxrPI6umiegLf
ML8H/4x3jFVUQ3/w1TjbfLW5W8zXYLmskn5Xr8DXze/C3+IdYRntpF/5HTjL
fKW5m81XYao7HES7zJWq93KHJXGGHyjfgdvjfvRWUCmfIi/D9+TJ+t/FEn6A
fDsWx/3q3UGv8P3kr2KR/Cb9m/Blvq/8JdwY7zfVHfo/Pc8Pt7cOzy96TtIz
Q32M934spdM473uxtXvq24bj9Lygd7czlvFdnjebKedf89xHfT2/gXbJNsf/
Dfsowp18qZmzaid95inqpLHydDqmZzLmUS6d05uPpyOte8bc/didrqHj/Dp7
vE/PMNqqb6w1Zrr3HH4SZVOn/Dqa7AzX4nz7uR4DfwNujWek8fGM8bdrsO/+
LvP2VmH98dasjL855nror/KchIv5RbTa5w01s8DMEFyIpdbJsF4JDpMVynKt
V2u2juopQaviPPWyXqG9rrHWGv5pHGnuQRpBo2kUPSP/fFAIX9BntMS6X+KN
1j6KS/kjuAy/wiR5D6q0j6l+t5bL8/gCz9OoSj7Guivk+fLpsseoWp4uXymf
Ip8hy4x3i0fs9Si9TQe9S+102PfRgQ84c5a+42qZzpNF7zhnMW2jE76zUXpH
01U9a52nxdzzmGZ2MKXS1/Z+jL6lb2ij+gk8Scepk07RJvn3+AN9Rz/Rj1Qk
T7bvnz2vdYbT+CyewV7yc7iOP4vrsQt7yy/gBv48Poe/YB/5/3VgKhQ=
         "]]},
       "225"],
      Annotation[#, 225, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1Vdw1VUUxeFDJyEMTaUlgdDS6EnoUkILRVB6FQlVmg8EFRBUiooUUQdS
sIxiGwVn1BlHaRZ6R0WqOEh1fFOxguB3Htb87lp773POv9x70wofGTavXAgh
uXwIZSkhPJsRwnO0gp6hlVQqX4bL6Ul6mp6iEvkSXEqL6AlaTMXyF5uGsBbn
tAyhbZMQ1vMv0IXsEAakhvADjk4PYZb+h2l2VggF8lk4Sj5TNiPW+P7ymThS
Pl02Ldb47Y15nEYj1NY1CmGq2jb5VNkUGi5fK58i/1xeKJtMw+Rr5J/JZjvj
Gmct1LNa9hA+j5Ojl0/CVfzEeG/wwViXj8cJNIbG0djYJx+Fo2k4jaQRcU6+
wvUvxRn2S3dPlvPL6JB70dc1HsShzvWYPQaa+cTZxjvrOBoif1Q+QP6RfIzs
YxyLC+T95UVYgEvs0Rf7UT71od7x+cgX228BTnWGFGdYxC+kHfbeSdtpGw2M
99p679ljit4iM3nx3svaYy7l0Hz5XPPzcLK+OtZ83cwcWS2ft1irNm7FSWYz
zWRTFs2NM/qm4wSzifrKzCbgeH6afKJ6IeY7Ty/qSUOts07fj3rWYoq1Uqkh
DVBLjvdbfkF9FVa2Rr771Jt+bRHCb/Q7HU0L4XHnOoYL8c14/Z7DTf622Vt4
ib+m9zr9THn2z5XlYhW+alyreQh/0A26qJbjDGXm83zubP82dC5+D3CH7JTZ
AT5fxHN8u2YhnMdL/E+00jlWUIJzb3SG981uUK+srwV/Ob4/2Msax3E3v1M9
Q30X7uFPyBPNF+MH/EZ5FfUM/gqfifnmv8G9/Bfqmepf4j7+W3k18yW4hS+W
V1XP4q/y2djb/He4n/9KPUv9azzAn5QnmS/FrXyJPEG9JX+Nb4V9zH+PB/nd
6tnqe/AQf0pe3XwZfsiXyhPVW/PX+TbY1/xh78phfq96gfo+PMIfkX/qXqZ7
5hl0xOfDVKbeWN8mPMYfpQXudRHVst9p6x41v1896FtvnWqt/J5hF/u9i6+o
pam9ipv01zZ3Bo+ZOyArp/aSviRzL2NXc3e8G+2wrrO0xz/54/Y+o/eMuVzv
TIL3Nnifupkrh/diN73dsTzfFXP4etbIjd99/i/rnLDOWWuctVY1ayRRdUqk
CuZ66KuIHfV1oEo+V6a/zf5L/9Brzn0uvof0Dr2h3tZcB/l81zbS/RlF5aki
VaC75DX01qSrrrOi+9BRf5F8tPoYqkbVKYnultfSW5uu6a+kv5P+sfG7Z7/N
dNNZzruWy/IbznoFk11vCtWnhtSABvtNqBmfGdWgOvF3hrrZoy7Wi+eje+K+
dJ/+RuYaUyo1oTRabf3/7HmbbsXvsTPcoCH6N2IxbaBSKonPxPrJ1kuh+tSQ
GsTf7bg+NqZU6qEvDbtjM+yFTbAnNsX79bfA3nxz7IPpmI9Z2A8z4v8CZuID
+ltiAZ8d/0OxFfbHtjgIW8ffbWyDw/S3j9fNt8MhmIODsUPcH3PjuTEPh+vv
FOf4jtFj57gvlrnukdiFH4Fv4du0me7E87qPPeJvm+e1k3bRIH6p2i+e5ZL4
TDzz0+71Sf56/A77/D/yGDeN
         "]]},
       "200"],
      Annotation[#, 200, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1Vdsl1UYx/HDUNALhjIMtOyp0IIILR2AIkPKKCQaRZZQNrZAgbaUVWZU
HLRACx1Qyhb0QqEME5UEKOiNQsSAYQVMUETFvcDPe/HN931+5zznnPf9H0rb
yVljMmuFEDrXDuHbViE07hLCI2iARmiIVU+E8JWxK51DuIyV6gKsbhPCuE4h
TMB49GsdQnmHEFJ5R8cQ7sgqOUVdKk/m7eof5Ns4Sb1F3pcr1Lfl5ZyoLpYn
cJn6e3kp91Fvkvfmreq98inO8UbbEGqc6wzO4q56Vzvv0D2EnTxAz2Xnv9DN
e6hver5hzjn1ec9Njeepb6kX8zDvddw6x3AUqequj4dwz9hY++VytfwImuhd
qN7tLDm8kxdF+/N3uIWhzpEka6A3mTfKEriI+/IGTuRCHhIbwkPm9VbX5z78
MD/J9fgpfoB78YM82Px7znYf/6GWLKCn8X/U/+JP/I2/MMj8X/k3/II/8Dt6
mP8z38Ud/IQf8az5qdwPKRiA/sj3TVK9+2J+vr1zYpTzd/U9473vSM9Fxmf4
naZjhLqLsThjwz0XGpssfwVp6hLfvhhxvunbfqPunhs7U6x5r/Nofo1jeD1f
Necxa13hFNkxa5/Qc1Zdbb271o1ztmbO2p0TUWW8wLy67nQrd6g2x3IdHmr8
fXu/h6Z6uqmTrH9IvUJPLXNizL2vbslBPcScg+oDeFRPE3zo+QMs1xPrm7TC
dWeK4ZYYjnxj9fiavDk3wzJZjbqpPc/wSZxGE/UpTjNnsTk7vMNW9RaM8t7p
qG9sqbH+nhMjzOmLBCQjCR18s46o9Jxn7gg9ubxdXWKt9sauR3dGfY3bGd/I
t9WbuG2UYZs6R98w44u4Ivrd9Lcxlu3eFfE8LuT5/Dln8TucyRt4Lrfi1ijX
v9A6z1lvAZepN1sv1tgc817FTMzGLORgKqYhAzMwHS2ju4FS/dnWGWq9+bzU
2BX5Er7K8b5PHL4wdtw9+QhHcAxHkWzsvN/vHL7ECWf5GheiO6nuhm/Mu4SL
yHMHku2VhGf8W3nJ/qtkddS97DFQ1txdGejOJOlNRgrS5C2ieydPVfdDf7wg
H6v3ZdS1527nrsN7eJysyNrD3LPhSMOL+gfpG4whyNA/ybzZPNFZGuqt0NOI
J6nnyGdH34Z72L8n4pFhnWp7HMEhtDD/MC+K7q3no55jOFedE91F/U/rm69v
AGfzaXNqcBIdzT3Fy81dgU7qafbP11egXsOj9KVjJNboH81r5TPNO+zMa2Xp
3mmi95yEatkYc9ZFc+UXo79/vvElXm/NNxFvn1n611nnreh7cZaeuciMzot5
2ChfwJuslc2beWFUyzP1f2yvYtk4+2TZey4+kS0yp0Q+Xj5PNh+fynPkW+QT
5NnR7+NcCzhXnoeJ8hvOOUJ+k0udrQwJzpsV3Xn7lquruCg6Hwqjc0Vnwk55
SbQHilGKrdgV9XEFyrDdGbbxbnklV0b/5/KO6P9k3iPfyVXqqmhd3sV75Xui
9dS7o37Oc/7F0TvglHfcG/XLJ3uXfNkSnJbvi/rlU+RLZctQI98v3yfPiP4e
ylbgjPxd+X75VHmBbCXOylfxAWMHMc3YanW67/WZsf8BMLtVTg==
         "]]},
       "175"],
      Annotation[#, 175, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1Gdsl1UYhvEDapQYFCGyEjugDLtYAiKJiCOyQSgUMDIFoaVFhhoUC4FG
ZbSlUA0QwRElIBFQSQRBZBQV2XuPliFDVPygggx/58OV+zz3M854/23ysLG9
86uEEKpXDWHDIyH81TSE8sQQ/qRb6DX6Pf8Pull8lW6iv9P1/N/oRvFl+gO9
QtfxL9EN4l9jP71Iv+OfpxdQiXM4i7X8M7QCJ3Eap7CGf5yewBEcw1F8y1/Z
MIRV6NQghH/TQnierhD/Y52VEMLfdGyTEHap34nS1BD68OfQfP4O3naUiHvz
i2ke/xfeNhSJDySFMJvOwhi51e7xs9x+/kzeDOTyv+H/xN/Hf4f3Ht7F1/yt
/K/oj3SVc5dHFW+mK+mWqPxNdIV4Q3zP+JYx5q+P7xffKL5rfEN8yV/irp/S
iekhdHD3z8Wf4Yp793Sfy3Sos31kZqmerc72hjO9jiH8xfxy3gT9n5gzR80i
XlF8ExTjY/4CMxeijT3OmtmazhdXWne1TwV90bwyvXnxrGbm2WMDzafz+Ln8
uXRMVDNn6S+ko+ydad5M8QwcNitDfIgexREU6uumbzrtHlVfgdpJdIT+FPWr
7FWutqF1DWd5CDUxUd1rqMdfLV+XjhdPQB3re9Xch2rI4VWhAXcah/CA/HI9
i8yubj3IXjn2HKxuOO3g7s+qfQbZztbZXeeq7URL6bpGIfTgJztzA+SZOQbP
yfc3YwCCuQPN7WteP3EX2t7cdmY+jtr6HkZHfkt+VTXTzO6v5yleO3E7826p
vY2bqG/PV9RkqWmiJkHfCPEJ8Ui6TZye4ndOjyfzcdE5TtIM/mlsl2ujfgc9
YuZhnJJ/y3s8aM/u5hySPyrf0/oIPSjuZn3JrCK1pbwEs+bGvy1xDX0ldJm6
Ml6i3Dy6VLxEz2Xsjoh38jvL76J7xHv4ifr30X0x5neR3033ivfyr+AcKsW1
7dNDvg69h2ZnhHA3PYSDOIC6cnN8j1u0pjdMc/al7rkM/dR/QXvxltNx9qmv
rh5u4JY9rtNkZzpuzzrqT9AtKMdG+TXxTfSupS3l0+y1iZ9OUzHK7Az9VX2v
ts5zXd8NjOZn8u/id+X/x7uJnFivr4nfVVNMkssUl5mZaI9m1pn8ZnhTrrn4
fbkkuRbWV513lu9XhNk4we9jnyzkmr1Lze54Nr+ZYvlW8Tcef2d4Ek+jI/Y7
y0HUdqcD8XdjzlD1wzAIQzAYj+lPVJOEBAxyrpcwBIPRWn44fRmTnXckTfFe
I2gbuZPOMto60TsUyCfRHPEpfi5NFk/lN4j/V8Sn+Xm0oXgaP4Xmi8/wx9JG
4kJ+Y/qq+Cz/Cd+9PSqts92tIr6v/P3qbrvbHUz2Nm29UVN+LX6I/yfwNr/A
PafE/1XOfQz7vcVU8XjzJ2AcHtU3kVbIVTO/h75z5pzHBVzzXYr5NWkRrUVL
aIG6SfpS9Zep68V7AVPivvw0/gf83rxm9k6N39N6ulwh5stliZvLpcn1tZ7B
n4mFcv3ELeTS5bKti/jF+FCuv7ilXIbcAOsS/hwslhsoXhD/b8u1UvM/6Z9a
PQ==
         "]]},
       "150"],
      Annotation[#, 150, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0jdMlVEYh/FDsfdBN6Qo9V5QigxGxRijcTFRYx0cwChq1GBije4mshiN
SkCwgA2IiYoCGhWuFSyAILpYVhMXywK2H8PD/7zP977nnI/vppbuWb07LoQw
w583SSEUZYcwD/koRAFe83PkXESRh1y84nNkBJnIRhZe8ukyA2mYjVno5lNk
KpKQjJno4mOzQngij0ZD2JQWQqe6A4kj9cwQEuThzBCm6Z+KhpwQNvL18hA/
hZuMS+oN/EV5kJ/ETcQF9ZeUEM7LOhzw7GVyCBM8+8zXcuewn+/mx/Of+Bqu
Gvv4Lv4jd8RdHrvrOD0vuDHyuRwrY/xo+UydKJ/KUbKTj5cJ+JcVQpwM6OD/
qP9iCL8xjEf8Pe9/Rx523ir/k3Z1G/5EQljnHX/Lve513xmDZj642yl3PYkK
/h7/jh/kP9vjvWzn+rk2OSBb7P9Wtqp7ZB96cZtvdlaT3G92mfOb1I346dxf
+IHv2OGsZvOt5nqc8Ul/r2ziWri7uINGe10yXyf36llkz4vqC1hgHZ8bwkJZ
Y+64/mpZKWv1n9FzQu4yV6Tnvv1PcwXWceYKZQs34D5R634Zkcf09FrnWPfI
t+jDDb0xmTbyW5Op8qjeR9bJ1g9liuyQV/RWeDbae47CDP4Wf5m/KaerE/hE
VLhjud7tcolv9HB2CA+w2bvE0n3bDN8ZVWY3uPdK32qdZ+nec60s5vZ4vpxf
hjYz7WjFTn4HlvLrnbHNuhxbUWm/xVwJVjh7vrMbnXsd18xeRQmfzzdw9aji
zqKAz+Qj7p+DYQwhg0/iy+xd7MwtMmr/CPLUa9S5ci7moMyepfhm5quc7F6T
8B/spbIw
         "]], LineBox[CompressedData["
1:eJwV0rlzzVEYxvHXjASVZUYhGeFmX5GE5CaWaJihkUSiQGUYDUllGZGJMFlE
xi6oUGrsemb8AWh0FBIk997chEbH51d85znv87y/c8575pc61t/dtyQiviBf
GvG+MuIrfUcLqiMK8a8sYtOGiDSd4U9WRDSor5dH1NNr6mn+jvURY9Y1VRHj
dFI+SkewXTZMq2WX6YTsEh1Cu+wirZIN0nHZAL2ANtk5eh5ncBaphogylCIt
n6qLuI97eIgHWEhF3KF3cRO3cQut+p+563Mcdc4RHEb/xogm8zWiQ1ZeYkb7
77Iele937j7sVJfJpurNaz0i28vv0bsnmZNXKq80S7v1Fflufkcyizolq5Cl
rYdlK7xfm6zP+a28Fgzxl/Ob+af523hbMchfxm/in+I385owwC/kf7Tuda9P
NF1rP3y2btRfID+pbyndon7Jv+E98t5pxn1+4Cea9UzT7wnW8/IXerP+iRwy
6qu+y9IJ+ouO0zk6SmfpGK3xzsXepN5ZRbQh+S9Qh9rkP5Bv9tYltNc5PThk
pi5eJ946c623qvHtG+sT8kUsYLV6DVZhJY4n99SbT/axR9bcOcwigzk8cadv
ehbMtYg/+I0Pvn8ke4yceh55tNgrSzOYw19zvdZ70PsWu/M698rp6VbP00zS
jwPqLnSiSN9T37zCf7Pmhuo=
         "]]},
       "125"],
      Annotation[#, 125, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0ldsj1EYx/FTiS1c2ltpccGFxCy1SUSDakuX3SJGrEgrRqnbuiAIidht
bdVKUEIEF9SeNaOtPe6UEJ/34tvfe77neZ5z3n/frrOXTlkSE0Lo4k/bjiFc
7RnCNdT1COEjPqBv7xCacy3QIzaEnohFvPWA7iFkqclEBtZ0CeFvNzWdQuhv
3nZ1O7Df3gH04xP4ofp+6P+ObL5QXwI3DInOy+Zn4aTe0ziFXOtzshxn9Ezq
HEKF5yK9lXKqdTk/Ta5Wu5NfJetx1X4Gf8H+RVzCPz7HXeY5cz4OqV/PHZQb
ZC6X5C4FnjdjeJw7Yrk5lX1C6OQ9W/YKoRXy1Z7QV8XH87dlnLwjt9ors5du
ViYysM2MVH1pmIGi6LdSt0cu6xvCYL3X9AyRy6338vvsl8hV1nfslZqRq/eL
M77iO76hWN1ofT88j5E/ZZX6Ev6s/rX6H1tX6F+mv95+sv/Lb1muZrKeP56T
5HnrClzWl6evWt91fSv07fQeu/CS2y1/+W3qsdJeUJtiZoys1J9qVgPPafJK
NA83zWwTH8I981rL+7KtvMVvUFtj7gMuz7zD5h9BLddOzUM+nz/KzXROsWzP
d8A6vqH+dL6RvBF9o85t7Dlb3orOxkPnDFI/GAMxFEPwiE+QT50xTD6Tw+Vj
PlE+tx4hX8iR8glfYPZHd6vmNjq/xH1K8YkbpeYlv4k/xh3HZ340/4ov4E9w
J3EapzDG3lhstncm+ma8y1k5jhuPLXxZ9D3x5+QEbiIK+SbuksU3jb4T77nA
OzfznCPvWleh2p2nqU/GVKRgenRPPk3OQCrSMTO6J58ps5CBWcjGa36OnIvZ
mI95eMPnyPfeb4Gsib5V+ZZfJGutF8o6uVi+4/8D8IzCfQ==
         "]], LineBox[CompressedData["
1:eJwVkUkvA2Ech3+udrpwUDq2SpeEppbYoq2lwrRUpOXoIESoKp9BBCdnvoGP
YbnbrpYPgBa1RTxzePLM/3kn77wzYyxlkhslkg6gwSWdtUtzrdK8W0q0SHFw
0Qu0N8jDc6P0js+5t4hfmD/wK/7El/QLCHqlLsjTg/RiM+uQYu8v5gJ9Gdu4
1w5p+rf1HPoKdtCO/JKT2cn1D+0XVqGO2RvArNVz7eGcHbDIHinW07AAnTQf
5+9uk3ogBH3QC376AB6EfhiGIQjQwzgCa+wxig2PFMXXPOsKJrgubZLWWS/D
MeYb+hQuZ87QK/A08y3dxJXMWXoVjjPf0RO4mjlHr8FhWpZ3GMGbeIb1Wvou
6xFaFLbos3Qbfc86H20McvQk3U7fp49b54Rt65vQHfRDeow2CTv0U/xkSPf0
B3iEP75ZyPo/dNP6H/jEJx1DnP9hgpt7/gHBqVGo
         "]]},
       "100"],
      Annotation[#, 100, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0Mkuw1EYhvGv5mnFRqs6aptUsaheghswNBGEWEpTItwUbsS0scIVsLFr
a+bXxZP3fM/7Pz2nJ394vN5OREQL2fmI63JEcyFiOxdRLkaUkON/uT/8IFHy
MfL8je8HrTuZiAHZlUPylh+RPfOwfJej8p6/w2o1oo4P/shvJrkUdpw75rtP
vsXPcWns8uP8F9/m57kM9vgJ/ps/4bNcoRIxa85ZT+qmcKrLm4u6pK5gPc3P
4ExXNC8uuYNuwTrJp3CuK5lrujld2brqTRruvu/sivlArnJ1LHuTTfu2sIFm
n5r72p/Giv7Rnidc4Ap1/rL/JvLBGd28/2NPT3bQcIdX937BcyFiTfcm/wFP
ODoo
         "]], LineBox[CompressedData["
1:eJwV00dsj3Ecx/FfY1ysqxGrrc2Bg3GQaK1DB/4xDkqiOi72FrOlSosWNeJC
SHAhEcSsUaNGi5ihYo/S2qN1kHg9h0/fz/f9/T3f3+95/k+7Zs6OzYoLIfTz
52+XEHI7hXC3dwg7eoSwq1cIO+WOOoe/jdv5Hdx2qVZn81VYxpdx2+SWOou/
idv4rdwWua6+IZVyTbbq/e0cQqleo72vcldkC9/Il/AN/GWuQkr5Bn4z/4e/
xF2UEv4Pv4n/xQ/vF8Jv/M0VRw434peOIRThT/V6/IEb8DNfiN/VBfgN12E9
vxa/qvNwjeRLHb8KV8tyWSkr5BNfkxDCM5kfH0KbviHMw6fq1q6neyetcJPz
LrV+iVxw/kz+PG7kF3OL5Jy6XM7KGSnWq3OOhdE5Pdtp7pQU8Z/4b1yh2R+c
YYE1H7l5WIvz8T0/B+fKTJkts+Qd/9D5aqJndf9M532gvi8t1dOcrQVusM8b
s2LR+7JXsnf8BV9zY7lXOA6fmjMGX6pTMV3S5AlfHc3FfPNy7FPr/iouy3W6
edn42H0DrX+Eg/Ce9desqYzeufumWvM2+la4DNdp7puCNdwkbK6eiOX64zFV
PQEf6qdjM3UantBPwRR1KlZH3w02VSfjIf1h2ESdhBX6e7hO3kNHGcJ97BPC
7ugb6ul3iNLdtcyI/h+sfaH/Up5Lf+vXcQXSwf3tpZ1U6d2SfHNSzMjDwfYs
MOewPR9087txQ/Xuu87n82SMPXLNWu56n3XLcD+O5EZIrveV5Lc7k+hbkQwz
eppx0YxGa09xJ+WExPTK+Qb+uPqYHJVUPovLlulSbP4R60bzh/VHRVQX8gcx
WX2IT8ID6jx+Jw5Q7+X7Y5l6CZ+B7aL/fb4tTlZn8gkYp17MB4xXx/hEz1Tv
ef5hHSZgzJr/lybWrQ==
         "]]},
       "75"],
      Annotation[#, 75, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{8286, 9042, 9001, 7458, 9486, 9487, 9485, 9489, 9488, 7459, 
         9493, 9494, 9492, 9496, 9495, 7460, 9500, 9501, 9499, 7933, 9502, 
         9895, 11100, 8581, 10178, 10179, 10180, 9243, 10183, 10182, 10181, 
         8582, 11101, 8649, 11126, 8650, 9436, 9437, 9438, 9230, 11315, 8863, 
         11314, 8864, 11316, 8256, 9030, 7804, 8562, 8561, 8584, 11499, 8583, 
         8651}], LineBox[CompressedData["
1:eJwV01lsFlUYh/G37DstohEFWoSigkQvJRETFRNjQiAsCYR4AdwIaJewpEJk
uRA17BjBUhaRpVAKlLZsWoEiLViU0rII4kLQCASwEXCB1pbfXDzfc97/mfPO
mTPz9ZucPTorJSJG+mndL+L1IRFtuEdGxLlnI9L4PKf0jTjLqeo67s71HPIz
3E19mrtyLbf0ifieu6hPcWf+jpvlNdxJfZI78rf8v/wEd1Af52pUoUl+jL/B
EVTiKBrlX/NhfIkKfIUH8oN8CPtwAPtxX367f8R/vOy5iAVPRdxS30S6errn
6Msbno4od30Zfh4UMU3+E6+Xl8r24kf1ZVzCRawz196+S5JzcnY/yC6gQN5O
vic5J/l52TmslbeVt2Cpe/5rT7td00ZdzK15F/8j38mt1Nu5CDvwt3wbF2Iz
tmIL7slveJ67vETfuZ7xuvoa+qinepbenO/+KXp+kZw7n7WnenwmD3UTFrvu
jj6bkneZHrExeXf8Of8l/03P3/Geezzp2jy+qn7C+G336cVr9GuypiB5L3oO
9201cqMsP8l4LTfo96u1VzBbn57WzuJf1D2MH0EaUrFMzz+tu6vPx+ob1l5K
9sKL1LnWNZi7KMs2HuWeOcm7lr3DHdTTud78VB6pnsbXzE/h9urJXGP+FCYZ
L9S3Tv/j6mqep54oP2Mfj9p/LT/Ga5zhalS4rmVwxGjXNPMYLpeVodT6POvf
lO23rvYZ3ykPdd/FA/1H7OMDPcrk5ShBKfZilnxD8j71vI4/8KI+n8hWYbne
vZ1P3QB7Qy1W6N2QGfG4fJH+H+FDLJDXmJ/Pt80XJ/9nzlZXy7O4Tj3Pte/j
hPFJVJqr5rc8QxXPMTfA3schE03qSvkRzDSegRH2/Zr95Rp/6j45vJpflb2S
nLF9v+ybKdF7D8qsLcVY+Uvy3bJi7JQV4Q35UPkOWSG2yDZjmPx5+SbZRqyS
rcQL8kz5StlyTJCNR2ZyXvI82WxkyNKTs5JnOK90TJKn+u8usefuvJ6zuIDf
5XU8nx8CZxHxFg==
         "]]},
       "50"],
      Annotation[#, 50, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1ElQl3Ucx/GfKLIouICCpsKffdHRTh3rUDrqjBN6g0OphzokOI6T5YJb
JFlJ2TQeTNxzmmlqdJq8dLDSUcd0REdxRyCRDJF9McFez+Hj+/m+v7/1ef4Y
W1W1vHJMCGGTf9LnhDClJISS7BAmYTFOxjQ+FYvUE7EQU3AqPwEL1EmYj8k4
hU/EPPV4zMUEnMzHY446DsfJWJnEBxwjI8UhvJRRSeX/wxcyJM9lWFL4ARyU
XumXPpkYjc81XvbkhDB3bghf4nN1qee1+iV4ojCEHuO7pd2eVfxj/J7v4p5J
m7qSf4TH+U7uqfytTo2F0Iotckwv5j4d0bn4Zu6hHOWz+X/5Cfyiec6HWdw/
3Bx8EvXs0Y6z1W04Cx9jcrQ3vqJuifaVVkniH2Kz3JcmeSCJ/LB7JuBed/zC
vYfUg1KsXsMX4RHnmmnNe9EeztPkrA/kMD8j+o7c18aNN/6uMZncbczAOxjP
91tzQD63R6Gxu7FPXeD5A/18PGS96ebcMifBmgvdPxGncTe5dGzEccb3mNsr
n1knz9xa7FbneM6VmGTLQWumRb8p63ylHmtul3FxWKfeZV683jOuxvMKe36K
cdwnmKzeiZ3623G5egeOWnMrJqmr8Yn+ZixTb8E29SPpmu2u9tnIjWSF8J3z
18sBafAOm42Zrp8h02SDcZnYY/37eu3m16rX80/N32heB27C0+b/KjeNa5RK
Y2qMbTWnQX0L33XPWu9glzSZt9S8q/w29Vaplht8q/2azW3BdGOucFPxMqbh
Hf5bew0U+X1Ir/RLn+zlT9rvlCx2hg3WOWmPE+ofsMwZ3rfPe/Kz8T/Jfn4Z
fz0vhGvSne9dyR5+CX+Fuyx19u/kM8z9S31JLko138Gn8BfU5+WcrOGv8nH8
n+o/5Iys5s/yIwXOJx/LR1LBFzpPOb7m263j9rnrb8aWcXl6b2MuVurV6f2i
t5TL5pZgFq7S2633o95b3AzuTczEd/Rq9I7rvcGlc69H7xUr9LbpfaO3gEvk
5mNCtLbeh3rl0f254ejvA4ewSG+lXkzvpfc1yI1G/8dhsl6pb1KmX++5ym+5
0Ts46LncHQ/hWu5V36ne91qAB3CmMb+bf0YqSv3+jVlsfIP6tLX/B4X790I=

         "]]},
       "25"],
      Annotation[#, 25, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{0, 1}, {0, 20}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 ImageSize->{184, 181},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[9]=",
 CellID->377516488]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"TotalCatch", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FishingMortalityRate", "\[Rule]", "F"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CatchAge", "\[Rule]", "tc"}], ",", "\[IndentingNewLine]", 
     RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Sequence", "@@", "opt"}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"tc", ",", "0", ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPoints", "\[Rule]", "35"}], ",", "\[IndentingNewLine]", 
   RowBox[{"MeshFunctions", "->", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->58749458],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXdbFMn77r2u80rOKzl/nX+P3/BbV901R0QQyTnnnMPk0D0BEAyIWRdR
EMnJ3XXNWcxx1VXuU1Xd012TcIABRp3nuperZ6amurqej089VV09+7+37vvP
1v+1atWqCvJfF/mPHuPHsJ3uttLNCVuomAQDj0SYk7Dx3veHQZiTH9A8fB2I
68OQ/Ajm7d95eTwcTL5X8+nQBXs5zMn3YXN4MCieDXPyjdrc/gq6N8OcfCv2
VQctqQfDkISsBTgHWZ6WhDkJEQvcC8vvrDAnK2jznZYuXUsCOXuYk2Wz+XZy
6DglzMmS2gJ6NTQdEeYkuLawbgz9zg9DshhbTNd9Q30eDibztUV21Dfaz2FO
vmqL75nvoG/DnHhbULriO+vPMCdBvPbvuA9/QEiCe7E/Qtf9IMEk6Ff3fXeX
t32vnCzF5XxnXTQv+z44Wbr2f9PdEkT7RjlZ0tZ+W12xPPatQLLULQz9Hlgp
C/GeWZ7mhXgnrIiFctxYzraFbCeslO30euIvdGyZWxWanbBSpvRGCHbL8jcp
BDthBS1kg8aKNCkE+2GlLDSDxgomPyHVDytofD+ETp+sbEtCpx9W1kKQjRVv
RijP15bNPHogFDpkxSOG1IBVLvsxOfG+5BXvhBUHQzogSOSdRdFvKOlVIZFs
BZu3bObTCyvomhX/58mDkX0K+YSNHpT2ovwiKvtRfQk1l1F7GT8CJyHFRujE
K+LxjBPIOYP8cyg6j9ILMhtVA4yNQdQNoX4IDcNoHPk+OQmD4bMBxMWpx5B5
irHxG2WjhLDRhwrGRrXCxrDMRtMoVfMoWsa+E078+eLHXGXiwUjsQtpxykbu
WRT0oKgXJRdRRti4JLNRM4jaIdQNMzxG0DjqwmOM4tEyDg3TN8rJHL5Y/nsW
IQVG7CEkdyPtBLJOI/cc8t3ZqBxAlTsb9SNoGGV4jFE1MzZkPCaotEzfECch
wsaKU6G0QfJadAfijyD5GNJPIusMcn9D/nkUXkDxRZT2o/yS52xlAaabVCtZ
6Uv3YXN75Ie6A66AsU3EnjbEHER8F5KPI/0Uss7KbPCerRhA5WVUDaJ6CDXD
qB1G3QjqR2noaBhDIwsdTeNoZmqZoJKih2YSWiZ/zKx0T1D7qkd+nG0zChgb
TdhhR+QBxBxCQjeSTyDttOrEggso6kNJP0ovoXwAFZdROYiqIVQPMzxGUDdK
8ah34dE4TvGghExQyYRMytK6RAKIbopKPxUqI86KsxEKCQY4MNbpsFnArlbs
7cT+I6qbMs8huwe5vci/gMI+FPej5BLKBlB+GRWDqBxC1TDDY4TDY4zi0TDu
wmOCw2OSyg2PKSrdlEqIfkU5CQUwlrT+AE0BY00zNpiw1YZd7bJT4o8j+SRS
zyDjHLJ6kNOLvAso6ENRP4ovoXQAZZdRPoiKIRceIwyPUaq6MYbHuIxH4wTF
QyVk0o0QzZSMB08ID4l+evkyk0D88iPs3FbA+G8d1uqwwSq7YO8h7D8KwkbS
KcpG+jlk9iC7F7kXkN+Hwn4UXULxAEovo2wQ5UMMj2FUjTA8RqlqxygelJBx
FyETHCGTVCohU7L8EjKtakmDSYB+WTr3hRoY/6nEv1uw1sgS0Vbs7sTeI4jp
RtwJJJ5C8pmFT0koIeMUD0rIBJVMyCSVGyFTPgiRIZmWxRNiYAo6JCvIRugk
GAoY/yrBv+vpwXoLNtmxvR27D3rCkHIOaT3I6EXWBeRcRG4f8vtRcAlFAyi+
jJJBlA6hbAjlw6gYQeUIqkapqsd8QyUTMulGSPMUxUOSJyTTKh4ehHhDshhO
AndN0J0YClTAfXVrdb7cq/9jwHpB7eE9XYg6hpgTiDuFhDNIOoeUHqSdR8YF
ZF1Edh9y+5F3CQUDKLyMokEUD6JkCKXDKBtG+QgjhOFRNUYJqRlD7TgViSF1
E57ANCmQTPkhZFrVVyFZcDCZl3eC68rQiRjSAQUja5b+rcd/NXJ/bmzF1g7s
OISIroWMI8VDKBlmhIwwQkYZIWMuQsapahkeRPVEk2jwWuWQCHGDZFrWgiH5
KifzdU1wXSk1b6fLglhz4MaDwdu/DfjJ6vbmzi5EdCPyOKJPIuY0Ys8i/hwS
e5B8Hqm9SLuAjIvI7EN2P3IuIXcA+ZdRMIjCQR9EUULGqCgh41SUkAkqnhCi
RiZvVCgh01TekOgCg+SrwWQFgwZc7uDrX2ZIfIKxukF++ZPgN1BEncS+018J
IzkDlJA8iZAhFA2heJjFkBEaQzwKV0mETFBJhNRNUkJUSKaompj4L3oQMg9I
rqjyhmSJgobHWb760ueJlgESj019wbKUC0i7iPQ+ZPYjy+sOC4VkmEEygtJR
lI2ifBQVXgmqREgtI0SFZIqKh8Sbk69DcgV6d3lDQnrGp1++2plzm1KndDD3
S/hhgz9j0CHx8MJPItY7sbEdWzqx/RB2HsHuBeUVvCWe96yBQELDyGXkuQ8x
xSMcJGMUkspxKr4MhWSSg2TKC5JpNDPx3/KdkFxxk09ISG/7CyZze2peLkBg
bARy9sUTIp1odTX+1Swfb7JhuxO72+liePQhdT086Ti9Y5JyEqmnkXYGaWfp
Mld6DxWZtKaep0o5T9OMpPNI6EH8b4g99xWc0vqQ3q+WkSDJH0LBkNsXKSRj
bpBUTaDafRYjQzLlBcm0ColPTmRCrlDNAYnChveIM4enloiNwOtcWBiRqajE
vxrwM5t9bLdij4hoB2JbkdCO5E6kHULGYfpRTjfyjiH/BApOofA0Cs+g8CyK
ztENw0U9dItXUS+KLtIbKAV9dDk0r4+ubJAJbFYfTUTTL4KMKUm9lJk5UMm8
hKwBtQCFZBiFZKxxz0MoJBIhLkg8OZnygmTaE5IWD06uQHNFJsQbEtK3/oab
uYNJ4E7xx8Ai2eBbEggkFIkstpZVjXUN2MrAiDYjzookEWl2ZDqR04a8dhQc
QBFb3So9jPIjqDiKym5UHUfVCVSfQvVp1JxB9VlUn0N1D6p7UX0B1RdR1Ue/
UnEJFQP0Lps/ElIvUlrifvvir0C2+3cJJEUjKB5Fyaj6vgRJ5YQKSY37/MUN
kmnfkHhzouVE+nPu4WYOSALPRf3B4JMNnxwGaP4goVQkzq7OoQdrq7ClHrub
sE+DBAN9J9OMXCsKBBSJKLGh3IEKJ6paUdNGP63rQH0n6g+i4TAajqChC41H
0XQMTSfQdBJNp9F8Bk3n0PSb3PjGi2joQ30/6vpRO0A3mVcP0i0cFUP0rkop
mZ4Mec5kk3v9cpLjnpMokJRy+aobJJMUklovTrwhaXKHpMV9sJDY8A4mc0My
Lzb40/HveBTw+MrCwOBNgUSqf3USJDA2V2J3DfbVI7EJaS3I1tI3i/QoNaLc
iEoTqsyosaDOinoBDSIabXILW5zQtEHTDs0BaDuhOwjdIeiOQNcFXTd0x6A7
Ad0p6NiNFe1v0PRAcx6ai9D0obkfTQNovIyGQbrbvJZt5KhiS6NlbBpLZiv5
HACJ5z/75CR3EHlcQkITVwZJGc+JFyQenFBIpn1D0swIkaR0ncTJVyHRMzCW
ekYZFDaUqpTW/lrIRpAqJNQirR5ZDchvRHEzyly5aK0GdVrU69CoR5MeLQa0
GKExQmuCziyX0QswiDDYYXTA6ISxDcZ2mDpgOgjTIZiOwNQFU7dc2HQaxrMw
noOhB4Ze6C9C1wftJWgG0DKI5iE0sa3F9ex+fdUoXSMl0xMJlTxfS2Qels9x
okBSznHCQ0I5mUIdN8klhPiDhHSXAomGiyf+0hK9K2IoJYPlQW+HBqVyUsnq
SPp3TRY2F6iRJKsa+TUorkVZHSrrUV2PugbUuxa4WhqhaYKWqBm6FuiJNDBo
YSTSuZxuhMkEswVmK8wCLDZY7LA4YWmFpR2WDlg6YTmkdpTlBCynYD4D8zmY
emDqhfEiDH0wXIL+MrSD0AyjhT2b0MA2ddSwBVKCSukIXf0gDORcngsVKXdV
XkqzG8rJuDsn7pB4cNLoEukiGZIrVD4hUThR8FjlK2P0cOXiPRs0MCLwrwQ2
DclDVBESS5FRjtwKFZKaatRVo6EaTTVorkFLDbQ1rvhQCwNRHYxE9VSmBpga
YW6iUp2uhUUPqwFWI6xmWC2wChBECHYITghtENohdMjlhS4I3RBOwHoK1jOw
nIOlB5ZemC/C1A/jAAyXoR+CbhiaEfr0ShPb9lM3Tu+zVI7RkEIGETLJzfUV
UrJd8JAChTwnXpAQ4yHxCCarWKT1zF29IPHgxAMAnwc+4VmAWxf8XaWG1bvx
3zj8mkaP9xcgtRhZpcgvQ0k5KsqhdAINnhXQVEBbAV0F9BUwMCmXbKoEkbmK
qRrmGliIamGpg6VeLWZthtACQQtBB0EPwQjBBNECUYBog2iH6FQLi4chdkHs
hngc4kkIpyGcg7UH1l5YLsLcD9MAjIMwDEM/Ai17xKmZbQyrY/dZKtnAUTJC
Y4VPTpQgI01wPCCp4DghkFS7Q8KnGZ4jzhW/kCjd7tN3wWVjMV9f/Z9X5OsE
jA1p2JODeHaHPa8YRSUoL0V1GWrL0FCGplI3QugKTwmMTCaXzCVciCiFpYyp
nMpaAWslrFVM1WoxoQFCI4QmiC0QNRB1EPUQjRDNsFlhE2BzJbe2A7B1wnYI
tiOwdcPGOBHPQDwHsQdCL6x9sPTDfBmmIRgZJ7ox+hiLxEk9u9VSNc44GWWc
zDnuFHJLJQokFRNunJBOUCCRlkqUT/1BsspXxPB2KEIgbpDvrt5O76pvTEVk
NhLzkVmIgmJXtlmChhI0laClBNpi6IqhL4KhyBMScwGYZslfi0sqJEWwEhUz
lcBaylQOgYgLOEItxDqI9RAbIUqoaGHTwWaAzQSbRS1pb4X9AOydsB+C/Qjs
jBPbKdjOwEY4OQ/xAoQ+WC/BchlmxolhlHKiZVvTGyfcOClmnMyRn/DBhHIy
zjiZUCOGPOL4gUTiRIJkVQATTG8kFuPfBX+dgrENa/bRg6gsJOchuxBFRago
Rg2jQro0rYREIYxEBTDlw0yUp16+Aokl94sl54sl9zP9mzNLX+aqCxHW/Fkm
WAtgLSTAzFJmSmaFEgilHCRVEGsgSqg0wNYIWzNsGsaJHnYjB4kDlJN2ODrh
cHFiPw77KdgJJ7/BJnHSD+sALIOUE9Mo5UQ/Th+FkzmZpJxUjtMRhOQnJE3N
9uJEmQRJqyXKVUvBpJILJt6Q1Pu6le/x0sOPqwKIG3NXyL/0d645bPX/fUi+
8tM+bElFFFv8zCtCSTGqSlBXgkYSK1yBQqrcVECRsOTBkjtLlfPFmvPZmk30
jzck1sxP1syP7C9TFpFazEq/+8Way5T3xZr/hdHyRSiCUMxBUg6xEqKCSj3j
pAm2Fti0sOvVkg4RhBNHKxwHZE4cXXB0w3EC9tOwn4W9B7ZeiBchXIJwGdYh
mEcYJ+PQs0efmtk2jzqOE4JB3pAnJPyV8uvzCiRunEy55a7eDPh0d+Bu9YbH
J1TzBuP/3F29gTqLgLEvB2kFyHcx0FCKllJoS2AohrEIZqJCWPI5l+V8FrL/
EbI+CVkfhcyPQsYHIeNvK1E6lSckae8lWaj+tqRTKVVZXNgQwChpuZ8pLfmf
aXgpmFXPWEoHILGCoVJNUbHVwdYgc2LXcpBY4bDBQThpc3FymHFyDI6TcBBO
zjFOLsDWB3EAwiCsw4yTMcqJzp2T6gnqcTLDLXRPYqXRhA8myuJ8uWvEqfTz
iO7C/OXTloINUnj1ur9XR9ODmFykFSK/BBVlqCtHs2tKYiqliSXJEIRCCAUQ
82fFvC9i7mcx5x/+ksX092L6OyHtnZD6lirlDZGVyQMSS/IbqhRJb6lS36mQ
UGY+WDI+WDI/WrI+UmBkWkhg4SAppqOPUObipMqNE3sLB4kFDkHlxHkAzoNw
HIHzKBzH4TgFxxk4foP9POwXYeuHeJlxMgLzKEzjMEwwTibpHfwGtlJaNUGd
Lg0o/NzEw/ibONJEeA6fLtICZyPAM0olV0dhUwo9zihBYRmqKtBQCU0lDGT6
WUGnFcrF2gphL5i153+x536253yyZ3+0Z32wZb63ZbyzpavOFVNei8mvhCSi
l0RWokRJLzwhSXzlpqTXRCokqe8sqSzIEFoIKhkfSWyx0MDymQxDKiRs9KGJ
CuHENfTYOE5USEyQObHD6YSzHc4OOA/BSTjphvMEDSYONujYe2kwsV1inAzD
QjgZg5EMOuwpuRZXesmvb3uzkT/kO1x4O3TxFjgbAdZG7N+R2JiGmAJklsnv
NNdCXwtTDZ1dkk62V8BRDmcpnNyc1Jn7yZnz0ZH9wZH53pHxzp7+1p72xp76
2pbyypb8SvVawnNJ1vhnsuKeWZg8IDHHP3fphTnhJVWiWg8xc/Jbc8o7M6El
TYoqH1lUoagoZUiiQiNbsZzQypxUq5yokBhAOSGDjggn4aSVBZNOOA/TYOI8
BudJOEkwOQcHCyb2ftgGIA7RYGIZhXkcHmD47Ft/SPBlAvN8QN70eeDv/blt
9f+jnb8hA9GFyKhAaR1d/dY0uhYQ6uGoQ2sN2qrQVoH2MrSXor14tr3wS1u+
21DizHjrTH/jSH3lSHlpT35hT3phS3xuS3wmJjzji1ljn1Dtf2LZPyMrZsYc
M8NDYt7/VFYs0TNzHEOF0aJCkvTanPzGnCKh8t6sovJJPRdLUYTCWRpSeE5I
PKmlnCgl7To4jHCYKSdOG5wOONtYMDmoBhPnKTjPwtEDRy/sLJjMDcZ8vbl4
8+DQgzqfL78KrbdZtHSG6OQG644adFShswKdZegome0o+nyg4NOBvI8Hcv9u
z37XlvmW/7qDsvHMnvDUFk/0RIx7IsbOCET7H6uniHlk2SfLTBTNRI8fK2HE
tG/GFCPpiWk/0VNT7DOquOdKPaaEV6bE1+akNyykvCUhxZzGUMn4qEKSK018
OE6k/KSKxZNaDhItaDAxyoOOUxl0Otmg06UGE6lXF8lGEMEI7qmVDrm5Xc6j
7kW6JVSdehzU4lAzDje6UXSwdPZg8efOwk+d+R86ct93ZL87kPmmPeN1W9rL
1lSiF2pXxz+xxc3YYh+L+x8RCTFED637HlqjH/AVmqMeKDLtZYp6SKRAYox+
xPTYuI9oxhjzhIqgsv+pCkn8C1PCS1PiK1PSa5OMihxS+HNJqSwJKWzcYcHE
xYmthoOETHZ0jBMpmIiuYMIy2NYjiwoafHsWVsPibY5Tq2DskHm4H7XTo7VK
me4WdDfhaD2O1qCryp2TvPedOW87st4cyHjVnv6yLe1FW+qL1uRnzqSnjsQn
fEkx5qG474FAFH3fGkVl2XtPkgrJ3vumSKJ7REaq+5IUSEgZ496Hxigihko0
Q4XRolRijHtuinthin8phRTCiUnhJP2DUszimvLQ/KSI5Sd00JkVK2dF92uk
wUQvDzpOgQ46iwHD2zvekCwDNv5OscrL7kd7guFd/kQTjtfjWA26q74cLf+n
q+SfI0Uf+Uo6Ml4eSHvRnvq8LeVZa9JTZ+ITZ8KMI+6xPfaRbf9DpZgQdc9K
tPcukSXyjmXPHTPVXXOkColpz11jBNEdpruy9tzjITFE3jdEPjDsfUgV9cgQ
9dgQTTSjQhL7zBj73OiTEy6YWLLpmq01d1bOT4q+CCWzQtmsWEE5sXE3euwa
OFgwWTwY8LoR7/N46WxuXxO7HUE7+cG+ucDgv3WqCSfrcaLmy7HKz93ln4+W
fOwq/PtI/rvDuW8OZquzTmJtSU9bE2daEx474x87Yh/Z9z+0xTyw7bsvRt/j
i1n23LZE3DZLYpCYIqj4MsZdtw2Kdt+R5AZJxD3DHsaJOypuleyXOTHGvzQS
TogkTlLfq43J+kfmRFqYLfwiFH8RSl2ccMFk8WnGKq9AMcenS2TeZ/EEIyYg
MDy+e7J69njl52Nln7qLP3QVvj+S//ZwzutDWS8PZrzoSHt2IEVNA4g54x46
9j+wMzZs0ffEqLvC3jtC5G3rnttKGfPuWxSP3bdNsm4Zd8lSyhh23iTS77zF
dFu/i4qHRL/7rj7inn7PfarIB1R7H+oZKmolMU/dOCEhRYonKerKjJmtn1BO
cj9b8z5bCz5baTChnJCZzlLMTQJ5J+jmE1FityLc0s4F1KlYd/HfRwvedeW9
kfFIf96Z+vRA8pP2pJm2xMet8Y/4woQNW9RdUWbjljXilmX3TSK+jGnXTSLj
TlWGHUQ3lAL67Teodtx0idLiBsmuOzInVAoqhBMekieEE4NHPEmkwUSFJOMj
4+STJecfS+4/1vzPO+f/eJrPDlzAO0Ex3t0+T3rbBcbj+IVfqVTDyQq3VQ5i
hzJfHEx/RvDoSJ5pT3zclvCoLe5ha+wD5/77jhh1QBEibwmMDSthY9cNM9FO
KtNOlQHjjhtEhh3XqbZT6ZmUArpt16m233DpJpFCiFxm1x3d7rtUEfd0Eid7
KCcqJPueUDFODConNJiokKR/kDhZJBu8azze/+o7izcPKjwaQ47vuCaqMwnB
+SdwquLTidIPx4rfdxe87cpzyzo6kmbaCRvxD1vjHrTuv++MuefYd88efde2
9zZfjLBB8dh53bzjmsklI8cA9eC2a0R6SVupdFuv8QXISxmVbTe0227wYUQu
sPO2bheDZPc9KhkVdTatj57Re3JCg4kxUb6oxQcNf2AobuKPg27ebPhsRlDA
4Os8WfrhOMPjaN7rI9kvD2c+J9GD911r7H3n/nsMj7v2qNu2yFsiDR03rbvV
QEHZ2E70F5FxmywDk+rBrX9J0m1RdFW7+apSQLvlmnarpOtEviC5Q4MJ4UQS
DSn3dTwkUY8pJ9GEk6eMk+eGuBd0mSX+1VKwsWwWCBsziUEDw6Pm48XvJDy6
GB6H6ODypCPp8YEEt6zDHnWHhA4icc9NYfcNIkKIZZdboDBuvSrJ4JKeaIvK
AEFCt1mWlupP7SYqFZLNf2mIthBdI/KGRLvzNtMdql1ELKRE3Fch2ftI4oR8
S085ebbgflu6aDCvNvAHfJOkblkKMPizS8bh8ZTikUzxaKcjCwkdd3kGxIgb
QgQlxLrrumXndcuOa+YdNG4oBQxb/pSkl7SZSreZY2DTn7w0m/7QbCRSC2g2
XWWQ+I0k2h23tDtuy3Jxot2tZkeksI7lsYvpmSD28yLb4HGwk/tljKVugIeR
6HHQFT3a5cTjriP6jjSyKMWsMh6EjWtmMqxsu2qiceNPvir95j+oNv2h48QX
0G6UwPhDs+F3JnqsQiJHEhpGNL4g0Wy/JUvl5C4poHUFk8V0SxA7ecHmcRWr
XGs1ywCGRxu6SfTIUW+eEjuQ+Kg9/kFbrAuPvRQP256bYoTbNJaEDgkPwoaR
Bo0/DJt/12/6XSmg2/S7bqMsLSfVy79eIWqh+p1qAxEHiRRJNvsdbjTbblJt
p1NjwomGcbKw3lvObp+vKde7Iqfuzid4vDqS9UKKHjwANC91w+OGNLJYd6oT
EBcehA0ZD/3GK7qNV7hAcUW7QZXGJaVAi0yIIjdIaIFNV1s2/dWymcgTEulA
s/WGhMqC2Qh6xwbXVooQ6aRduQyPjOcH0552psyw6PGQd5At8qYo43FdwsPC
QgdfhuJB2Nh0heKxYVqSCsmv00Qal1p+maL6VS3Q8st0s6orzb/+3uzOCYNE
5kSBpGWLCuqCeyC4Xbp0toKEyHNbigdNP+jSh5R+7HPLTiU8LC48WOLxJ594
qHhQHqaYpvkaNISK9ZMt6wke0/Qvk/Jp8/oplxgkLk7UAhv/bN54lYKx6a/m
TVfJcfOmv+bVaXxj+Hc8CgS5l4NkKxJGlJMelOa2yTSA0JUxPv3YoyYeLjyu
KniwwYXLOigejI1fqDQuqaGAULFusnndpISHhITKwLqpJiIJEo4T6VPCRvOG
P5s3/NH86x/NbNazgOv1+dL7IDRtmQlZ5WUHEh8zPB6w9MO1LMYGF6WMiscW
GQ8DSzyUAgyPSc16WTRorJsgfzlIJpvXU0h4KZ82rZtkopw0rZ+m+uUKn5oS
PL5FNvw5d15OX+YwIp2L3nlJc1s7pfdc6KrpHdveW2xZjAwu1yw73dbGlejB
5x58Ac36CQ0Bg1PzugkuVqhsUB7WUqmQrJ2g77B4QtigkKyjqCweDCw7G/7O
suCzLyck0onU+7aJ6o4L6Z4LXVSPuMHlHjR6KGWU6OGWe/zCxQqJjbXjzWsp
HlRrOUgoBp5SPm38eYKw0bh2kmlqAd04x5vfKBt8DcsDCcUj40Vn2rOOlKf0
tn7Co9Y4tymMdM9lHqkpSTnoyMJjMM5pQpIaK36e4NVINb6KexyJvBNmw2f9
y0CIdIrO9Ocdqc9YAJlpjX/kjH3giLlPAgjPiUVZMt2mpKZuixWEEA6PSSlu
uEHys6wmlzhIxhsVrRmncWMNPZhvD/gDg69neXrVZ3uCTuayEULsAA0gT9oS
HrdKG8b23bNF3xX33hb23FLKMDx8LIspBdi0xYWHNLL8PKZC8vNYkywXJGtU
SCQkeDZCp5cCt2VjQ6ltqS+fDwJtNIA8dsa6CIm6I0beFiLcbuvLi+ruq6Z8
diqNL67EgxLSvEaFpGnNmKJGl6SPGBvyy3m1f+k6Z77m4azliVrLSYhkjtiH
9hi23XTvHWHPbWsE2y22w20KY6C34SghDI8rbKWUW+ugeEwoeDStGSXiIVHY
aPyJip/DBt7speuTb8uWOoyQmulDDSnP2pLUGzF0szrbjWzdQ/eayrvFtl11
z05deND0Y1oaX5RPXVkHCxc/jUpSPm38aVQSjRvsIJALXOp/LN+uLV3PSDUT
QtgzL/SBFz5QCJEqIabt1+heIHbTVinABxANS1D5BTEZjzWUDQUJ5VOJjXDQ
CIrxYSS4HSVV2576oi35Wav8SNQjW4y6i88ScYvtRr5ONxNuvWpgGYie29oh
BRB5UZ0mqDRH5QcUGY//GVGkjCkBtjCI1/sd2xKFEala+ZnKxCeO+Bn6xFzM
QzFa3cVHCDHtuG7c/hfdRkh3iP3Bxhd+X4caQFrWSWsd3DSWEqKyQf6G2VgK
48NI0Kv1IuQBIUTY67YYQvchb7kqbRWT9gJpuX0d8r3adS5C6Ex2jP86YaMh
ADaW6B/CD2LekCy+M5U6ncnPHIlP7fEztthHYsxD+iD23rv0GduIW0oZmZBN
KiH8PX2JELaiLq2Jsfksy0UD8XsYjKCY0tXB6s9V7uaTENMu9aY/CyB/sG2E
VyRCNDwkriGG4uFiw995fR6HbZEW9LFGqq01Rf3dD/qLHzIh9yghuykhxh3c
A3ESIdI2Qpqj0n1iHgOKtPoR4FWER5bg2lIQ4kx96UhWf9WH/hRM9AP6Kx+R
d80RtyVCDNvUFTMtI0TDEUK3AK2dCGRA4cEI1lWEjbfghhGOkBf2RHVziESI
ec9dk0zIDfoEJfckFAsgV9hG02mSftC48fNX7qSEg8ayWRAhcRHySiLEFq/+
5oMl6r45khJCf8DBRYjHQy4kenz10VfvT8N4fNXm8G8grg86IfJPFyY+tyU8
FePcllVNEXcIIYYdN/TbrtEnKDf9qWUPPa2a87Fof80LszG3zTEEz7frgkxI
2mt7yktb0nMx4ZkY90TY/9i6T31ElxKy/Tp9Nn/LVS0jZO64EWZjATY3Gwvo
vWCFEY6QV7akF4yQp8L+GUKIhfvRQkoIiyEBTmCD2MLv3uZgY+73A6l58S5Q
KrGnvrIlvxQTnwvxT4XYGUv0Q3PkPf53xnz+cFOYgcXY0rHB1xAsQojJhMQ+
scQ8or9uSgm5S4YYfz/qFWZjwbYMbCj1BBcSMeG5EEcIeSwR4i9uLOZ0YfNw
2SrXIvkSBeTgEkLMGveUEOLNRhiMb9R45y6mBnua+j958a48SI0N28rYIp3o
LxcNg/Hd2OL/pXvEjWA0KmyhZQsmJMzGD2J8GAnQ0Qt4ACFs37QF7m7lF9KW
vlFhCy2bmxBlQAmz8cOazzCyivtZxRVqV9hCyHhCPIAJpxxhg/vihkfiGsYj
bJJ5IxFmI2weFmYjbP4szEbY/FmYjR/H/E065piMhOcpP455OzocHMImWZiN
sPmzMBth82dhNsLmz8JshM2ned8r4d9fuXaFLWxhC1vYwrby9v8B2eYUJg==

    "], {{0, 141}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 141},
  PlotRange->{{0, 180}, {0, 141}}]], "Output",
 ImageSize->{184, 141},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[10]=",
 CellID->5666885]
}, Open  ]],

Cell["\<\
A particularly elegant presentation of the yield curves is obtained by \
plotting them as functions of total biomass:\
\>", "ExampleText",
 CellID->54186080],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PopulationGrowth", "[", 
          RowBox[{
           RowBox[{"FishingMortalityRate", "\[Rule]", "F"}], ",", 
           RowBox[{"CatchAge", "\[Rule]", "tc"}], ",", 
           RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", 
           RowBox[{"BiomassIncluded", "\[Rule]", "All"}], ",", 
           RowBox[{"Sequence", "@@", "opt"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TotalCatch", "[", 
          RowBox[{
           RowBox[{"FishingMortalityRate", "\[Rule]", "F"}], ",", 
           RowBox[{"CatchAge", "\[Rule]", "tc"}], ",", 
           RowBox[{"OldestAge", "\[Rule]", "Infinity"}], ",", 
           RowBox[{"Sequence", "@@", "opt"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"F", ",", "0", ",", "30"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"EquilibriumBiomass", "[", 
             RowBox[{
              RowBox[{"FishingMortalityRate", "\[Rule]", "0"}], ",", 
              RowBox[{"Sequence", "@@", "opt"}]}], "]"}]}], "}"}], ",", 
          "All"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"tc", ",", "0", ",", "10"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->392115949],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
fZ8HG4/pnqdIkSJFihQpUoTG/wFdmWQ0
    "], {{0, 112}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 112},
  PlotRange->{{0, 180}, {0, 112}}]], "Output",
 ImageSize->{184, 112},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[11]=",
 CellID->157812700]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["SEE ALSO",
 BaseStyle->None,
 Appearance->{Automatic, None},
 Evaluator->None,
 Method->"Preemptive",
 ButtonFunction:>(FrontEndExecute[{
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], All, ButtonCell], 
    FrontEndToken["OpenCloseGroup"], 
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], After, 
     CellContents]}]& )]], "SeeAlsoSection",
 CellID->1255426704],

Cell[TextData[Cell[BoxData[
 StyleBox[
  ButtonBox["EquilibriumBiomass",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/EquilibriumBiomass"],
  FontFamily->"Verdana"]], "InlineFormula"]], "SeeAlso",
 CellID->929782353],

Cell[TextData[Cell[BoxData[
 StyleBox[
  ButtonBox["BevertonHoltModel",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/BevertonHoltModel"],
  FontFamily->"Verdana"]], "InlineFormula"]], "SeeAlso",
 CellID->439569870],

Cell[TextData[Cell[BoxData[
 StyleBox[
  ButtonBox["SurplusProduction",
   BaseStyle->"Link",
   ButtonData->"paclet:EconMult/ref/SurplusProduction"],
  FontFamily->"Verdana"]], "InlineFormula"]], "ExampleText",
 CellID->347533806]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"PopulationGrowth - Wolfram Mathematica",
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "built" -> "{2011, 4, 7, 10, 56, 57.9548481}", "context" -> "EconMult`", 
    "keywords" -> {}, "index" -> True, "label" -> "EconMult Paclet Symbol", 
    "language" -> "en", "paclet" -> "EconMult", "status" -> "None", "summary" -> 
    "PopulationGrowth[opt] calculates the population equilibrium biomass for \
the given options", "synonyms" -> {}, "title" -> "PopulationGrowth", "type" -> 
    "Symbol", "uri" -> "EconMult/ref/PopulationGrowth"}, "LinkTrails" -> "", 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
   StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[5644, 168, 461, 13, 70, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->701497034]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 520331, 10668}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[609, 21, 76, 1, 70, "SymbolColorBar"],
Cell[688, 24, 179, 5, 70, "LinkTrail"],
Cell[870, 31, 2343, 53, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[3238, 88, 59, 1, 70, "ObjectName",
 CellID->1224892054],
Cell[3300, 91, 413, 12, 70, "Usage",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[3750, 108, 580, 17, 70, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->946433363],
Cell[4333, 127, 184, 4, 70, "Notes",
 CellID->165260080],
Cell[4520, 133, 524, 10, 70, "Notes",
 CellID->132302782],
Cell[5047, 145, 273, 8, 70, "Notes",
 CellID->1067943069],
Cell[5323, 155, 284, 8, 70, "Notes",
 CellID->340897106]
}, Closed]],
Cell[CellGroupData[{
Cell[5644, 168, 461, 13, 70, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->701497034],
Cell[CellGroupData[{
Cell[6130, 185, 148, 5, 70, "ExampleSection",
 CellID->253990142],
Cell[6281, 192, 134, 3, 70, "Input",
 CellID->272567927],
Cell[6418, 197, 156, 4, 70, "ExampleText",
 CellID->7903785],
Cell[CellGroupData[{
Cell[6599, 205, 107, 3, 70, "Input",
 CellID->165013869],
Cell[6709, 210, 159, 5, 36, "Output",
 CellID->39990964]
}, Open  ]],
Cell[6883, 218, 90, 1, 70, "ExampleText",
 CellID->57828272],
Cell[CellGroupData[{
Cell[6998, 223, 181, 5, 70, "Input",
 CellID->70505033],
Cell[7182, 230, 1448, 38, 79, "Output",
 CellID->514607365]
}, Open  ]],
Cell[8645, 271, 274, 8, 70, "ExampleText",
 CellID->271391132],
Cell[CellGroupData[{
Cell[8944, 283, 199, 5, 70, "Input",
 CellID->235911115],
Cell[9146, 290, 4285, 113, 126, "Output",
 CellID->190055808]
}, Open  ]],
Cell[13446, 406, 563, 18, 70, "ExampleText",
 CellID->80228171],
Cell[CellGroupData[{
Cell[14034, 428, 314, 8, 70, "Input",
 CellID->271431007],
Cell[14351, 438, 2579, 73, 76, "Output",
 CellID->553869347]
}, Open  ]],
Cell[16945, 514, 87, 1, 70, "ExampleText",
 CellID->642728740],
Cell[CellGroupData[{
Cell[17057, 519, 313, 8, 70, "Input",
 CellID->246149518],
Cell[17373, 529, 7398, 191, 175, "Output",
 CellID->629465931]
}, Open  ]],
Cell[24786, 723, 104, 2, 70, "ExampleText",
 CellID->349083649],
Cell[CellGroupData[{
Cell[24915, 729, 273, 8, 70, "Input",
 CellID->83691798],
Cell[25191, 739, 1838, 50, 77, "Output",
 CellID->62574209]
}, Open  ]],
Cell[27044, 792, 686, 21, 70, "ExampleText",
 CellID->163467103],
Cell[CellGroupData[{
Cell[27755, 817, 224, 6, 70, "Input",
 CellID->870654935],
Cell[27982, 825, 158, 5, 36, "Output",
 CellID->355019661]
}, Open  ]],
Cell[28155, 833, 138, 4, 70, "ExampleText",
 CellID->673852804],
Cell[CellGroupData[{
Cell[28318, 841, 1547, 33, 317, "Input",
 CellID->770724696],
Cell[29868, 876, 7254, 126, 161, "Output",
 CellID->106874982]
}, Open  ]],
Cell[37137, 1005, 154, 4, 70, "ExampleText",
 CellID->4285841],
Cell[CellGroupData[{
Cell[37316, 1013, 207, 6, 70, "Input",
 CellID->206144046],
Cell[37526, 1021, 457, 14, 79, "Output",
 CellID->118608341]
}, Open  ]],
Cell[37998, 1038, 624, 19, 70, "ExampleText",
 CellID->295623005],
Cell[CellGroupData[{
Cell[38647, 1061, 268, 7, 70, "Input",
 CellID->313458268],
Cell[38918, 1070, 411, 13, 68, "Output",
 CellID->293438328]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39378, 1089, 224, 7, 70, "ExampleSection",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[39627, 1100, 243, 7, 70, "ExampleSubsection",
 CellID->1757724783],
Cell[39873, 1109, 479, 16, 70, "ExampleText",
 CellID->944233520],
Cell[CellGroupData[{
Cell[40377, 1129, 390, 9, 70, "Input",
 CellID->249388565],
Cell[40770, 1140, 2607, 73, 76, "Output",
 CellID->178512605]
}, Open  ]],
Cell[CellGroupData[{
Cell[43414, 1218, 380, 9, 70, "Input",
 CellID->270885764],
Cell[43797, 1229, 1632, 47, 89, "Output",
 CellID->339872531]
}, Open  ]],
Cell[CellGroupData[{
Cell[45466, 1281, 490, 11, 70, "Input",
 CellID->341905564],
Cell[45959, 1294, 522, 15, 79, "Output",
 CellID->631545553]
}, Open  ]],
Cell[46496, 1312, 78, 1, 70, "ExampleText",
 CellID->750062201],
Cell[CellGroupData[{
Cell[46599, 1317, 536, 16, 70, "Input",
 CellID->504701840],
Cell[47138, 1335, 1021, 29, 52, "Output",
 CellID->949423687]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[48208, 1370, 242, 7, 70, "ExampleSubsection",
 CellID->1295379749],
Cell[48453, 1379, 293, 10, 70, "ExampleText",
 CellID->365160919],
Cell[CellGroupData[{
Cell[48771, 1393, 305, 7, 70, "Input",
 CellID->845366186],
Cell[49079, 1402, 1451, 46, 73, "Output",
 CellID->192314894]
}, Open  ]],
Cell[50545, 1451, 328, 11, 70, "ExampleText",
 CellID->540960771],
Cell[CellGroupData[{
Cell[50898, 1466, 338, 8, 70, "Input",
 CellID->79332059],
Cell[51239, 1476, 2124, 58, 74, "Output",
 CellID->535943220]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[53412, 1540, 252, 7, 70, "ExampleSubsection",
 CellID->564457095],
Cell[53667, 1549, 832, 24, 70, "ExampleText",
 CellID->567933929],
Cell[CellGroupData[{
Cell[54524, 1577, 339, 8, 70, "Input",
 CellID->506342236],
Cell[54866, 1587, 504, 16, 69, "Output",
 CellID->136493629]
}, Open  ]],
Cell[55385, 1606, 60, 1, 70, "ExampleText",
 CellID->23802219],
Cell[CellGroupData[{
Cell[55470, 1611, 268, 7, 70, "Input",
 CellID->81102391],
Cell[55741, 1620, 504, 16, 69, "Output",
 CellID->569321586]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[56294, 1642, 231, 7, 70, "ExampleSubsection",
 CellID->286954823],
Cell[56528, 1651, 71, 1, 70, "ExampleText",
 CellID->401043657],
Cell[CellGroupData[{
Cell[56624, 1656, 288, 9, 70, "Input",
 CellID->486926995],
Cell[56915, 1667, 1063, 30, 63, "Output",
 CellID->458426566]
}, Open  ]],
Cell[57993, 1700, 383, 13, 70, "ExampleText",
 CellID->197623657],
Cell[CellGroupData[{
Cell[58401, 1717, 769, 15, 70, "Input",
 CellID->76270502],
Cell[59173, 1734, 637, 19, 74, "Output",
 CellID->102828772]
}, Open  ]],
Cell[59825, 1756, 431, 13, 70, "ExampleText",
 CellID->70367960],
Cell[CellGroupData[{
Cell[60281, 1773, 1000, 23, 70, "Input",
 CellID->221509379],
Cell[61284, 1798, 1330, 37, 65, "Output",
 CellID->62721994]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[62663, 1841, 235, 7, 70, "ExampleSubsection",
 CellID->53572878],
Cell[62901, 1850, 392, 13, 70, "ExampleText",
 CellID->75083624],
Cell[63296, 1865, 226, 5, 70, "ExampleText",
 CellID->32926740],
Cell[63525, 1872, 552, 12, 70, "Input",
 CellID->90086044],
Cell[CellGroupData[{
Cell[64102, 1888, 703, 15, 70, "Input",
 CellID->254846957],
Cell[64808, 1905, 11808, 281, 322, "Output",
 CellID->919015319]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[76665, 2192, 229, 7, 70, "ExampleSubsection",
 CellID->209030249],
Cell[76897, 2201, 269, 10, 70, "ExampleText",
 CellID->232362191],
Cell[77169, 2213, 264, 7, 70, "ExampleText",
 CellID->530153135],
Cell[CellGroupData[{
Cell[77458, 2224, 367, 9, 70, "Input",
 CellID->28188353],
Cell[77828, 2235, 1399, 38, 77, "Output",
 CellID->202939710]
}, Open  ]],
Cell[CellGroupData[{
Cell[79264, 2278, 412, 12, 70, "Input",
 CellID->762355841],
Cell[79679, 2292, 1399, 38, 77, "Output",
 CellID->438083175]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[81127, 2336, 229, 7, 70, "ExampleSubsection",
 CellID->594241017],
Cell[81359, 2345, 283, 8, 70, "ExampleText",
 CellID->133722631],
Cell[81645, 2355, 322, 11, 70, "ExampleText",
 CellID->83596721],
Cell[81970, 2368, 457, 13, 70, "ExampleText",
 CellID->152728162],
Cell[CellGroupData[{
Cell[82452, 2385, 523, 15, 70, "Input",
 CellID->451987234],
Cell[82978, 2402, 4196, 76, 70, "Output",
 CellID->198959317]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[87223, 2484, 234, 7, 70, "ExampleSubsection",
 CellID->33541610],
Cell[87460, 2493, 229, 6, 70, "ExampleText",
 CellID->143002372],
Cell[CellGroupData[{
Cell[87714, 2503, 288, 9, 70, "Input",
 CellID->335805296],
Cell[88005, 2514, 211, 7, 36, "Output",
 CellID->9662150]
}, Open  ]],
Cell[CellGroupData[{
Cell[88253, 2526, 405, 11, 70, "Input",
 CellID->67501967],
Cell[88661, 2539, 239, 7, 36, "Output",
 CellID->143462882]
}, Open  ]],
Cell[CellGroupData[{
Cell[88937, 2551, 404, 11, 70, "Input",
 CellID->508083053],
Cell[89344, 2564, 209, 7, 36, "Output",
 CellID->55702]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[89602, 2577, 234, 7, 70, "ExampleSubsection",
 CellID->200354866],
Cell[89839, 2586, 503, 15, 70, "ExampleText",
 CellID->571624354],
Cell[CellGroupData[{
Cell[90367, 2605, 585, 16, 70, "Input",
 CellID->136873680],
Cell[90955, 2623, 18868, 317, 70, "Output",
 CellID->42374581]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[109872, 2946, 241, 7, 70, "ExampleSubsection",
 CellID->406594731],
Cell[110116, 2955, 426, 13, 70, "ExampleText",
 CellID->108252887]
}, Closed]],
Cell[CellGroupData[{
Cell[110579, 2973, 231, 7, 70, "ExampleSubsection",
 CellID->466920840],
Cell[110813, 2982, 643, 21, 70, "ExampleText",
 CellID->155145245]
}, Closed]],
Cell[CellGroupData[{
Cell[111493, 3008, 233, 7, 70, "ExampleSubsection",
 CellID->60098871],
Cell[111729, 3017, 355, 12, 70, "ExampleText",
 CellID->314915471]
}, Closed]],
Cell[CellGroupData[{
Cell[112121, 3034, 238, 7, 70, "ExampleSubsection",
 CellID->49130518],
Cell[112362, 3043, 293, 10, 70, "ExampleText",
 CellID->211293630]
}, Closed]],
Cell[CellGroupData[{
Cell[112692, 3058, 230, 7, 70, "ExampleSubsection",
 CellID->341800245],
Cell[112925, 3067, 496, 17, 70, "ExampleText",
 CellID->244813740]
}, Closed]],
Cell[CellGroupData[{
Cell[113458, 3089, 230, 7, 70, "ExampleSubsection",
 CellID->551720061],
Cell[113691, 3098, 497, 17, 70, "ExampleText",
 CellID->321305219]
}, Closed]],
Cell[CellGroupData[{
Cell[114225, 3120, 233, 7, 70, "ExampleSubsection",
 CellID->11345067],
Cell[114461, 3129, 411, 13, 70, "ExampleText",
 CellID->12649910]
}, Closed]],
Cell[CellGroupData[{
Cell[114909, 3147, 230, 7, 70, "ExampleSubsection",
 CellID->331612357],
Cell[115142, 3156, 371, 13, 70, "ExampleText",
 CellID->223841802]
}, Closed]],
Cell[CellGroupData[{
Cell[115550, 3174, 235, 7, 70, "ExampleSubsection",
 CellID->513613173],
Cell[115788, 3183, 695, 24, 70, "ExampleText",
 CellID->86356102]
}, Closed]],
Cell[CellGroupData[{
Cell[116520, 3212, 240, 7, 70, "ExampleSubsection",
 CellID->223890337],
Cell[116763, 3221, 295, 10, 70, "ExampleText",
 CellID->139781122]
}, Closed]],
Cell[CellGroupData[{
Cell[117095, 3236, 239, 7, 70, "ExampleSubsection",
 CellID->710982512],
Cell[117337, 3245, 295, 10, 70, "ExampleText",
 CellID->146199036]
}, Closed]],
Cell[CellGroupData[{
Cell[117669, 3260, 245, 7, 70, "ExampleSubsection",
 CellID->63619084],
Cell[117917, 3269, 295, 10, 70, "ExampleText",
 CellID->291231759]
}, Closed]],
Cell[CellGroupData[{
Cell[118249, 3284, 229, 7, 70, "ExampleSubsection",
 CellID->16906039],
Cell[118481, 3293, 295, 10, 70, "ExampleText",
 CellID->167536042]
}, Closed]],
Cell[CellGroupData[{
Cell[118813, 3308, 228, 7, 70, "ExampleSubsection",
 CellID->300239024],
Cell[119044, 3317, 294, 10, 70, "ExampleText",
 CellID->82714062]
}, Closed]],
Cell[CellGroupData[{
Cell[119375, 3332, 232, 7, 70, "ExampleSubsection",
 CellID->10962900],
Cell[119610, 3341, 295, 10, 70, "ExampleText",
 CellID->400881669]
}, Closed]],
Cell[CellGroupData[{
Cell[119942, 3356, 231, 7, 70, "ExampleSubsection",
 CellID->657379523],
Cell[120176, 3365, 295, 10, 70, "ExampleText",
 CellID->933251286]
}, Closed]],
Cell[CellGroupData[{
Cell[120508, 3380, 229, 7, 70, "ExampleSubsection",
 CellID->627803234],
Cell[120740, 3389, 295, 10, 70, "ExampleText",
 CellID->666482486]
}, Closed]],
Cell[CellGroupData[{
Cell[121072, 3404, 240, 7, 70, "ExampleSubsection",
 CellID->168403946],
Cell[121315, 3413, 295, 10, 70, "ExampleText",
 CellID->663416365]
}, Closed]],
Cell[CellGroupData[{
Cell[121647, 3428, 234, 7, 70, "ExampleSubsection",
 CellID->5683319],
Cell[121884, 3437, 295, 10, 70, "ExampleText",
 CellID->408511956]
}, Closed]],
Cell[CellGroupData[{
Cell[122216, 3452, 230, 7, 70, "ExampleSubsection",
 CellID->26089800],
Cell[122449, 3461, 294, 10, 70, "ExampleText",
 CellID->10872733]
}, Closed]],
Cell[CellGroupData[{
Cell[122780, 3476, 240, 7, 70, "ExampleSubsection",
 CellID->20983537],
Cell[123023, 3485, 293, 10, 70, "ExampleText",
 CellID->6072741]
}, Closed]],
Cell[CellGroupData[{
Cell[123353, 3500, 246, 7, 70, "ExampleSubsection",
 CellID->668766566],
Cell[123602, 3509, 294, 10, 70, "ExampleText",
 CellID->20897547]
}, Closed]],
Cell[CellGroupData[{
Cell[123933, 3524, 246, 7, 70, "ExampleSubsection",
 CellID->57061580],
Cell[124182, 3533, 295, 10, 70, "ExampleText",
 CellID->200677417]
}, Closed]],
Cell[CellGroupData[{
Cell[124514, 3548, 236, 7, 70, "ExampleSubsection",
 CellID->210302821],
Cell[124753, 3557, 295, 10, 70, "ExampleText",
 CellID->197216999]
}, Closed]],
Cell[CellGroupData[{
Cell[125085, 3572, 234, 7, 70, "ExampleSubsection",
 CellID->59103926],
Cell[125322, 3581, 295, 10, 70, "ExampleText",
 CellID->250151665]
}, Closed]],
Cell[CellGroupData[{
Cell[125654, 3596, 232, 7, 70, "ExampleSubsection",
 CellID->158482686],
Cell[125889, 3605, 295, 10, 70, "ExampleText",
 CellID->762503508]
}, Closed]],
Cell[CellGroupData[{
Cell[126221, 3620, 244, 7, 70, "ExampleSubsection",
 CellID->561054156],
Cell[126468, 3629, 295, 10, 70, "ExampleText",
 CellID->250437921]
}, Closed]],
Cell[CellGroupData[{
Cell[126800, 3644, 243, 7, 70, "ExampleSubsection",
 CellID->25688859],
Cell[127046, 3653, 294, 10, 70, "ExampleText",
 CellID->91625728]
}, Closed]],
Cell[CellGroupData[{
Cell[127377, 3668, 235, 7, 70, "ExampleSubsection",
 CellID->901325697],
Cell[127615, 3677, 295, 10, 70, "ExampleText",
 CellID->178535042]
}, Closed]],
Cell[CellGroupData[{
Cell[127947, 3692, 240, 7, 70, "ExampleSubsection",
 CellID->152132727],
Cell[128190, 3701, 295, 10, 70, "ExampleText",
 CellID->450194370]
}, Closed]],
Cell[CellGroupData[{
Cell[128522, 3716, 227, 7, 70, "ExampleSubsection",
 CellID->442610227],
Cell[128752, 3725, 294, 10, 70, "ExampleText",
 CellID->85989342]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[129095, 3741, 238, 7, 70, "ExampleSection",
 CellID->2123667759],
Cell[129336, 3750, 290, 8, 70, "ExampleText",
 CellID->244333150],
Cell[CellGroupData[{
Cell[129651, 3762, 296, 8, 70, "Input",
 CellID->685510281],
Cell[129950, 3772, 160, 5, 36, "Output",
 CellID->40831263]
}, Open  ]],
Cell[CellGroupData[{
Cell[130147, 3782, 282, 8, 70, "Input",
 CellID->613739841],
Cell[130432, 3792, 158, 5, 36, "Output",
 CellID->779495]
}, Open  ]],
Cell[CellGroupData[{
Cell[130627, 3802, 418, 11, 70, "Input",
 CellID->343308187],
Cell[131048, 3815, 161, 5, 36, "Output",
 CellID->198904121]
}, Open  ]],
Cell[CellGroupData[{
Cell[131246, 3825, 1184, 25, 70, "Input",
 CellID->265588945],
Cell[132433, 3852, 2919, 55, 70, "Output",
 CellID->493109508]
}, Open  ]],
Cell[CellGroupData[{
Cell[135389, 3912, 1121, 24, 70, "Input",
 CellID->69490996],
Cell[136513, 3938, 2919, 55, 70, "Output",
 CellID->527019805]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[139481, 3999, 231, 7, 70, "ExampleSection",
 CellID->1305812373],
Cell[139715, 4008, 124, 3, 70, "ExampleText",
 CellID->122584960],
Cell[CellGroupData[{
Cell[139864, 4015, 1717, 38, 70, "Input",
 CellID->588770042],
Cell[141584, 4055, 6927, 121, 70, "Output",
 CellID->11596780]
}, Open  ]],
Cell[148526, 4179, 135, 4, 70, "ExampleText",
 CellID->34611126],
Cell[CellGroupData[{
Cell[148686, 4187, 1099, 22, 70, "Input",
 CellID->165556273],
Cell[149788, 4211, 176, 5, 36, "Output",
 CellID->36312468]
}, Open  ]],
Cell[CellGroupData[{
Cell[150001, 4221, 2965, 61, 70, "Input",
 CellID->123494067],
Cell[152969, 4284, 3369, 63, 70, "Output",
 CellID->7906892]
}, Open  ]],
Cell[156353, 4350, 265, 5, 70, "ExampleText",
 CellID->176811898]
}, Closed]],
Cell[CellGroupData[{
Cell[156655, 4360, 228, 7, 70, "ExampleSection",
 CellID->589267740],
Cell[156886, 4369, 190, 4, 70, "ExampleText",
 CellID->343951738],
Cell[CellGroupData[{
Cell[157101, 4377, 653, 13, 70, "Input",
 CellID->15680167],
Cell[157757, 4392, 827, 25, 73, "Output",
 CellID->137141868]
}, Open  ]],
Cell[158599, 4420, 222, 6, 70, "ExampleText",
 CellID->19705918],
Cell[CellGroupData[{
Cell[158846, 4430, 1426, 31, 70, "Input",
 CellID->24670462],
Cell[160275, 4463, 11845, 202, 70, "Output",
 CellID->53807685]
}, Open  ]],
Cell[172135, 4668, 115, 2, 70, "ExampleText",
 CellID->54439511],
Cell[172253, 4672, 273, 5, 70, "ExampleText",
 CellID->653098498],
Cell[CellGroupData[{
Cell[172551, 4681, 2598, 53, 70, "Input",
 CellID->18597644],
Cell[175152, 4736, 861, 25, 60, "Output",
 CellID->539351534]
}, Open  ]],
Cell[176028, 4764, 114, 2, 70, "ExampleText",
 CellID->207112509],
Cell[CellGroupData[{
Cell[176167, 4770, 1377, 32, 70, "Input",
 CellID->386810867],
Cell[177547, 4804, 3155, 59, 70, "Output",
 CellID->441658052]
}, Open  ]],
Cell[CellGroupData[{
Cell[180739, 4868, 674, 13, 70, "Input",
 CellID->315617253],
Cell[181416, 4883, 434, 15, 39, "Output",
 CellID->303605228]
}, Open  ]],
Cell[CellGroupData[{
Cell[181887, 4903, 1787, 44, 70, "Input",
 CellID->224721781],
Cell[183677, 4949, 4383, 79, 70, "Output",
 CellID->162742633]
}, Open  ]],
Cell[188075, 5031, 85, 2, 70, "ExampleText",
 CellID->34282907],
Cell[188163, 5035, 142, 4, 70, "ExampleText",
 CellID->414176971],
Cell[188308, 5041, 757, 15, 70, "Input",
 CellID->377916220],
Cell[CellGroupData[{
Cell[189090, 5060, 664, 18, 70, "Input",
 CellID->31280917],
Cell[189757, 5080, 7310, 127, 70, "Output",
 CellID->58522005]
}, Open  ]],
Cell[CellGroupData[{
Cell[197104, 5212, 761, 17, 70, "Input",
 CellID->130858157],
Cell[197868, 5231, 297130, 4933, 70, "Output",
 CellID->377516488]
}, Open  ]],
Cell[CellGroupData[{
Cell[495035, 10169, 873, 20, 70, "Input",
 CellID->58749458],
Cell[495911, 10191, 12752, 217, 70, "Output",
 CellID->5666885]
}, Open  ]],
Cell[508678, 10411, 167, 4, 70, "ExampleText",
 CellID->54186080],
Cell[CellGroupData[{
Cell[508870, 10419, 1821, 43, 70, "Input",
 CellID->392115949],
Cell[510694, 10464, 7052, 123, 70, "Output",
 CellID->157812700]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[517807, 10594, 417, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[518227, 10608, 229, 6, 70, "SeeAlso",
 CellID->929782353],
Cell[518459, 10616, 227, 6, 70, "SeeAlso",
 CellID->439569870],
Cell[518689, 10624, 231, 6, 70, "ExampleText",
 CellID->347533806]
}, Open  ]],
Cell[518935, 10633, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

